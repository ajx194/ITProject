{"ast":null,"code":"import _classCallCheck from \"/Users/mohitsinhmar/Documents/Final Project Singh Movers and Packers/project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mohitsinhmar/Documents/Final Project Singh Movers and Packers/project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { ɵɵdefineInjectable, Injectable, EventEmitter, ElementRef, Input, Output, HostListener, Directive, NgModule } from '@angular/core';\nimport { saveAs } from 'file-saver';\nimport { HttpParams, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar FileSaverService = /*#__PURE__*/function () {\n  function FileSaverService() {\n    _classCallCheck(this, FileSaverService);\n  }\n\n  _createClass(FileSaverService, [{\n    key: \"isFileSaverSupported\",\n    get: function get() {\n      try {\n        return !!new Blob();\n      } catch (e) {\n        return false;\n      }\n    }\n  }, {\n    key: \"genType\",\n    value: function genType(fileName) {\n      if (!fileName || fileName.lastIndexOf('.') === -1) {\n        return 'text/plain';\n      }\n\n      var type = fileName.substr(fileName.lastIndexOf('.') + 1);\n\n      switch (type) {\n        case 'txt':\n          return 'text/plain';\n\n        case 'xml':\n        case 'html':\n          return \"text/\".concat(type);\n\n        case 'json':\n          return 'octet/stream';\n\n        default:\n          return \"application/\".concat(type);\n      }\n    }\n  }, {\n    key: \"save\",\n    value: function save(blob, fileName, filtType, option) {\n      if (!blob) {\n        throw new Error('Data argument should be a blob instance');\n      }\n\n      var file = new Blob([blob], {\n        type: filtType || blob.type || this.genType(fileName)\n      });\n      saveAs(file, decodeURI(fileName || 'download'), option);\n    }\n  }, {\n    key: \"saveText\",\n    value: function saveText(txt, fileName, option) {\n      var blob = new Blob([txt]);\n      this.save(blob, fileName, null, option);\n    }\n  }]);\n\n  return FileSaverService;\n}();\n\nFileSaverService.ɵfac = function FileSaverService_Factory(t) {\n  return new (t || FileSaverService)();\n};\n\nFileSaverService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: FileSaverService,\n  factory: function factory(t) {\n    return FileSaverService.ɵfac(t);\n  },\n  providedIn: 'root'\n});\nFileSaverService.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function FileSaverService_Factory() {\n    return new FileSaverService();\n  },\n  token: FileSaverService,\n  providedIn: \"root\"\n});\n\nvar __decorate$1 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar FileSaverDirective = /*#__PURE__*/function () {\n  function FileSaverDirective(el, fss, httpClient) {\n    _classCallCheck(this, FileSaverDirective);\n\n    this.el = el;\n    this.fss = fss;\n    this.httpClient = httpClient;\n    this.method = 'GET';\n    this.success = new EventEmitter();\n    this.error = new EventEmitter();\n\n    if (!fss.isFileSaverSupported) {\n      el.nativeElement.classList.add(\"filesaver__not-support\");\n    }\n  }\n\n  _createClass(FileSaverDirective, [{\n    key: \"getName\",\n    value: function getName(res) {\n      return decodeURI(this.fileName || res.headers.get('filename') || res.headers.get('x-filename'));\n    }\n  }, {\n    key: \"_click\",\n    value: function _click() {\n      var _this = this;\n\n      if (!this.fss.isFileSaverSupported) {\n        return;\n      }\n\n      var req = this.http;\n\n      if (!req) {\n        var params = new HttpParams();\n        var query = this.query || {}; // tslint:disable-next-line:forin\n\n        for (var item in query) {\n          params.set(item, query[item]);\n        }\n\n        req = this.httpClient.request(this.method, this.url, {\n          observe: 'response',\n          responseType: 'blob',\n          headers: this.header,\n          params: params\n        });\n      }\n\n      this.setDisabled(true);\n      req.subscribe(function (res) {\n        if (res.status !== 200 || res.body.size <= 0) {\n          _this.error.emit(res);\n\n          return;\n        }\n\n        _this.fss.save(res.body, _this.getName(res), null, _this.fsOptions);\n\n        _this.success.emit(res);\n      }, function (err) {\n        return _this.error.emit(err);\n      }, function () {\n        return _this.setDisabled(false);\n      });\n    }\n  }, {\n    key: \"setDisabled\",\n    value: function setDisabled(status) {\n      var el = this.el.nativeElement;\n      el.disabled = status;\n      el.classList[status ? 'add' : 'remove'](\"filesaver__disabled\");\n    }\n  }]);\n\n  return FileSaverDirective;\n}();\n\nFileSaverDirective.ɵfac = function FileSaverDirective_Factory(t) {\n  return new (t || FileSaverDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FileSaverService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HttpClient));\n};\n\nFileSaverDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FileSaverDirective,\n  selectors: [[\"\", \"fileSaver\", \"\"]],\n  hostBindings: function FileSaverDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function FileSaverDirective_click_HostBindingHandler() {\n        return ctx._click();\n      });\n    }\n  },\n  inputs: {\n    method: \"method\",\n    http: \"http\",\n    query: \"query\",\n    header: \"header\",\n    url: \"url\",\n    fileName: \"fileName\",\n    fsOptions: \"fsOptions\"\n  },\n  outputs: {\n    success: \"success\",\n    error: \"error\"\n  },\n  exportAs: [\"fileSaver\"]\n});\n\nFileSaverDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: FileSaverService\n  }, {\n    type: HttpClient\n  }];\n};\n\n__decorate$1([Input(), __metadata(\"design:type\", Object)], FileSaverDirective.prototype, \"method\", void 0);\n\n__decorate$1([Input(), __metadata(\"design:type\", Observable)], FileSaverDirective.prototype, \"http\", void 0);\n\n__decorate$1([Input(), __metadata(\"design:type\", Object)], FileSaverDirective.prototype, \"query\", void 0);\n\n__decorate$1([Input(), __metadata(\"design:type\", Object)], FileSaverDirective.prototype, \"header\", void 0);\n\n__decorate$1([Input(), __metadata(\"design:type\", String)], FileSaverDirective.prototype, \"url\", void 0);\n\n__decorate$1([Input(), __metadata(\"design:type\", String)], FileSaverDirective.prototype, \"fileName\", void 0);\n\n__decorate$1([Input(), __metadata(\"design:type\", Object)], FileSaverDirective.prototype, \"fsOptions\", void 0);\n\n__decorate$1([Output(), __metadata(\"design:type\", Object)], FileSaverDirective.prototype, \"success\", void 0);\n\n__decorate$1([Output(), __metadata(\"design:type\", Object)], FileSaverDirective.prototype, \"error\", void 0);\n\n__decorate$1([HostListener('click'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], FileSaverDirective.prototype, \"_click\", null);\n\nFileSaverDirective = __decorate$1([__metadata(\"design:paramtypes\", [ElementRef, FileSaverService, HttpClient])], FileSaverDirective);\n\nvar __decorate$2 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar FileSaverModule = /*#__PURE__*/_createClass(function FileSaverModule() {\n  _classCallCheck(this, FileSaverModule);\n});\n\nFileSaverModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: FileSaverModule\n});\nFileSaverModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function FileSaverModule_Factory(t) {\n    return new (t || FileSaverModule)();\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileSaverService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileSaverDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[fileSaver]',\n      exportAs: 'fileSaver'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: FileSaverService\n    }, {\n      type: ɵngcc1.HttpClient\n    }];\n  }, {\n    method: [{\n      type: Input\n    }],\n    success: [{\n      type: Output\n    }],\n    error: [{\n      type: Output\n    }],\n    _click: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    http: [{\n      type: Input\n    }],\n    query: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    fileName: [{\n      type: Input\n    }],\n    fsOptions: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FileSaverModule, {\n    declarations: [FileSaverDirective],\n    exports: [FileSaverDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileSaverModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FileSaverDirective],\n      exports: [FileSaverDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FileSaverDirective, FileSaverModule, FileSaverService };","map":{"version":3,"sources":["ngx-filesaver/src/filesaver.service.ts","ngx-filesaver/src/filesaver.directive.ts","ngx-filesaver/src/filesaver.module.ts","ngx-filesaver/ngx-filesaver.ts"],"names":["__decorate"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { saveAs, FileSaverOptions } from 'file-saver';\n\n@Injectable({ providedIn: 'root' })\nexport class FileSaverService {\n  get isFileSaverSupported(): boolean {\n    try {\n      return !!new Blob();\n    } catch (e) {\n      return false;\n    }\n  }\n\n  genType(fileName?: string): string {\n    if (!fileName || fileName.lastIndexOf('.') === -1) {\n      return 'text/plain';\n    }\n    const type = fileName.substr(fileName.lastIndexOf('.') + 1);\n    switch (type) {\n      case 'txt':\n        return 'text/plain';\n      case 'xml':\n      case 'html':\n        return `text/${type}`;\n      case 'json':\n        return 'octet/stream';\n      default:\n        return `application/${type}`;\n    }\n  }\n\n  save(blob: Blob, fileName?: string, filtType?: string, option?: FileSaverOptions): void {\n    if (!blob) {\n      throw new Error('Data argument should be a blob instance');\n    }\n\n    const file = new Blob([blob], { type: filtType || blob.type || this.genType(fileName) });\n    saveAs(file, decodeURI(fileName || 'download'), option);\n  }\n\n  saveText(txt: string, fileName?: string, option?: FileSaverOptions): void {\n    const blob = new Blob([txt]);\n    this.save(blob, fileName, null, option);\n  }\n}\n","import { Directive, ElementRef, Input, HostListener, EventEmitter, Output } from '@angular/core';\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FileSaverOptions } from 'file-saver';\nimport { FileSaverService } from './filesaver.service';\n\n@Directive({\n  selector: '[fileSaver]',\n  exportAs: 'fileSaver',\n})\nexport class FileSaverDirective {\n  @Input() method = 'GET';\n  @Input() http: Observable<HttpResponse<Blob>>;\n  @Input() query: any;\n  @Input() header: any;\n  @Input() url: string;\n  @Input() fileName: string;\n  @Input() fsOptions: FileSaverOptions;\n  @Output() readonly success = new EventEmitter<HttpResponse<Blob>>();\n  @Output() readonly error = new EventEmitter<any>();\n\n  constructor(private el: ElementRef<HTMLButtonElement>, private fss: FileSaverService, private httpClient: HttpClient) {\n    if (!fss.isFileSaverSupported) {\n      el.nativeElement.classList.add(`filesaver__not-support`);\n    }\n  }\n\n  private getName(res: HttpResponse<Blob>) {\n    return decodeURI(this.fileName || res.headers.get('filename') || res.headers.get('x-filename'));\n  }\n\n  @HostListener('click')\n  _click() {\n    if (!this.fss.isFileSaverSupported) {\n      return;\n    }\n    let req = this.http;\n    if (!req) {\n      const params = new HttpParams();\n      const query = this.query || {};\n      // tslint:disable-next-line:forin\n      for (const item in query) {\n        params.set(item, query[item]);\n      }\n\n      req = this.httpClient.request(this.method, this.url, {\n        observe: 'response',\n        responseType: 'blob',\n        headers: this.header,\n        params,\n      });\n    }\n\n    this.setDisabled(true);\n    req.subscribe(\n      res => {\n        if (res.status !== 200 || res.body.size <= 0) {\n          this.error.emit(res);\n          return;\n        }\n        this.fss.save(res.body, this.getName(res), null, this.fsOptions);\n        this.success.emit(res);\n      },\n      err => this.error.emit(err),\n      () => this.setDisabled(false),\n    );\n  }\n\n  private setDisabled(status: boolean) {\n    const el = this.el.nativeElement;\n    el.disabled = status;\n    el.classList[status ? 'add' : 'remove'](`filesaver__disabled`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FileSaverDirective } from './filesaver.directive';\n\n@NgModule({\n  declarations: [FileSaverDirective],\n  exports: [FileSaverDirective],\n})\nexport class FileSaverModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]},"metadata":{},"sourceType":"module"}