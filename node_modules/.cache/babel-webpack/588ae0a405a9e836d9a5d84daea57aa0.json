{"ast":null,"code":"import _get from \"/Users/ajx/Documents/project/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/ajx/Documents/project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ajx/Documents/project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/ajx/Documents/project/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createForOfIteratorHelper from \"/Users/ajx/Documents/project/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/ajx/Documents/project/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/ajx/Documents/project/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _createClass from \"/Users/ajx/Documents/project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/ajx/Documents/project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27, _templateObject28, _templateObject29, _templateObject30, _templateObject31, _templateObject32, _templateObject33, _templateObject34, _templateObject35, _templateObject36;\n\nimport { ɵɵdefineInjectable, Injectable, ɵɵinject, Directive, TemplateRef, EventEmitter, Input, Output, ContentChildren, Component, ViewEncapsulation, ElementRef, NgZone, ChangeDetectorRef, Optional, Host, NgModule, ChangeDetectionStrategy, Renderer2, forwardRef, Inject, PLATFORM_ID, LOCALE_ID, ViewChild, ContentChild, ViewContainerRef, ComponentFactoryResolver, Injector, ApplicationRef, INJECTOR, RendererFactory2, Attribute, ViewChildren, HostBinding, InjectionToken } from '@angular/core';\nimport { CommonModule, isPlatformBrowser, getLocaleMonthNames, FormStyle, TranslationWidth, getLocaleDayNames, formatDate, DOCUMENT, getLocaleDayPeriods } from '@angular/common';\nimport { Observable, EMPTY, of, Subject, fromEvent, timer, race, BehaviorSubject, combineLatest, NEVER, zip, merge } from 'rxjs';\nimport { endWith, takeUntil, filter, take, map, startWith, distinctUntilChanged, switchMap, tap, withLatestFrom, delay, mergeMap, skip, share } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgbAccordion_ng_template_0_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var panel_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngbPanelToggle\", panel_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", panel_r3.title, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", panel_r3.titleTpl == null ? null : panel_r3.titleTpl.templateRef);\n  }\n}\n\nfunction NgbAccordion_ng_template_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_2_div_3_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_div_3_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var panel_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵpropertyInterpolate(\"id\", panel_r5.id);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", panel_r5.id + \"-header\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (panel_r5.contentTpl == null ? null : panel_r5.contentTpl.templateRef) || null);\n  }\n}\n\nvar _c0 = function _c0(a0, a1) {\n  return {\n    $implicit: a0,\n    opened: a1\n  };\n};\n\nfunction NgbAccordion_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_ng_template_2_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbAccordion_ng_template_2_div_3_Template, 3, 3, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var panel_r5 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵclassMap(\"card \" + (panel_r5.cardClass || \"\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"card-header \" + (panel_r5.type ? \"bg-\" + panel_r5.type : ctx_r2.type ? \"bg-\" + ctx_r2.type : \"\"));\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"\", panel_r5.id, \"-header\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (panel_r5.headerTpl == null ? null : panel_r5.headerTpl.templateRef) || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(8, _c0, panel_r5, panel_r5.isOpen));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r2.destroyOnHide || panel_r5.isOpen || panel_r5.transitionRunning);\n  }\n}\n\nfunction NgbAlert_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbAlert_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.close();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 2);\n    ɵngcc0.ɵɵtext(2, \"\\xD7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c3 = [\"*\"];\n\nfunction NgbCarousel_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var slide_r4 = ctx.$implicit;\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      ctx_r5.focus();\n      return ctx_r5.select(slide_r4.id, ctx_r5.NgbSlideEventSource.INDICATOR);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var slide_r4 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r4.id === ctx_r0.activeId);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", \"slide-\" + slide_r4.id)(\"aria-controls\", \"slide-\" + slide_r4.id)(\"aria-selected\", slide_r4.id === ctx_r0.activeId);\n  }\n}\n\nfunction NgbCarousel_div_3_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbCarousel_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 8);\n    ɵngcc0.ɵɵi18n(2, 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbCarousel_div_3_ng_template_3_Template, 0, 0, \"ng-template\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var slide_r7 = ctx.$implicit;\n    var i_r8 = ctx.index;\n    var c_r9 = ctx.count;\n    ɵngcc0.ɵɵproperty(\"id\", \"slide-\" + slide_r7.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵi18nExp(i_r8 + 1)(c_r9);\n    ɵngcc0.ɵɵi18nApply(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", slide_r7.tplRef);\n  }\n}\n\nfunction NgbCarousel_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_a_4_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.arrowLeft();\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 8);\n    ɵngcc0.ɵɵi18n(3, 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbCarousel_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 14);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_a_5_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.arrowRight();\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 8);\n    ɵngcc0.ɵɵi18n(3, 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c10 = [\"defaultDayTemplate\"];\nvar _c11 = [\"content\"];\n\nfunction NgbDatepicker_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    var date_r8 = ctx.date;\n    var currentMonth_r9 = ctx.currentMonth;\n    var selected_r10 = ctx.selected;\n    var disabled_r11 = ctx.disabled;\n    var focused_r12 = ctx.focused;\n    ɵngcc0.ɵɵproperty(\"date\", date_r8)(\"currentMonth\", currentMonth_r9)(\"selected\", selected_r10)(\"disabled\", disabled_r11)(\"focused\", focused_r12);\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var month_r14 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r16.i18n.getMonthLabel(month_r14.firstDate), \" \");\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepicker_ng_template_2_div_0_div_1_Template, 2, 1, \"div\", 10);\n    ɵngcc0.ɵɵelement(2, \"ngb-datepicker-month\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var month_r14 = ctx.$implicit;\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.navigation === \"none\" || ctx_r13.displayMonths > 1 && ctx_r13.navigation === \"select\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"month\", month_r14.firstDate);\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepicker_ng_template_2_div_0_Template, 3, 2, \"div\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.model.months);\n  }\n}\n\nfunction NgbDatepicker_ngb_datepicker_navigation_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ngb-datepicker-navigation\", 13);\n    ɵngcc0.ɵɵlistener(\"navigate\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_navigate_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.onNavigateEvent($event);\n    })(\"select\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_select_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.onNavigateDateSelect($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"date\", ctx_r4.model.firstDate)(\"months\", ctx_r4.model.months)(\"disabled\", ctx_r4.model.disabled)(\"showSelect\", ctx_r4.model.navigation === \"select\")(\"prevDisabled\", ctx_r4.model.prevDisabled)(\"nextDisabled\", ctx_r4.model.nextDisabled)(\"selectBoxes\", ctx_r4.model.selectBoxes);\n  }\n}\n\nfunction NgbDatepicker_ng_template_8_Template(rf, ctx) {}\n\nfunction NgbDatepicker_ng_template_9_Template(rf, ctx) {}\n\nfunction NgbDatepickerMonth_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.i18n.getWeekLabel());\n  }\n}\n\nfunction NgbDatepickerMonth_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var weekday_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(weekday_r4);\n  }\n}\n\nfunction NgbDatepickerMonth_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_div_0_div_1_Template, 2, 1, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, NgbDatepickerMonth_div_0_div_2_Template, 2, 1, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.datepicker.showWeekNumbers);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.viewModel.weekdays);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var week_r5 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.i18n.getWeekNumerals(week_r5.number));\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template(rf, ctx) {}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n  }\n\n  if (rf & 2) {\n    var day_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.datepicker.dayTemplate)(\"ngTemplateOutletContext\", day_r10.context);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerMonth_ng_template_1_div_0_div_2_Template_div_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var day_r10 = ctx.$implicit;\n      var ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n      ctx_r14.doSelect(day_r10);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template, 1, 2, \"ng-template\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var day_r10 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"disabled\", day_r10.context.disabled)(\"hidden\", day_r10.hidden)(\"ngb-dp-today\", day_r10.context.today);\n    ɵngcc0.ɵɵproperty(\"tabindex\", day_r10.tabindex);\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r10.ariaLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !day_r10.hidden);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_1_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(2, NgbDatepickerMonth_ng_template_1_div_0_div_2_Template, 2, 9, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var week_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.datepicker.showWeekNumbers);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", week_r5.days);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_Template, 3, 2, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    var week_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", !week_r5.collapsed);\n  }\n}\n\nfunction NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ngb-datepicker-navigation-select\", 7);\n    ɵngcc0.ɵɵlistener(\"select\", function NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template_ngb_datepicker_navigation_select_select_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.select.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"date\", ctx_r0.date)(\"disabled\", ctx_r0.disabled)(\"months\", ctx_r0.selectBoxes.months)(\"years\", ctx_r0.selectBoxes.years);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 0);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 0);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_div_0_Template, 1, 0, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 10);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbDatepickerNavigation_4_ng_template_0_div_3_Template, 1, 0, \"div\", 9);\n  }\n\n  if (rf & 2) {\n    var month_r5 = ctx.$implicit;\n    var i_r6 = ctx.index;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", i_r6 > 0);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4.i18n.getMonthLabel(month_r5.firstDate), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", i_r6 !== ctx_r4.months.length - 1);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_Template, 4, 3, \"ng-template\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.months);\n  }\n}\n\nvar _c20 = [\"ngbDatepickerDayView\", \"\"];\nvar _c21 = [\"month\"];\nvar _c22 = [\"year\"];\n\nfunction NgbDatepickerNavigationSelect_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var m_r4 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", m_r4);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1.i18n.getMonthFullName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.i18n.getMonthShortName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n  }\n}\n\nfunction NgbDatepickerNavigationSelect_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var y_r5 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", y_r5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.i18n.getYearNumerals(y_r5));\n  }\n}\n\nvar _c31 = [\"dialog\"];\nvar _c32 = [\"ngbNavOutlet\", \"\"];\n\nfunction NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template(rf, ctx) {}\n\nvar _c33 = function _c33(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NgbNavOutlet_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template, 0, 0, \"ng-template\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"item\", item_r1)(\"nav\", ctx_r2.nav)(\"role\", ctx_r2.paneRole);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (item_r1.contentTpl == null ? null : item_r1.contentTpl.templateRef) || null)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(5, _c33, item_r1.active || ctx_r2.isPanelTransitioning(item_r1)));\n  }\n}\n\nfunction NgbNavOutlet_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_div_0_Template, 2, 7, \"div\", 1);\n  }\n\n  if (rf & 2) {\n    var item_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r1.isPanelInDom() || ctx_r0.isPanelTransitioning(item_r1));\n  }\n}\n\nfunction NgbPagination_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵi18n(1, 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵi18n(1, 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵi18n(1, 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵi18n(1, 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0, \"...\");\n  }\n}\n\nfunction NgbPagination_ng_template_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 15);\n    ɵngcc0.ɵɵtext(1, \"(current)\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_ng_template_10_span_1_Template, 2, 0, \"span\", 14);\n  }\n\n  if (rf & 2) {\n    var page_r19 = ctx.$implicit;\n    var currentPage_r20 = ctx.currentPage;\n    ɵngcc0.ɵɵtextInterpolate1(\" \", page_r19, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", page_r19 === currentPage_r20);\n  }\n}\n\nfunction NgbPagination_ng_template_12_li_0_a_1_ng_template_1_Template(rf, ctx) {}\n\nvar _c42 = function _c42(a1) {\n  return {\n    disabled: true,\n    currentPage: a1\n  };\n};\n\nfunction NgbPagination_ng_template_12_li_0_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 20);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_ng_template_12_li_0_a_1_ng_template_1_Template, 0, 0, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var page_r22 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r27 = ɵngcc0.ɵɵnextContext();\n\n    var _r8 = ɵngcc0.ɵɵreference(9);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r27.tplEllipsis == null ? null : ctx_r27.tplEllipsis.templateRef) || _r8)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c42, page_r22));\n  }\n}\n\nfunction NgbPagination_ng_template_12_li_0_a_2_ng_template_1_Template(rf, ctx) {}\n\nvar _c43 = function _c43(a0, a1, a2) {\n  return {\n    disabled: a0,\n    $implicit: a1,\n    currentPage: a2\n  };\n};\n\nfunction NgbPagination_ng_template_12_li_0_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r34 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_ng_template_12_li_0_a_2_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r34);\n      var pageNumber_r26 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r32 = ɵngcc0.ɵɵnextContext(2);\n      ctx_r32.selectPage(pageNumber_r26);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_ng_template_12_li_0_a_2_ng_template_1_Template, 0, 0, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var pageNumber_r26 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r35 = ɵngcc0.ɵɵnextContext();\n    var disabled_r24 = ctx_r35.disabled;\n    var page_r22 = ctx_r35.$implicit;\n    var ctx_r28 = ɵngcc0.ɵɵnextContext();\n\n    var _r10 = ɵngcc0.ɵɵreference(11);\n\n    ɵngcc0.ɵɵattribute(\"tabindex\", disabled_r24 ? \"-1\" : null)(\"aria-disabled\", disabled_r24 ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r28.tplNumber == null ? null : ctx_r28.tplNumber.templateRef) || _r10)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(4, _c43, disabled_r24, pageNumber_r26, page_r22));\n  }\n}\n\nfunction NgbPagination_ng_template_12_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 17);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_ng_template_12_li_0_a_1_Template, 2, 4, \"a\", 18);\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_ng_template_12_li_0_a_2_Template, 2, 8, \"a\", 19);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var pageNumber_r26 = ctx.$implicit;\n    var ctx_r37 = ɵngcc0.ɵɵnextContext();\n    var page_r22 = ctx_r37.$implicit;\n    var disabled_r24 = ctx_r37.disabled;\n    var ctx_r25 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", pageNumber_r26 === page_r22)(\"disabled\", ctx_r25.isEllipsis(pageNumber_r26) || disabled_r24);\n    ɵngcc0.ɵɵattribute(\"aria-current\", pageNumber_r26 === page_r22 ? \"page\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r25.isEllipsis(pageNumber_r26));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r25.isEllipsis(pageNumber_r26));\n  }\n}\n\nfunction NgbPagination_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbPagination_ng_template_12_li_0_Template, 3, 7, \"li\", 16);\n  }\n\n  if (rf & 2) {\n    var pages_r23 = ctx.pages;\n    ɵngcc0.ɵɵproperty(\"ngForOf\", pages_r23);\n  }\n}\n\nfunction NgbPagination_li_15_ng_template_2_Template(rf, ctx) {}\n\nvar _c46 = function _c46(a0, a1) {\n  return {\n    disabled: a0,\n    currentPage: a1\n  };\n};\n\nfunction NgbPagination_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r40 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 22);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_15_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r40);\n      var ctx_r39 = ɵngcc0.ɵɵnextContext();\n      ctx_r39.selectPage(1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_15_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r14.previousDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r14.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r14.previousDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r14.tplFirst == null ? null : ctx_r14.tplFirst.templateRef) || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c46, ctx_r14.previousDisabled(), ctx_r14.page));\n  }\n}\n\nfunction NgbPagination_li_16_ng_template_2_Template(rf, ctx) {}\n\nvar _c49 = function _c49(a0) {\n  return {\n    disabled: a0\n  };\n};\n\nfunction NgbPagination_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r43 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_16_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r43);\n      var ctx_r42 = ɵngcc0.ɵɵnextContext();\n      ctx_r42.selectPage(ctx_r42.page - 1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_16_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r15 = ɵngcc0.ɵɵnextContext();\n\n    var _r2 = ɵngcc0.ɵɵreference(3);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r15.previousDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r15.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r15.previousDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r15.tplPrevious == null ? null : ctx_r15.tplPrevious.templateRef) || _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(6, _c49, ctx_r15.previousDisabled()));\n  }\n}\n\nfunction NgbPagination_ng_template_17_Template(rf, ctx) {}\n\nfunction NgbPagination_li_18_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbPagination_li_18_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r46 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_18_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r46);\n      var ctx_r45 = ɵngcc0.ɵɵnextContext();\n      ctx_r45.selectPage(ctx_r45.page + 1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_18_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r17 = ɵngcc0.ɵɵnextContext();\n\n    var _r4 = ɵngcc0.ɵɵreference(5);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r17.nextDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r17.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r17.nextDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r17.tplNext == null ? null : ctx_r17.tplNext.templateRef) || _r4)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c46, ctx_r17.nextDisabled(), ctx_r17.page));\n  }\n}\n\nfunction NgbPagination_li_19_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbPagination_li_19_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r49 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 25);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_19_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r49);\n      var ctx_r48 = ɵngcc0.ɵɵnextContext();\n      ctx_r48.selectPage(ctx_r48.pageCount);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_19_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r18 = ɵngcc0.ɵɵnextContext();\n\n    var _r6 = ɵngcc0.ɵɵreference(7);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r18.nextDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r18.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r18.nextDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r18.tplLast == null ? null : ctx_r18.tplLast.templateRef) || _r6)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c46, ctx_r18.nextDisabled(), ctx_r18.page));\n  }\n}\n\nvar _c54 = function _c54(a0, a1, a2) {\n  return {\n    $implicit: a0,\n    pages: a1,\n    disabled: a2\n  };\n};\n\nfunction NgbPopoverWindow_h3_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.title);\n  }\n}\n\nfunction NgbPopoverWindow_h3_1_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbPopoverWindow_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"h3\", 3);\n    ɵngcc0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_ng_template_1_Template, 1, 1, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgbPopoverWindow_h3_1_ng_template_3_Template, 0, 0, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r1 = ɵngcc0.ɵɵreference(2);\n\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.isTitleTemplate() ? ctx_r0.title : _r1)(\"ngTemplateOutletContext\", ctx_r0.context);\n  }\n}\n\nfunction NgbProgressbar_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵi18n(1, 2);\n    ɵngcc0.ɵɵpipe(2, \"percent\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵi18nExp(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.getValue() / ctx_r0.max));\n    ɵngcc0.ɵɵi18nApply(1);\n  }\n}\n\nfunction NgbRating_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var fill_r3 = ctx.fill;\n    ɵngcc0.ɵɵtextInterpolate(fill_r3 === 100 ? \"\\u2605\" : \"\\u2606\");\n  }\n}\n\nfunction NgbRating_ng_template_2_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbRating_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"span\", 3);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NgbRating_ng_template_2_Template_span_mouseenter_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var index_r4 = ctx.index;\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.enter(index_r4 + 1);\n    })(\"click\", function NgbRating_ng_template_2_Template_span_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var index_r4 = ctx.index;\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.handleClick(index_r4 + 1);\n    });\n    ɵngcc0.ɵɵtemplate(3, NgbRating_ng_template_2_ng_template_3_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var index_r4 = ctx.index;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", index_r4 < ctx_r2.nextRate ? \"*\" : \" \", \")\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"cursor\", ctx_r2.isInteractive() ? \"pointer\" : \"default\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.starTemplate || ctx_r2.starTemplateFromContent || _r0)(\"ngTemplateOutletContext\", ctx_r2.contexts[index_r4]);\n  }\n}\n\nfunction NgbTimepicker_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.changeHour(ctx_r8.hourStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r0.isSmallSize)(\"btn-lg\", ctx_r0.isLargeSize)(\"disabled\", ctx_r0.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_5_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.changeHour(-ctx_r10.hourStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_9_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.changeMinute(ctx_r12.minuteStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r2.isSmallSize)(\"btn-lg\", ctx_r2.isLargeSize)(\"disabled\", ctx_r2.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_11_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.changeMinute(-ctx_r14.minuteStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r3.isSmallSize)(\"btn-lg\", ctx_r3.isLargeSize)(\"disabled\", ctx_r3.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r3.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵtext(1, \":\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbTimepicker_div_13_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r18.changeSecond(ctx_r18.secondStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 21);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r16.isSmallSize)(\"btn-lg\", ctx_r16.isLargeSize)(\"disabled\", ctx_r16.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r16.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_13_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r20.changeSecond(-ctx_r20.secondStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r17.isSmallSize)(\"btn-lg\", ctx_r17.isLargeSize)(\"disabled\", ctx_r17.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r17.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵtemplate(1, NgbTimepicker_div_13_button_1_Template, 4, 7, \"button\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 20);\n    ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_div_13_Template_input_change_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r22 = ɵngcc0.ɵɵnextContext();\n      return ctx_r22.updateSecond($event.target.value);\n    })(\"blur\", function NgbTimepicker_div_13_Template_input_blur_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ctx_r24.handleBlur();\n    })(\"input\", function NgbTimepicker_div_13_Template_input_input_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r25 = ɵngcc0.ɵɵnextContext();\n      return ctx_r25.formatInput($event.target);\n    })(\"keydown.ArrowUp\", function NgbTimepicker_div_13_Template_input_keydown_ArrowUp_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r26 = ɵngcc0.ɵɵnextContext();\n      ctx_r26.changeSecond(ctx_r26.secondStep);\n      return $event.preventDefault();\n    })(\"keydown.ArrowDown\", function NgbTimepicker_div_13_Template_input_keydown_ArrowDown_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r27 = ɵngcc0.ɵɵnextContext();\n      ctx_r27.changeSecond(-ctx_r27.secondStep);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbTimepicker_div_13_button_3_Template, 4, 7, \"button\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r5.isSmallSize)(\"form-control-lg\", ctx_r5.isLargeSize);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r5.formatMinSec(ctx_r5.model == null ? null : ctx_r5.model.second))(\"readOnly\", ctx_r5.readonlyInputs)(\"disabled\", ctx_r5.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n  }\n}\n\nfunction NgbTimepicker_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n}\n\nfunction NgbTimepicker_div_15_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵi18n(1, 27);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r28 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵi18nExp(ctx_r28.i18n.getAfternoonPeriod());\n    ɵngcc0.ɵɵi18nApply(1);\n  }\n}\n\nfunction NgbTimepicker_div_15_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵi18n(0, 28);\n  }\n\n  if (rf & 2) {\n    var ctx_r30 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵi18nExp(ctx_r30.i18n.getMorningPeriod());\n    ɵngcc0.ɵɵi18nApply(0);\n  }\n}\n\nfunction NgbTimepicker_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r32 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 23);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_15_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r32);\n      var ctx_r31 = ɵngcc0.ɵɵnextContext();\n      return ctx_r31.toggleMeridian();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbTimepicker_div_15_ng_container_2_Template, 2, 1, \"ng-container\", 25);\n    ɵngcc0.ɵɵtemplate(3, NgbTimepicker_div_15_ng_template_3_Template, 1, 1, \"ng-template\", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r29 = ɵngcc0.ɵɵreference(4);\n\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r7.isSmallSize)(\"btn-lg\", ctx_r7.isLargeSize)(\"disabled\", ctx_r7.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r7.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.model && ctx_r7.model.hour >= 12)(\"ngIfElse\", _r29);\n  }\n}\n\nfunction NgbToast_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"strong\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.header);\n  }\n}\n\nfunction NgbToast_ng_template_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NgbToast_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(1, NgbToast_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementStart(2, \"button\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbToast_ng_template_2_Template_button_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.hide();\n    });\n    ɵngcc0.ɵɵelementStart(3, \"span\", 7);\n    ɵngcc0.ɵɵtext(4, \"\\xD7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.contentHeaderTpl || _r0);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var part_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r3.highlightClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(part_r1);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var part_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(part_r1);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbHighlight_ng_template_0_span_0_Template, 2, 3, \"span\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgbHighlight_ng_template_0_ng_template_1_Template, 1, 1, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    var isOdd_r2 = ctx.odd;\n\n    var _r4 = ɵngcc0.ɵɵreference(2);\n\n    ɵngcc0.ɵɵproperty(\"ngIf\", isOdd_r2)(\"ngIfElse\", _r4);\n  }\n}\n\nfunction NgbTypeaheadWindow_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ngb-highlight\", 2);\n  }\n\n  if (rf & 2) {\n    var result_r3 = ctx.result;\n    var term_r4 = ctx.term;\n    var formatter_r5 = ctx.formatter;\n    ɵngcc0.ɵɵproperty(\"result\", formatter_r5(result_r3))(\"term\", term_r4);\n  }\n}\n\nfunction NgbTypeaheadWindow_ng_template_2_ng_template_1_Template(rf, ctx) {}\n\nvar _c87 = function _c87(a0, a1, a2) {\n  return {\n    result: a0,\n    term: a1,\n    formatter: a2\n  };\n};\n\nfunction NgbTypeaheadWindow_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NgbTypeaheadWindow_ng_template_2_Template_button_mouseenter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var idx_r7 = ctx.index;\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.markActive(idx_r7);\n    })(\"click\", function NgbTypeaheadWindow_ng_template_2_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var result_r6 = ctx.$implicit;\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.select(result_r6);\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbTypeaheadWindow_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var result_r6 = ctx.$implicit;\n    var idx_r7 = ctx.index;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵclassProp(\"active\", idx_r7 === ctx_r2.activeIdx);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r2.id + \"-\" + idx_r7);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.resultTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(5, _c87, result_r6, ctx_r2.term, ctx_r2.formatter));\n  }\n}\n\nfunction toInteger(value) {\n  return parseInt(\"\".concat(value), 10);\n}\n\nfunction toString(value) {\n  return value !== undefined && value !== null ? \"\".concat(value) : '';\n}\n\nfunction getValueInRange(value, max) {\n  var min = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return Math.max(Math.min(value, max), min);\n}\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return !isNaN(toInteger(value));\n}\n\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nfunction padNumber(value) {\n  if (isNumber(value)) {\n    return \"0\".concat(value).slice(-2);\n  } else {\n    return '';\n  }\n}\n\nfunction regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nfunction hasClassName(element, className) {\n  return element && element.className && element.className.split && element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function (s) {\n    var el = this;\n\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n\nfunction closest(element, selector) {\n  if (!selector) {\n    return null;\n  }\n  /*\r\n   * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\r\n   * not support `Element.prototype.closest`. To emulate the correct behaviour\r\n   * we return null when the method is missing.\r\n   *\r\n   * Note that in evergreen browsers `closest(document.documentElement, 'html')`\r\n   * will return the document element whilst in Edge null will be returned. This\r\n   * compromise was deemed good enough.\r\n   */\n\n\n  if (typeof element.closest === 'undefined') {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n/**\r\n * Force a browser reflow\r\n * @param element element where to apply the reflow\r\n */\n\n\nfunction reflow(element) {\n  return (element || document.body).getBoundingClientRect();\n}\n/**\r\n * Creates an observable where all callbacks are executed inside a given zone\r\n *\r\n * @param zone\r\n */\n\n\nfunction runInZone(zone) {\n  return function (source) {\n    return new Observable(function (observer) {\n      var onNext = function onNext(value) {\n        return zone.run(function () {\n          return observer.next(value);\n        });\n      };\n\n      var onError = function onError(e) {\n        return zone.run(function () {\n          return observer.error(e);\n        });\n      };\n\n      var onComplete = function onComplete() {\n        return zone.run(function () {\n          return observer.complete();\n        });\n      };\n\n      return source.subscribe(onNext, onError, onComplete);\n    });\n  };\n}\n\nfunction removeAccents(str) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\nvar environment = {\n  animation: true,\n  transitionTimerDelayMs: 5\n};\n/**\r\n * Global ng-bootstrap config\r\n *\r\n * @since 8.0.0\r\n */\n\nvar NgbConfig = /*#__PURE__*/_createClass(function NgbConfig() {\n  _classCallCheck(this, NgbConfig);\n\n  this.animation = environment.animation;\n});\n\nNgbConfig.ɵfac = function NgbConfig_Factory(t) {\n  return new (t || NgbConfig)();\n};\n\nNgbConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbConfig_Factory() {\n    return new NgbConfig();\n  },\n  token: NgbConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\r\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize its properties\r\n * to provide default values for all accordions used in the application.\r\n */\n\n\nvar NgbAccordionConfig = /*#__PURE__*/function () {\n  function NgbAccordionConfig(_ngbConfig) {\n    _classCallCheck(this, NgbAccordionConfig);\n\n    this._ngbConfig = _ngbConfig;\n    this.closeOthers = false;\n  }\n\n  _createClass(NgbAccordionConfig, [{\n    key: \"animation\",\n    get: function get() {\n      return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    },\n    set: function set(animation) {\n      this._animation = animation;\n    }\n  }]);\n\n  return NgbAccordionConfig;\n}();\n\nNgbAccordionConfig.ɵfac = function NgbAccordionConfig_Factory(t) {\n  return new (t || NgbAccordionConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbAccordionConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbAccordionConfig_Factory() {\n    return new NgbAccordionConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbAccordionConfig,\n  providedIn: \"root\"\n});\n\nNgbAccordionConfig.ctorParameters = function () {\n  return [{\n    type: NgbConfig\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAccordionConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nfunction getTransitionDurationMs(element) {\n  var _window$getComputedSt = window.getComputedStyle(element),\n      transitionDelay = _window$getComputedSt.transitionDelay,\n      transitionDuration = _window$getComputedSt.transitionDuration;\n\n  var transitionDelaySec = parseFloat(transitionDelay);\n  var transitionDurationSec = parseFloat(transitionDuration);\n  return (transitionDelaySec + transitionDurationSec) * 1000;\n}\n\nvar noopFn = function noopFn() {};\n\nvar ɵ0 = noopFn;\nvar transitionTimerDelayMs = environment.transitionTimerDelayMs;\nvar runningTransitions = new Map();\n\nvar ngbRunTransition = function ngbRunTransition(zone, element, startFn, options) {\n  // Getting initial context from options\n  var context = options.context || {}; // Checking if there are already running transitions on the given element.\n\n  var running = runningTransitions.get(element);\n\n  if (running) {\n    switch (options.runningTransition) {\n      // If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\n      // We're not emitting any values, but simply completing the observable (EMPTY).\n      case 'continue':\n        return EMPTY;\n      // If there is one running and we want for it to 'stop', we have to complete the running one.\n      // We're simply completing the running one and not emitting any values and merging newly provided context\n      // with the one coming from currently running transition.\n\n      case 'stop':\n        zone.run(function () {\n          return running.transition$.complete();\n        });\n        context = Object.assign(running.context, context);\n        runningTransitions.delete(element);\n    }\n  } // Running the start function\n\n\n  var endFn = startFn(element, options.animation, context) || noopFn; // If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\n  // If animations are disabled, we have to emit a value and complete the observable\n  // In this case we have to call the end function, but can finish immediately by emitting a value,\n  // completing the observable and executing end functions synchronously.\n\n  if (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\n    zone.run(function () {\n      return endFn();\n    });\n    return of(undefined).pipe(runInZone(zone));\n  } // Starting a new transition\n\n\n  var transition$ = new Subject();\n  var finishTransition$ = new Subject();\n  var stop$ = transition$.pipe(endWith(true));\n  runningTransitions.set(element, {\n    transition$: transition$,\n    complete: function complete() {\n      finishTransition$.next();\n      finishTransition$.complete();\n    },\n    context: context\n  });\n  var transitionDurationMs = getTransitionDurationMs(element); // 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\n  // because 'transitionend' event might not be fired in some browsers, if the transitioning\n  // element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\n  // guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\n  // 2. We need to filter transition end events, because they might bubble from shorter transitions\n  // on inner DOM elements. We're only interested in the transition on the 'element' itself.\n\n  zone.runOutsideAngular(function () {\n    var transitionEnd$ = fromEvent(element, 'transitionend').pipe(takeUntil(stop$), filter(function (_ref) {\n      var target = _ref.target;\n      return target === element;\n    }));\n    var timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\n    race(timer$, transitionEnd$, finishTransition$).pipe(takeUntil(stop$)).subscribe(function () {\n      runningTransitions.delete(element);\n      zone.run(function () {\n        endFn();\n        transition$.next();\n        transition$.complete();\n      });\n    });\n  });\n  return transition$.asObservable();\n};\n\nvar ngbCompleteTransition = function ngbCompleteTransition(element) {\n  var _a;\n\n  (_a = runningTransitions.get(element)) === null || _a === void 0 ? void 0 : _a.complete();\n};\n\nfunction measureCollapsingElementHeightPx(element) {\n  // SSR fix for without injecting the PlatformId\n  if (typeof navigator === 'undefined') {\n    return '0px';\n  }\n\n  var classList = element.classList;\n  var hasShownClass = classList.contains('show');\n\n  if (!hasShownClass) {\n    classList.add('show');\n  }\n\n  element.style.height = '';\n  var height = element.getBoundingClientRect().height + 'px';\n\n  if (!hasShownClass) {\n    classList.remove('show');\n  }\n\n  return height;\n}\n\nvar ngbCollapsingTransition = function ngbCollapsingTransition(element, animation, context) {\n  var direction = context.direction,\n      maxHeight = context.maxHeight;\n  var classList = element.classList;\n\n  function setInitialClasses() {\n    classList.add('collapse');\n\n    if (direction === 'show') {\n      classList.add('show');\n    } else {\n      classList.remove('show');\n    }\n  } // without animations we just need to set initial classes\n\n\n  if (!animation) {\n    setInitialClasses();\n    return;\n  } // No maxHeight -> running the transition for the first time\n\n\n  if (!maxHeight) {\n    maxHeight = measureCollapsingElementHeightPx(element);\n    context.maxHeight = maxHeight; // Fix the height before starting the animation\n\n    element.style.height = direction !== 'show' ? maxHeight : '0px';\n    classList.remove('collapse');\n    classList.remove('collapsing');\n    classList.remove('show');\n    reflow(element); // Start the animation\n\n    classList.add('collapsing');\n  } // Start or revert the animation\n\n\n  element.style.height = direction === 'show' ? maxHeight : '0px';\n  return function () {\n    setInitialClasses();\n    classList.remove('collapsing');\n    element.style.height = '';\n  };\n};\n\nvar nextId = 0;\n/**\r\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\r\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\r\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\r\n *\r\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\r\n *\r\n * @since 4.1.0\r\n */\n\nvar NgbPanelHeader = /*#__PURE__*/_createClass(function NgbPanelHeader(templateRef) {\n  _classCallCheck(this, NgbPanelHeader);\n\n  this.templateRef = templateRef;\n});\n\nNgbPanelHeader.ɵfac = function NgbPanelHeader_Factory(t) {\n  return new (t || NgbPanelHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPanelHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelHeader,\n  selectors: [[\"ng-template\", \"ngbPanelHeader\", \"\"]]\n});\n\nNgbPanelHeader.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPanelHeader, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelHeader]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * A directive that wraps only the panel title with HTML markup inside.\r\n *\r\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\r\n */\n\n\nvar NgbPanelTitle = /*#__PURE__*/_createClass(function NgbPanelTitle(templateRef) {\n  _classCallCheck(this, NgbPanelTitle);\n\n  this.templateRef = templateRef;\n});\n\nNgbPanelTitle.ɵfac = function NgbPanelTitle_Factory(t) {\n  return new (t || NgbPanelTitle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelTitle,\n  selectors: [[\"ng-template\", \"ngbPanelTitle\", \"\"]]\n});\n\nNgbPanelTitle.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelTitle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * A directive that wraps the accordion panel content.\r\n */\n\n\nvar NgbPanelContent = /*#__PURE__*/_createClass(function NgbPanelContent(templateRef) {\n  _classCallCheck(this, NgbPanelContent);\n\n  this.templateRef = templateRef;\n});\n\nNgbPanelContent.ɵfac = function NgbPanelContent_Factory(t) {\n  return new (t || NgbPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelContent,\n  selectors: [[\"ng-template\", \"ngbPanelContent\", \"\"]]\n});\n\nNgbPanelContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * A directive that wraps an individual accordion panel with title and collapsible content.\r\n */\n\n\nvar NgbPanel = /*#__PURE__*/function () {\n  function NgbPanel() {\n    _classCallCheck(this, NgbPanel);\n\n    /**\r\n     *  If `true`, the panel is disabled an can't be toggled.\r\n     */\n    this.disabled = false;\n    /**\r\n     *  An optional id for the panel that must be unique on the page.\r\n     *\r\n     *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\r\n     */\n\n    this.id = \"ngb-panel-\".concat(nextId++);\n    this.isOpen = false;\n    /* A flag to specified that the transition panel classes have been initialized */\n\n    this.initClassDone = false;\n    /* A flag to specified if the panel is currently being animated, to ensure its presence in the dom */\n\n    this.transitionRunning = false;\n    /**\r\n     * An event emitted when the panel is shown, after the transition. It has no payload.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.shown = new EventEmitter();\n    /**\r\n     * An event emitted when the panel is hidden, after the transition. It has no payload.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.hidden = new EventEmitter();\n  }\n\n  _createClass(NgbPanel, [{\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n      // only @ContentChildren allows us to specify the {descendants: false} option.\n      // Without {descendants: false} we are hitting bugs described in:\n      // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n      this.titleTpl = this.titleTpls.first;\n      this.headerTpl = this.headerTpls.first;\n      this.contentTpl = this.contentTpls.first;\n    }\n  }]);\n\n  return NgbPanel;\n}();\n\nNgbPanel.ɵfac = function NgbPanel_Factory(t) {\n  return new (t || NgbPanel)();\n};\n\nNgbPanel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanel,\n  selectors: [[\"ngb-panel\"]],\n  contentQueries: function NgbPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelTitle, 0);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelHeader, 0);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelContent, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleTpls = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTpls = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    id: \"id\",\n    title: \"title\",\n    type: \"type\",\n    cardClass: \"cardClass\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  }\n});\nNgbPanel.propDecorators = {\n  disabled: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  cardClass: [{\n    type: Input\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }],\n  titleTpls: [{\n    type: ContentChildren,\n    args: [NgbPanelTitle, {\n      descendants: false\n    }]\n  }],\n  headerTpls: [{\n    type: ContentChildren,\n    args: [NgbPanelHeader, {\n      descendants: false\n    }]\n  }],\n  contentTpls: [{\n    type: ContentChildren,\n    args: [NgbPanelContent, {\n      descendants: false\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPanel, [{\n    type: Directive,\n    args: [{\n      selector: 'ngb-panel'\n    }]\n  }], function () {\n    return [];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    title: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    cardClass: [{\n      type: Input\n    }],\n    titleTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelTitle, {\n        descendants: false\n      }]\n    }],\n    headerTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelHeader, {\n        descendants: false\n      }]\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/**\r\n * Accordion is a collection of collapsible panels (bootstrap cards).\r\n *\r\n * It can ensure only one panel is opened at a time and allows to customize panel\r\n * headers.\r\n */\n\n\nvar NgbAccordion = /*#__PURE__*/function () {\n  function NgbAccordion(config, _element, _ngZone, _changeDetector) {\n    _classCallCheck(this, NgbAccordion);\n\n    this._element = _element;\n    this._ngZone = _ngZone;\n    this._changeDetector = _changeDetector;\n    /**\r\n     * An array or comma separated strings of panel ids that should be opened **initially**.\r\n     *\r\n     * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\r\n     * the `(panelChange)` event.\r\n     */\n\n    this.activeIds = [];\n    /**\r\n     * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\r\n     */\n\n    this.destroyOnHide = true;\n    /**\r\n     * Event emitted right before the panel toggle happens.\r\n     *\r\n     * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\r\n     */\n\n    this.panelChange = new EventEmitter();\n    /**\r\n     * An event emitted when the expanding animation is finished on the panel. The payload is the panel id.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.shown = new EventEmitter();\n    /**\r\n     * An event emitted when the collapsing animation is finished on the panel, and before the panel element is removed.\r\n     * The payload is the panel id.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.hidden = new EventEmitter();\n    this.animation = config.animation;\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n  /**\r\n   * Checks if a panel with a given id is expanded.\r\n   */\n\n\n  _createClass(NgbAccordion, [{\n    key: \"isExpanded\",\n    value: function isExpanded(panelId) {\n      return this.activeIds.indexOf(panelId) > -1;\n    }\n    /**\r\n     * Expands a panel with a given id.\r\n     *\r\n     * Has no effect if the panel is already expanded or disabled.\r\n     */\n\n  }, {\n    key: \"expand\",\n    value: function expand(panelId) {\n      this._changeOpenState(this._findPanelById(panelId), true);\n    }\n    /**\r\n     * Expands all panels, if `[closeOthers]` is `false`.\r\n     *\r\n     * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\r\n     */\n\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      var _this = this;\n\n      if (this.closeOtherPanels) {\n        if (this.activeIds.length === 0 && this.panels.length) {\n          this._changeOpenState(this.panels.first, true);\n        }\n      } else {\n        this.panels.forEach(function (panel) {\n          return _this._changeOpenState(panel, true);\n        });\n      }\n    }\n    /**\r\n     * Collapses a panel with the given id.\r\n     *\r\n     * Has no effect if the panel is already collapsed or disabled.\r\n     */\n\n  }, {\n    key: \"collapse\",\n    value: function collapse(panelId) {\n      this._changeOpenState(this._findPanelById(panelId), false);\n    }\n    /**\r\n     * Collapses all opened panels.\r\n     */\n\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      var _this2 = this;\n\n      this.panels.forEach(function (panel) {\n        _this2._changeOpenState(panel, false);\n      });\n    }\n    /**\r\n     * Toggles a panel with the given id.\r\n     *\r\n     * Has no effect if the panel is disabled.\r\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(panelId) {\n      var panel = this._findPanelById(panelId);\n\n      if (panel) {\n        this._changeOpenState(panel, !panel.isOpen);\n      }\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      var _this3 = this;\n\n      // active id updates\n      if (isString(this.activeIds)) {\n        this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n      } // update panels open states\n\n\n      this.panels.forEach(function (panel) {\n        panel.isOpen = !panel.disabled && _this3.activeIds.indexOf(panel.id) > -1;\n      }); // closeOthers updates\n\n      if (this.activeIds.length > 1 && this.closeOtherPanels) {\n        this._closeOthers(this.activeIds[0], false);\n\n        this._updateActiveIds();\n      } // Setup the initial classes here\n\n\n      this._ngZone.onStable.pipe(take(1)).subscribe(function () {\n        _this3.panels.forEach(function (panel) {\n          var panelElement = _this3._getPanelElement(panel.id);\n\n          if (panelElement) {\n            if (!panel.initClassDone) {\n              panel.initClassDone = true;\n              ngbRunTransition(_this3._ngZone, panelElement, ngbCollapsingTransition, {\n                animation: false,\n                runningTransition: 'continue',\n                context: {\n                  direction: panel.isOpen ? 'show' : 'hide'\n                }\n              });\n            }\n          } else {\n            // Classes must be initialized next time it will be in the dom\n            panel.initClassDone = false;\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_changeOpenState\",\n    value: function _changeOpenState(panel, nextState) {\n      if (panel != null && !panel.disabled && panel.isOpen !== nextState) {\n        var defaultPrevented = false;\n        this.panelChange.emit({\n          panelId: panel.id,\n          nextState: nextState,\n          preventDefault: function preventDefault() {\n            defaultPrevented = true;\n          }\n        });\n\n        if (!defaultPrevented) {\n          panel.isOpen = nextState;\n          panel.transitionRunning = true;\n\n          if (nextState && this.closeOtherPanels) {\n            this._closeOthers(panel.id);\n          }\n\n          this._updateActiveIds();\n\n          this._runTransitions(this.animation);\n        }\n      }\n    }\n  }, {\n    key: \"_closeOthers\",\n    value: function _closeOthers(panelId) {\n      var enableTransition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.panels.forEach(function (panel) {\n        if (panel.id !== panelId && panel.isOpen) {\n          panel.isOpen = false;\n          panel.transitionRunning = enableTransition;\n        }\n      });\n    }\n  }, {\n    key: \"_findPanelById\",\n    value: function _findPanelById(panelId) {\n      return this.panels.find(function (p) {\n        return p.id === panelId;\n      }) || null;\n    }\n  }, {\n    key: \"_updateActiveIds\",\n    value: function _updateActiveIds() {\n      this.activeIds = this.panels.filter(function (panel) {\n        return panel.isOpen && !panel.disabled;\n      }).map(function (panel) {\n        return panel.id;\n      });\n    }\n  }, {\n    key: \"_runTransitions\",\n    value: function _runTransitions(animation) {\n      var _this4 = this;\n\n      // detectChanges is performed to ensure that all panels are in the dom (via transitionRunning = true)\n      // before starting the animation\n      this._changeDetector.detectChanges();\n\n      this.panels.forEach(function (panel) {\n        // When panel.transitionRunning is true, the transition needs to be started OR reversed,\n        // The direction (show or hide) is choosen by each panel.isOpen state\n        if (panel.transitionRunning) {\n          var panelElement = _this4._getPanelElement(panel.id);\n\n          ngbRunTransition(_this4._ngZone, panelElement, ngbCollapsingTransition, {\n            animation: animation,\n            runningTransition: 'stop',\n            context: {\n              direction: panel.isOpen ? 'show' : 'hide'\n            }\n          }).subscribe(function () {\n            panel.transitionRunning = false;\n            var id = panel.id;\n\n            if (panel.isOpen) {\n              panel.shown.emit();\n\n              _this4.shown.emit(id);\n            } else {\n              panel.hidden.emit();\n\n              _this4.hidden.emit(id);\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_getPanelElement\",\n    value: function _getPanelElement(panelId) {\n      return this._element.nativeElement.querySelector('#' + panelId);\n    }\n  }]);\n\n  return NgbAccordion;\n}();\n\nNgbAccordion.ɵfac = function NgbAccordion_Factory(t) {\n  return new (t || NgbAccordion)(ɵngcc0.ɵɵdirectiveInject(NgbAccordionConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbAccordion.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbAccordion,\n  selectors: [[\"ngb-accordion\"]],\n  contentQueries: function NgbAccordion_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanel, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panels = _t);\n    }\n  },\n  hostAttrs: [\"role\", \"tablist\", 1, \"accordion\"],\n  hostVars: 1,\n  hostBindings: function NgbAccordion_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-multiselectable\", !ctx.closeOtherPanels);\n    }\n  },\n  inputs: {\n    activeIds: \"activeIds\",\n    destroyOnHide: \"destroyOnHide\",\n    animation: \"animation\",\n    type: \"type\",\n    closeOtherPanels: [\"closeOthers\", \"closeOtherPanels\"]\n  },\n  outputs: {\n    panelChange: \"panelChange\",\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbAccordion\"],\n  decls: 3,\n  vars: 1,\n  consts: [[\"ngbPanelHeader\", \"\"], [\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"btn\", \"btn-link\", 3, \"ngbPanelToggle\"], [3, \"ngTemplateOutlet\"], [\"role\", \"tab\", 3, \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"role\", \"tabpanel\", 3, \"id\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 3, \"id\"], [1, \"card-body\"]],\n  template: function NgbAccordion_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbAccordion_ng_template_0_Template, 3, 3, \"ng-template\", 0, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_Template, 4, 11, \"ng-template\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    }\n  },\n  directives: function directives() {\n    return [NgbPanelHeader, ɵngcc1.NgForOf, NgbPanelToggle, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf];\n  },\n  encapsulation: 2\n});\n\nNgbAccordion.ctorParameters = function () {\n  return [{\n    type: NgbAccordionConfig\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nNgbAccordion.propDecorators = {\n  panels: [{\n    type: ContentChildren,\n    args: [NgbPanel]\n  }],\n  animation: [{\n    type: Input\n  }],\n  activeIds: [{\n    type: Input\n  }],\n  closeOtherPanels: [{\n    type: Input,\n    args: ['closeOthers']\n  }],\n  destroyOnHide: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  panelChange: [{\n    type: Output\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAccordion, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-accordion',\n      exportAs: 'ngbAccordion',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'accordion',\n        'role': 'tablist',\n        '[attr.aria-multiselectable]': '!closeOtherPanels'\n      },\n      template: \"\\n    <ng-template #t ngbPanelHeader let-panel>\\n      <button class=\\\"btn btn-link\\\" [ngbPanelToggle]=\\\"panel\\\">\\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\\\"panel.titleTpl?.templateRef\\\"></ng-template>\\n      </button>\\n    </ng-template>\\n    <ng-template ngFor let-panel [ngForOf]=\\\"panels\\\">\\n      <div [class]=\\\"'card ' + (panel.cardClass || '')\\\">\\n        <div role=\\\"tab\\\" id=\\\"{{panel.id}}-header\\\" [class]=\\\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"panel.headerTpl?.templateRef || t\\\"\\n                       [ngTemplateOutletContext]=\\\"{$implicit: panel, opened: panel.isOpen}\\\"></ng-template>\\n        </div>\\n        <div id=\\\"{{panel.id}}\\\" role=\\\"tabpanel\\\" [attr.aria-labelledby]=\\\"panel.id + '-header'\\\"\\n             *ngIf=\\\"!destroyOnHide || panel.isOpen || panel.transitionRunning\\\">\\n          <div class=\\\"card-body\\\">\\n               <ng-template [ngTemplateOutlet]=\\\"panel.contentTpl?.templateRef || null\\\"></ng-template>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionConfig\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    activeIds: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    panelChange: [{\n      type: Output\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    closeOtherPanels: [{\n      type: Input,\n      args: ['closeOthers']\n    }],\n    panels: [{\n      type: ContentChildren,\n      args: [NgbPanel]\n    }]\n  });\n})();\n/**\r\n * A directive to put on a button that toggles panel opening and closing.\r\n *\r\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\r\n *\r\n * @since 4.1.0\r\n */\n\n\nvar NgbPanelToggle = /*#__PURE__*/function () {\n  function NgbPanelToggle(accordion, panel) {\n    _classCallCheck(this, NgbPanelToggle);\n\n    this.accordion = accordion;\n    this.panel = panel;\n  }\n\n  _createClass(NgbPanelToggle, [{\n    key: \"ngbPanelToggle\",\n    set: function set(panel) {\n      if (panel) {\n        this.panel = panel;\n      }\n    }\n  }]);\n\n  return NgbPanelToggle;\n}();\n\nNgbPanelToggle.ɵfac = function NgbPanelToggle_Factory(t) {\n  return new (t || NgbPanelToggle)(ɵngcc0.ɵɵdirectiveInject(NgbAccordion), ɵngcc0.ɵɵdirectiveInject(NgbPanel, 9));\n};\n\nNgbPanelToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelToggle,\n  selectors: [[\"button\", \"ngbPanelToggle\", \"\"]],\n  hostAttrs: [\"type\", \"button\"],\n  hostVars: 5,\n  hostBindings: function NgbPanelToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbPanelToggle_click_HostBindingHandler() {\n        return ctx.accordion.toggle(ctx.panel.id);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.panel.disabled);\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.panel.isOpen)(\"aria-controls\", ctx.panel.id);\n      ɵngcc0.ɵɵclassProp(\"collapsed\", !ctx.panel.isOpen);\n    }\n  },\n  inputs: {\n    ngbPanelToggle: \"ngbPanelToggle\"\n  }\n});\n\nNgbPanelToggle.ctorParameters = function () {\n  return [{\n    type: NgbAccordion\n  }, {\n    type: NgbPanel,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }];\n};\n\nNgbPanelToggle.propDecorators = {\n  ngbPanelToggle: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPanelToggle, [{\n    type: Directive,\n    args: [{\n      selector: 'button[ngbPanelToggle]',\n      host: {\n        'type': 'button',\n        '[disabled]': 'panel.disabled',\n        '[class.collapsed]': '!panel.isOpen',\n        '[attr.aria-expanded]': 'panel.isOpen',\n        '[attr.aria-controls]': 'panel.id',\n        '(click)': 'accordion.toggle(panel.id)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordion\n    }, {\n      type: NgbPanel,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Host\n      }]\n    }];\n  }, {\n    ngbPanelToggle: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\nvar NgbAccordionModule = /*#__PURE__*/_createClass(function NgbAccordionModule() {\n  _classCallCheck(this, NgbAccordionModule);\n});\n\nNgbAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbAccordionModule\n});\nNgbAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbAccordionModule_Factory(t) {\n    return new (t || NgbAccordionModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbAccordionModule, {\n    declarations: function declarations() {\n      return [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAccordionModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_ACCORDION_DIRECTIVES,\n      exports: NGB_ACCORDION_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize its properties\r\n * to provide default values for all alerts used in the application.\r\n */\n\n\nvar NgbAlertConfig = /*#__PURE__*/function () {\n  function NgbAlertConfig(_ngbConfig) {\n    _classCallCheck(this, NgbAlertConfig);\n\n    this._ngbConfig = _ngbConfig;\n    this.dismissible = true;\n    this.type = 'warning';\n  }\n\n  _createClass(NgbAlertConfig, [{\n    key: \"animation\",\n    get: function get() {\n      return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    },\n    set: function set(animation) {\n      this._animation = animation;\n    }\n  }]);\n\n  return NgbAlertConfig;\n}();\n\nNgbAlertConfig.ɵfac = function NgbAlertConfig_Factory(t) {\n  return new (t || NgbAlertConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbAlertConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbAlertConfig_Factory() {\n    return new NgbAlertConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbAlertConfig,\n  providedIn: \"root\"\n});\n\nNgbAlertConfig.ctorParameters = function () {\n  return [{\n    type: NgbConfig\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAlertConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nvar ngbAlertFadingTransition = function ngbAlertFadingTransition(_ref2) {\n  var classList = _ref2.classList;\n  classList.remove('show');\n};\n/**\r\n * Alert is a component to provide contextual feedback messages for user.\r\n *\r\n * It supports several alert types and can be dismissed.\r\n */\n\n\nvar NgbAlert = /*#__PURE__*/function () {\n  function NgbAlert(config, _renderer, _element, _zone) {\n    _classCallCheck(this, NgbAlert);\n\n    this._renderer = _renderer;\n    this._element = _element;\n    this._zone = _zone;\n    /**\r\n     * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.closed = new EventEmitter();\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n    this.animation = config.animation;\n  }\n  /**\r\n   * Triggers alert closing programmatically (same as clicking on the close button (×)).\r\n   *\r\n   * The returned observable will emit and be completed once the closing transition has finished.\r\n   * If the animations are turned off this happens synchronously.\r\n   *\r\n   * Alternatively you could listen or subscribe to the `(closed)` output\r\n   *\r\n   * @since 8.0.0\r\n   */\n\n\n  _createClass(NgbAlert, [{\n    key: \"close\",\n    value: function close() {\n      var _this5 = this;\n\n      var transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbAlertFadingTransition, {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n      transition.subscribe(function () {\n        return _this5.closed.emit();\n      });\n      return transition;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var typeChange = changes['type'];\n\n      if (typeChange && !typeChange.firstChange) {\n        this._renderer.removeClass(this._element.nativeElement, \"alert-\".concat(typeChange.previousValue));\n\n        this._renderer.addClass(this._element.nativeElement, \"alert-\".concat(typeChange.currentValue));\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._renderer.addClass(this._element.nativeElement, \"alert-\".concat(this.type));\n    }\n  }]);\n\n  return NgbAlert;\n}();\n\nNgbAlert.ɵfac = function NgbAlert_Factory(t) {\n  return new (t || NgbAlert)(ɵngcc0.ɵɵdirectiveInject(NgbAlertConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNgbAlert.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbAlert,\n  selectors: [[\"ngb-alert\"]],\n  hostAttrs: [\"role\", \"alert\", 1, \"alert\", \"show\"],\n  hostVars: 4,\n  hostBindings: function NgbAlert_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.animation)(\"alert-dismissible\", ctx.dismissible);\n    }\n  },\n  inputs: {\n    dismissible: \"dismissible\",\n    type: \"type\",\n    animation: \"animation\"\n  },\n  outputs: {\n    closed: \"closed\"\n  },\n  exportAs: [\"ngbAlert\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c3,\n  decls: 2,\n  vars: 1,\n  consts: function consts() {\n    var i18n_1;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS_2 = goog.getMsg(\"Close\");\n      i18n_1 = MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS_2;\n    } else {\n      i18n_1 = $localize(_templateObject || (_templateObject = _taggedTemplateLiteral([\":@@ngb.alert.close\\u241Ff4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8\\u241F7819314041543176992:Close\"])));\n    }\n\n    return [[\"type\", \"button\", \"class\", \"close\", \"aria-label\", i18n_1, 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", i18n_1, 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]];\n  },\n  template: function NgbAlert_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵtemplate(1, NgbAlert_button_1_Template, 3, 0, \"button\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dismissible);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\"ngb-alert{display:block}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbAlert.ctorParameters = function () {\n  return [{\n    type: NgbAlertConfig\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nNgbAlert.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  dismissible: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  closed: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAlert, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-alert',\n      exportAs: 'ngbAlert',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'role': 'alert',\n        'class': 'alert show',\n        '[class.fade]': 'animation',\n        '[class.alert-dismissible]': 'dismissible'\n      },\n      template: \"\\n    <ng-content></ng-content>\\n    <button *ngIf=\\\"dismissible\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" i18n-aria-label=\\\"@@ngb.alert.close\\\"\\n      (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n    \",\n      styles: [\"ngb-alert{display:block}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbAlertConfig\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    closed: [{\n      type: Output\n    }],\n    dismissible: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbAlertModule = /*#__PURE__*/_createClass(function NgbAlertModule() {\n  _classCallCheck(this, NgbAlertModule);\n});\n\nNgbAlertModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbAlertModule\n});\nNgbAlertModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbAlertModule_Factory(t) {\n    return new (t || NgbAlertModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbAlertModule, {\n    declarations: function declarations() {\n      return [NgbAlert];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbAlert];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbAlertModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbAlert],\n      exports: [NgbAlert],\n      imports: [CommonModule],\n      entryComponents: [NgbAlert]\n    }]\n  }], null, null);\n})();\n\nvar NgbButtonLabel = /*#__PURE__*/_createClass(function NgbButtonLabel() {\n  _classCallCheck(this, NgbButtonLabel);\n});\n\nNgbButtonLabel.ɵfac = function NgbButtonLabel_Factory(t) {\n  return new (t || NgbButtonLabel)();\n};\n\nNgbButtonLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbButtonLabel,\n  selectors: [[\"\", \"ngbButtonLabel\", \"\"]],\n  hostVars: 8,\n  hostBindings: function NgbButtonLabel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"btn\", true)(\"active\", ctx.active)(\"disabled\", ctx.disabled)(\"focus\", ctx.focused);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbButtonLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButtonLabel]',\n      host: {\n        '[class.btn]': 'true',\n        '[class.active]': 'active',\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'focused'\n      }\n    }]\n  }], null, null);\n})();\n/**\r\n * Allows to easily create Bootstrap-style checkbox buttons.\r\n *\r\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\r\n * either in a reactive or template-driven way.\r\n */\n\n\nvar NgbCheckBox = /*#__PURE__*/function () {\n  function NgbCheckBox(_label, _cd) {\n    _classCallCheck(this, NgbCheckBox);\n\n    this._label = _label;\n    this._cd = _cd;\n    /**\r\n     * If `true`, the checkbox button will be disabled\r\n     */\n\n    this.disabled = false;\n    /**\r\n     * The form control value when the checkbox is checked.\r\n     */\n\n    this.valueChecked = true;\n    /**\r\n     * The form control value when the checkbox is unchecked.\r\n     */\n\n    this.valueUnChecked = false;\n\n    this.onChange = function (_) {};\n\n    this.onTouched = function () {};\n  }\n\n  _createClass(NgbCheckBox, [{\n    key: \"focused\",\n    set: function set(isFocused) {\n      this._label.focused = isFocused;\n\n      if (!isFocused) {\n        this.onTouched();\n      }\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange($event) {\n      var modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n      this.onChange(modelToPropagate);\n      this.onTouched();\n      this.writeValue(modelToPropagate);\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._label.disabled = isDisabled;\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.checked = value === this.valueChecked;\n      this._label.active = this.checked; // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n\n      this._cd.markForCheck();\n    }\n  }]);\n\n  return NgbCheckBox;\n}();\n\nNgbCheckBox.ɵfac = function NgbCheckBox_Factory(t) {\n  return new (t || NgbCheckBox)(ɵngcc0.ɵɵdirectiveInject(NgbButtonLabel), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbCheckBox.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbCheckBox,\n  selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"checkbox\"]],\n  hostVars: 2,\n  hostBindings: function NgbCheckBox_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"change\", function NgbCheckBox_change_HostBindingHandler($event) {\n        return ctx.onInputChange($event);\n      })(\"focus\", function NgbCheckBox_focus_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"blur\", function NgbCheckBox_blur_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    valueChecked: \"valueChecked\",\n    valueUnChecked: \"valueUnChecked\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NgbCheckBox;\n    }),\n    multi: true\n  }])]\n});\n\nNgbCheckBox.ctorParameters = function () {\n  return [{\n    type: NgbButtonLabel\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nNgbCheckBox.propDecorators = {\n  disabled: [{\n    type: Input\n  }],\n  valueChecked: [{\n    type: Input\n  }],\n  valueUnChecked: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCheckBox, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButton][type=checkbox]',\n      host: {\n        '[checked]': 'checked',\n        '[disabled]': 'disabled',\n        '(change)': 'onInputChange($event)',\n        '(focus)': 'focused = true',\n        '(blur)': 'focused = false'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NgbCheckBox;\n        }),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbButtonLabel\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    valueChecked: [{\n      type: Input\n    }],\n    valueUnChecked: [{\n      type: Input\n    }]\n  });\n})();\n\nvar nextId$1 = 0;\n/**\r\n * Allows to easily create Bootstrap-style radio buttons.\r\n *\r\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\r\n * either in a reactive or template-driven way.\r\n */\n\nvar NgbRadioGroup = /*#__PURE__*/function () {\n  function NgbRadioGroup() {\n    _classCallCheck(this, NgbRadioGroup);\n\n    this._radios = new Set();\n    this._value = null;\n    /**\r\n     * Name of the radio group applied to radio input elements.\r\n     *\r\n     * Will be applied to all radio input elements inside the group,\r\n     * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\r\n     *\r\n     * If not provided, will be generated in the `ngb-radio-xx` format.\r\n     */\n\n    this.name = \"ngb-radio-\".concat(nextId$1++);\n\n    this.onChange = function (_) {};\n\n    this.onTouched = function () {};\n  }\n\n  _createClass(NgbRadioGroup, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(isDisabled) {\n      this.setDisabledState(isDisabled);\n    }\n  }, {\n    key: \"onRadioChange\",\n    value: function onRadioChange(radio) {\n      this.writeValue(radio.value);\n      this.onChange(radio.value);\n    }\n  }, {\n    key: \"onRadioValueUpdate\",\n    value: function onRadioValueUpdate() {\n      this._updateRadiosValue();\n    }\n  }, {\n    key: \"register\",\n    value: function register(radio) {\n      this._radios.add(radio);\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this._disabled = isDisabled;\n\n      this._updateRadiosDisabled();\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(radio) {\n      this._radios.delete(radio);\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._value = value;\n\n      this._updateRadiosValue();\n    }\n  }, {\n    key: \"_updateRadiosValue\",\n    value: function _updateRadiosValue() {\n      var _this6 = this;\n\n      this._radios.forEach(function (radio) {\n        return radio.updateValue(_this6._value);\n      });\n    }\n  }, {\n    key: \"_updateRadiosDisabled\",\n    value: function _updateRadiosDisabled() {\n      this._radios.forEach(function (radio) {\n        return radio.updateDisabled();\n      });\n    }\n  }]);\n\n  return NgbRadioGroup;\n}();\n\nNgbRadioGroup.ɵfac = function NgbRadioGroup_Factory(t) {\n  return new (t || NgbRadioGroup)();\n};\n\nNgbRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbRadioGroup,\n  selectors: [[\"\", \"ngbRadioGroup\", \"\"]],\n  hostAttrs: [\"role\", \"radiogroup\"],\n  inputs: {\n    name: \"name\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NgbRadioGroup;\n    }),\n    multi: true\n  }])]\n});\nNgbRadioGroup.propDecorators = {\n  name: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbRadioGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbRadioGroup]',\n      host: {\n        'role': 'radiogroup'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NgbRadioGroup;\n        }),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [];\n  }, {\n    name: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * A directive that marks an input of type \"radio\" as a part of the\r\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\r\n */\n\n\nvar NgbRadio = /*#__PURE__*/function () {\n  function NgbRadio(_group, _label, _renderer, _element, _cd) {\n    _classCallCheck(this, NgbRadio);\n\n    this._group = _group;\n    this._label = _label;\n    this._renderer = _renderer;\n    this._element = _element;\n    this._cd = _cd;\n    this._value = null;\n\n    this._group.register(this);\n\n    this.updateDisabled();\n  }\n  /**\r\n   * The form control value when current radio button is checked.\r\n   */\n\n\n  _createClass(NgbRadio, [{\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(value) {\n      this._value = value;\n      var stringValue = value ? value.toString() : '';\n\n      this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n\n      this._group.onRadioValueUpdate();\n    }\n    /**\r\n     * If `true`, current radio button will be disabled.\r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._group.disabled || this._disabled;\n    },\n    set: function set(isDisabled) {\n      this._disabled = isDisabled !== false;\n      this.updateDisabled();\n    }\n  }, {\n    key: \"focused\",\n    set: function set(isFocused) {\n      if (this._label) {\n        this._label.focused = isFocused;\n      }\n\n      if (!isFocused) {\n        this._group.onTouched();\n      }\n    }\n  }, {\n    key: \"checked\",\n    get: function get() {\n      return this._checked;\n    }\n  }, {\n    key: \"nameAttr\",\n    get: function get() {\n      return this.name || this._group.name;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._group.unregister(this);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      this._group.onRadioChange(this);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n      if (this.value !== value) {\n        this._cd.markForCheck();\n      }\n\n      this._checked = this.value === value;\n      this._label.active = this._checked;\n    }\n  }, {\n    key: \"updateDisabled\",\n    value: function updateDisabled() {\n      this._label.disabled = this.disabled;\n    }\n  }]);\n\n  return NgbRadio;\n}();\n\nNgbRadio.ɵfac = function NgbRadio_Factory(t) {\n  return new (t || NgbRadio)(ɵngcc0.ɵɵdirectiveInject(NgbRadioGroup), ɵngcc0.ɵɵdirectiveInject(NgbButtonLabel), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbRadio.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbRadio,\n  selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"radio\"]],\n  hostVars: 3,\n  hostBindings: function NgbRadio_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"change\", function NgbRadio_change_HostBindingHandler() {\n        return ctx.onChange();\n      })(\"focus\", function NgbRadio_focus_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"blur\", function NgbRadio_blur_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"name\", ctx.nameAttr);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    disabled: \"disabled\",\n    name: \"name\"\n  }\n});\n\nNgbRadio.ctorParameters = function () {\n  return [{\n    type: NgbRadioGroup\n  }, {\n    type: NgbButtonLabel\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nNgbRadio.propDecorators = {\n  name: [{\n    type: Input\n  }],\n  value: [{\n    type: Input,\n    args: ['value']\n  }],\n  disabled: [{\n    type: Input,\n    args: ['disabled']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbRadio, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButton][type=radio]',\n      host: {\n        '[checked]': 'checked',\n        '[disabled]': 'disabled',\n        '[name]': 'nameAttr',\n        '(change)': 'onChange()',\n        '(focus)': 'focused = true',\n        '(blur)': 'focused = false'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbRadioGroup\n    }, {\n      type: NgbButtonLabel\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    value: [{\n      type: Input,\n      args: ['value']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    name: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\nvar NgbButtonsModule = /*#__PURE__*/_createClass(function NgbButtonsModule() {\n  _classCallCheck(this, NgbButtonsModule);\n});\n\nNgbButtonsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbButtonsModule\n});\nNgbButtonsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbButtonsModule_Factory(t) {\n    return new (t || NgbButtonsModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbButtonsModule, {\n    declarations: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio],\n    exports: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbButtonsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_BUTTON_DIRECTIVES,\n      exports: NGB_BUTTON_DIRECTIVES\n    }]\n  }], null, null);\n})();\n/**\r\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize its properties\r\n * to provide default values for all carousels used in the application.\r\n */\n\n\nvar NgbCarouselConfig = /*#__PURE__*/function () {\n  function NgbCarouselConfig(_ngbConfig) {\n    _classCallCheck(this, NgbCarouselConfig);\n\n    this._ngbConfig = _ngbConfig;\n    this.interval = 5000;\n    this.wrap = true;\n    this.keyboard = true;\n    this.pauseOnHover = true;\n    this.pauseOnFocus = true;\n    this.showNavigationArrows = true;\n    this.showNavigationIndicators = true;\n  }\n\n  _createClass(NgbCarouselConfig, [{\n    key: \"animation\",\n    get: function get() {\n      return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    },\n    set: function set(animation) {\n      this._animation = animation;\n    }\n  }]);\n\n  return NgbCarouselConfig;\n}();\n\nNgbCarouselConfig.ɵfac = function NgbCarouselConfig_Factory(t) {\n  return new (t || NgbCarouselConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbCarouselConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbCarouselConfig_Factory() {\n    return new NgbCarouselConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbCarouselConfig,\n  providedIn: \"root\"\n});\n\nNgbCarouselConfig.ctorParameters = function () {\n  return [{\n    type: NgbConfig\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCarouselConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\r\n * Defines the carousel slide transition direction.\r\n */\n\n\nvar NgbSlideEventDirection;\n\n(function (NgbSlideEventDirection) {\n  NgbSlideEventDirection[\"LEFT\"] = \"left\";\n  NgbSlideEventDirection[\"RIGHT\"] = \"right\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\n\nvar isBeingAnimated = function isBeingAnimated(_ref3) {\n  var classList = _ref3.classList;\n  return classList.contains('carousel-item-left') || classList.contains('carousel-item-right');\n};\n\nvar ɵ0$1 = isBeingAnimated;\n\nvar removeDirectionClasses = function removeDirectionClasses(classList) {\n  classList.remove('carousel-item-left');\n  classList.remove('carousel-item-right');\n};\n\nvar ɵ1 = removeDirectionClasses;\n\nvar removeClasses = function removeClasses(classList) {\n  removeDirectionClasses(classList);\n  classList.remove('carousel-item-prev');\n  classList.remove('carousel-item-next');\n};\n\nvar ɵ2 = removeClasses;\n\nvar ngbCarouselTransitionIn = function ngbCarouselTransitionIn(element, animation, _ref4) {\n  var direction = _ref4.direction;\n  var classList = element.classList;\n\n  if (!animation) {\n    removeDirectionClasses(classList);\n    removeClasses(classList);\n    classList.add('active');\n    return;\n  }\n\n  if (isBeingAnimated(element)) {\n    // Revert the transition\n    removeDirectionClasses(classList);\n  } else {\n    // For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\n    classList.add('carousel-item-' + (direction === NgbSlideEventDirection.LEFT ? 'next' : 'prev'));\n    reflow(element);\n    classList.add('carousel-item-' + direction);\n  }\n\n  return function () {\n    removeClasses(classList);\n    classList.add('active');\n  };\n};\n\nvar ngbCarouselTransitionOut = function ngbCarouselTransitionOut(element, animation, _ref5) {\n  var direction = _ref5.direction;\n  var classList = element.classList;\n\n  if (!animation) {\n    removeDirectionClasses(classList);\n    removeClasses(classList);\n    classList.remove('active');\n    return;\n  } //  direction is left or right, depending on the way the slide goes out.\n\n\n  if (isBeingAnimated(element)) {\n    // Revert the transition\n    removeDirectionClasses(classList);\n  } else {\n    classList.add('carousel-item-' + direction);\n  }\n\n  return function () {\n    removeClasses(classList);\n    classList.remove('active');\n  };\n};\n\nvar nextId$2 = 0;\n/**\r\n * A directive that wraps the individual carousel slide.\r\n */\n\nvar NgbSlide = /*#__PURE__*/_createClass(function NgbSlide(tplRef) {\n  _classCallCheck(this, NgbSlide);\n\n  this.tplRef = tplRef;\n  /**\r\n   * Slide id that must be unique for the entire document.\r\n   *\r\n   * If not provided, will be generated in the `ngb-slide-xx` format.\r\n   */\n\n  this.id = \"ngb-slide-\".concat(nextId$2++);\n  /**\r\n   * An event emitted when the slide transition is finished\r\n   *\r\n   * @since 8.0.0\r\n   */\n\n  this.slid = new EventEmitter();\n});\n\nNgbSlide.ɵfac = function NgbSlide_Factory(t) {\n  return new (t || NgbSlide)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbSlide.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbSlide,\n  selectors: [[\"ng-template\", \"ngbSlide\", \"\"]],\n  inputs: {\n    id: \"id\"\n  },\n  outputs: {\n    slid: \"slid\"\n  }\n});\n\nNgbSlide.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\nNgbSlide.propDecorators = {\n  id: [{\n    type: Input\n  }],\n  slid: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbSlide, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbSlide]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    slid: [{\n      type: Output\n    }]\n  });\n})();\n/**\r\n * Carousel is a component to easily create and control slideshows.\r\n *\r\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\r\n */\n\n\nvar NgbCarousel = /*#__PURE__*/function () {\n  function NgbCarousel(config, _platformId, _ngZone, _cd, _container) {\n    _classCallCheck(this, NgbCarousel);\n\n    this._platformId = _platformId;\n    this._ngZone = _ngZone;\n    this._cd = _cd;\n    this._container = _container;\n    this.NgbSlideEventSource = NgbSlideEventSource;\n    this._destroy$ = new Subject();\n    this._interval$ = new BehaviorSubject(0);\n    this._mouseHover$ = new BehaviorSubject(false);\n    this._focused$ = new BehaviorSubject(false);\n    this._pauseOnHover$ = new BehaviorSubject(false);\n    this._pauseOnFocus$ = new BehaviorSubject(false);\n    this._pause$ = new BehaviorSubject(false);\n    this._wrap$ = new BehaviorSubject(false);\n    /**\r\n     * An event emitted just before the slide transition starts.\r\n     *\r\n     * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\r\n     */\n\n    this.slide = new EventEmitter();\n    /**\r\n     * An event emitted right after the slide transition is completed.\r\n     *\r\n     * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.slid = new EventEmitter();\n    /*\r\n     * Keep the ids of the panels currently transitionning\r\n     * in order to allow only the transition revertion\r\n     */\n\n    this._transitionIds = null;\n    this.animation = config.animation;\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.pauseOnFocus = config.pauseOnFocus;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n  /**\r\n   * Time in milliseconds before the next slide is shown.\r\n   */\n\n\n  _createClass(NgbCarousel, [{\n    key: \"interval\",\n    get: function get() {\n      return this._interval$.value;\n    }\n    /**\r\n     * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\r\n     */\n    ,\n    set: function set(value) {\n      this._interval$.next(value);\n    }\n  }, {\n    key: \"wrap\",\n    get: function get() {\n      return this._wrap$.value;\n    }\n    /**\r\n     * If `true`, will pause slide switching when mouse cursor hovers the slide.\r\n     *\r\n     * @since 2.2.0\r\n     */\n    ,\n    set: function set(value) {\n      this._wrap$.next(value);\n    }\n  }, {\n    key: \"pauseOnHover\",\n    get: function get() {\n      return this._pauseOnHover$.value;\n    }\n    /**\r\n     * If `true`, will pause slide switching when the focus is inside the carousel.\r\n     */\n    ,\n    set: function set(value) {\n      this._pauseOnHover$.next(value);\n    }\n  }, {\n    key: \"pauseOnFocus\",\n    get: function get() {\n      return this._pauseOnFocus$.value;\n    },\n    set: function set(value) {\n      this._pauseOnFocus$.next(value);\n    }\n  }, {\n    key: \"mouseHover\",\n    get: function get() {\n      return this._mouseHover$.value;\n    },\n    set: function set(value) {\n      this._mouseHover$.next(value);\n    }\n  }, {\n    key: \"focused\",\n    get: function get() {\n      return this._focused$.value;\n    },\n    set: function set(value) {\n      this._focused$.next(value);\n    }\n  }, {\n    key: \"arrowLeft\",\n    value: function arrowLeft() {\n      this.focus();\n      this.prev(NgbSlideEventSource.ARROW_LEFT);\n    }\n  }, {\n    key: \"arrowRight\",\n    value: function arrowRight() {\n      this.focus();\n      this.next(NgbSlideEventSource.ARROW_RIGHT);\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this7 = this;\n\n      // setInterval() doesn't play well with SSR and protractor,\n      // so we should run it in the browser and outside Angular\n      if (isPlatformBrowser(this._platformId)) {\n        this._ngZone.runOutsideAngular(function () {\n          var hasNextSlide$ = combineLatest([_this7.slide.pipe(map(function (slideEvent) {\n            return slideEvent.current;\n          }), startWith(_this7.activeId)), _this7._wrap$, _this7.slides.changes.pipe(startWith(null))]).pipe(map(function (_ref6) {\n            var _ref7 = _slicedToArray(_ref6, 2),\n                currentSlideId = _ref7[0],\n                wrap = _ref7[1];\n\n            var slideArr = _this7.slides.toArray();\n\n            var currentSlideIdx = _this7._getSlideIdxById(currentSlideId);\n\n            return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n          }), distinctUntilChanged());\n          combineLatest([_this7._pause$, _this7._pauseOnHover$, _this7._mouseHover$, _this7._pauseOnFocus$, _this7._focused$, _this7._interval$, hasNextSlide$]).pipe(map(function (_ref8) {\n            var _ref9 = _slicedToArray(_ref8, 7),\n                pause = _ref9[0],\n                pauseOnHover = _ref9[1],\n                mouseHover = _ref9[2],\n                pauseOnFocus = _ref9[3],\n                focused = _ref9[4],\n                interval = _ref9[5],\n                hasNextSlide = _ref9[6];\n\n            return pause || pauseOnHover && mouseHover || pauseOnFocus && focused || !hasNextSlide ? 0 : interval;\n          }), distinctUntilChanged(), switchMap(function (interval) {\n            return interval > 0 ? timer(interval, interval) : NEVER;\n          }), takeUntil(_this7._destroy$)).subscribe(function () {\n            return _this7._ngZone.run(function () {\n              return _this7.next(NgbSlideEventSource.TIMER);\n            });\n          });\n        });\n      }\n\n      this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(function () {\n        var _a;\n\n        (_a = _this7._transitionIds) === null || _a === void 0 ? void 0 : _a.forEach(function (id) {\n          return ngbCompleteTransition(_this7._getSlideElement(id));\n        });\n        _this7._transitionIds = null;\n\n        _this7._cd.markForCheck(); // The following code need to be done asynchronously, after the dom becomes stable,\n        // otherwise all changes will be undone.\n\n\n        _this7._ngZone.onStable.pipe(take(1)).subscribe(function () {\n          var _iterator = _createForOfIteratorHelper(_this7.slides),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var id = _step.value.id;\n\n              var element = _this7._getSlideElement(id);\n\n              if (id === _this7.activeId) {\n                element.classList.add('active');\n              } else {\n                element.classList.remove('active');\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      var activeSlide = this._getSlideById(this.activeId);\n\n      this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : '';\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      // Initialize the 'active' class (not managed by the template)\n      if (this.activeId) {\n        var element = this._getSlideElement(this.activeId);\n\n        if (element) {\n          element.classList.add('active');\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroy$.next();\n    }\n    /**\r\n     * Navigates to a slide with the specified identifier.\r\n     */\n\n  }, {\n    key: \"select\",\n    value: function select(slideId, source) {\n      this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n    }\n    /**\r\n     * Navigates to the previous slide.\r\n     */\n\n  }, {\n    key: \"prev\",\n    value: function prev(source) {\n      this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n    }\n    /**\r\n     * Navigates to the next slide.\r\n     */\n\n  }, {\n    key: \"next\",\n    value: function next(source) {\n      this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n    }\n    /**\r\n     * Pauses cycling through the slides.\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._pause$.next(true);\n    }\n    /**\r\n     * Restarts cycling through the slides from left to right.\r\n     */\n\n  }, {\n    key: \"cycle\",\n    value: function cycle() {\n      this._pause$.next(false);\n    }\n    /**\r\n     * Set the focus on the carousel.\r\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._container.nativeElement.focus();\n    }\n  }, {\n    key: \"_cycleToSelected\",\n    value: function _cycleToSelected(slideIdx, direction, source) {\n      var _this8 = this;\n\n      var transitionIds = this._transitionIds;\n\n      if (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\n        // Revert prevented\n        return;\n      }\n\n      var selectedSlide = this._getSlideById(slideIdx);\n\n      if (selectedSlide && selectedSlide.id !== this.activeId) {\n        this._transitionIds = [this.activeId, slideIdx];\n        this.slide.emit({\n          prev: this.activeId,\n          current: selectedSlide.id,\n          direction: direction,\n          paused: this._pause$.value,\n          source: source\n        });\n        var options = {\n          animation: this.animation,\n          runningTransition: 'stop',\n          context: {\n            direction: direction\n          }\n        };\n        var transitions = [];\n\n        var activeSlide = this._getSlideById(this.activeId);\n\n        if (activeSlide) {\n          var activeSlideTransition = ngbRunTransition(this._ngZone, this._getSlideElement(activeSlide.id), ngbCarouselTransitionOut, options);\n          activeSlideTransition.subscribe(function () {\n            activeSlide.slid.emit({\n              isShown: false,\n              direction: direction,\n              source: source\n            });\n          });\n          transitions.push(activeSlideTransition);\n        }\n\n        var previousId = this.activeId;\n        this.activeId = selectedSlide.id;\n\n        var nextSlide = this._getSlideById(this.activeId);\n\n        var transition = ngbRunTransition(this._ngZone, this._getSlideElement(selectedSlide.id), ngbCarouselTransitionIn, options);\n        transition.subscribe(function () {\n          nextSlide === null || nextSlide === void 0 ? void 0 : nextSlide.slid.emit({\n            isShown: true,\n            direction: direction,\n            source: source\n          });\n        });\n        transitions.push(transition);\n        zip.apply(void 0, transitions).pipe(take(1)).subscribe(function () {\n          _this8._transitionIds = null;\n\n          _this8.slid.emit({\n            prev: previousId,\n            current: selectedSlide.id,\n            direction: direction,\n            paused: _this8._pause$.value,\n            source: source\n          });\n        });\n      } // we get here after the interval fires or any external API call like next(), prev() or select()\n\n\n      this._cd.markForCheck();\n    }\n  }, {\n    key: \"_getSlideEventDirection\",\n    value: function _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n      var currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n\n      var nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n      return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n    }\n  }, {\n    key: \"_getSlideById\",\n    value: function _getSlideById(slideId) {\n      return this.slides.find(function (slide) {\n        return slide.id === slideId;\n      }) || null;\n    }\n  }, {\n    key: \"_getSlideIdxById\",\n    value: function _getSlideIdxById(slideId) {\n      var slide = this._getSlideById(slideId);\n\n      return slide != null ? this.slides.toArray().indexOf(slide) : -1;\n    }\n  }, {\n    key: \"_getNextSlide\",\n    value: function _getNextSlide(currentSlideId) {\n      var slideArr = this.slides.toArray();\n\n      var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n      var isLastSlide = currentSlideIdx === slideArr.length - 1;\n      return isLastSlide ? this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id : slideArr[currentSlideIdx + 1].id;\n    }\n  }, {\n    key: \"_getPrevSlide\",\n    value: function _getPrevSlide(currentSlideId) {\n      var slideArr = this.slides.toArray();\n\n      var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n      var isFirstSlide = currentSlideIdx === 0;\n      return isFirstSlide ? this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id : slideArr[currentSlideIdx - 1].id;\n    }\n  }, {\n    key: \"_getSlideElement\",\n    value: function _getSlideElement(slideId) {\n      return this._container.nativeElement.querySelector(\"#slide-\".concat(slideId));\n    }\n  }]);\n\n  return NgbCarousel;\n}();\n\nNgbCarousel.ɵfac = function NgbCarousel_Factory(t) {\n  return new (t || NgbCarousel)(ɵngcc0.ɵɵdirectiveInject(NgbCarouselConfig), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbCarousel.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbCarousel,\n  selectors: [[\"ngb-carousel\"]],\n  contentQueries: function NgbCarousel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbSlide, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slides = _t);\n    }\n  },\n  hostAttrs: [\"tabIndex\", \"0\", 1, \"carousel\", \"slide\"],\n  hostVars: 3,\n  hostBindings: function NgbCarousel_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown.arrowLeft\", function NgbCarousel_keydown_arrowLeft_HostBindingHandler() {\n        return ctx.keyboard && ctx.arrowLeft();\n      })(\"keydown.arrowRight\", function NgbCarousel_keydown_arrowRight_HostBindingHandler() {\n        return ctx.keyboard && ctx.arrowRight();\n      })(\"mouseenter\", function NgbCarousel_mouseenter_HostBindingHandler() {\n        return ctx.mouseHover = true;\n      })(\"mouseleave\", function NgbCarousel_mouseleave_HostBindingHandler() {\n        return ctx.mouseHover = false;\n      })(\"focusin\", function NgbCarousel_focusin_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"focusout\", function NgbCarousel_focusout_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-activedescendant\", \"slide-\" + ctx.activeId);\n      ɵngcc0.ɵɵstyleProp(\"display\", \"block\");\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    interval: \"interval\",\n    wrap: \"wrap\",\n    keyboard: \"keyboard\",\n    pauseOnHover: \"pauseOnHover\",\n    pauseOnFocus: \"pauseOnFocus\",\n    showNavigationArrows: \"showNavigationArrows\",\n    showNavigationIndicators: \"showNavigationIndicators\",\n    activeId: \"activeId\"\n  },\n  outputs: {\n    slide: \"slide\",\n    slid: \"slid\"\n  },\n  exportAs: [\"ngbCarousel\"],\n  decls: 6,\n  vars: 6,\n  consts: function consts() {\n    var i18n_4;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Currently selected slide number read by screen reader\n       */\n      var MSG_EXTERNAL_ngb_carousel_slide_number$$FESM2015_NG_BOOTSTRAP_JS__5 = goog.getMsg(\" Slide {$interpolation} of {$interpolation_1} \", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\",\n        \"interpolation_1\": \"\\uFFFD1\\uFFFD\"\n      });\n      i18n_4 = MSG_EXTERNAL_ngb_carousel_slide_number$$FESM2015_NG_BOOTSTRAP_JS__5;\n    } else {\n      i18n_4 = $localize(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\":Currently selected slide number read by screen reader@@ngb.carousel.slide-number\\u241Fa65b1b49aa7dd8c4f3004da6a8c2241814dae621\\u241F783273603869937627: Slide \", \":INTERPOLATION: of \", \":INTERPOLATION_1: \"])), \"\\uFFFD0\\uFFFD\", \"\\uFFFD1\\uFFFD\");\n    }\n\n    var i18n_6;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__7 = goog.getMsg(\"Previous\");\n      i18n_6 = MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__7;\n    } else {\n      i18n_6 = $localize(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\":@@ngb.carousel.previous\\u241F680d5c75b7fd8d37961083608b9fcdc4167b4c43\\u241F4452427314943113135:Previous\"])));\n    }\n\n    var i18n_8;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__9 = goog.getMsg(\"Next\");\n      i18n_8 = MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__9;\n    } else {\n      i18n_8 = $localize(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\":@@ngb.carousel.next\\u241Ff732c304c7433e5a83ffcd862c3dce709a0f4982\\u241F3885497195825665706:Next\"])));\n    }\n\n    return [[\"role\", \"tablist\", 1, \"carousel-indicators\"], [\"role\", \"tab\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"carousel-inner\"], [\"class\", \"carousel-item\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"carousel-control-prev\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"carousel-control-next\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"tab\", 3, \"click\"], [\"role\", \"tabpanel\", 1, \"carousel-item\", 3, \"id\"], [1, \"sr-only\"], i18n_4, [3, \"ngTemplateOutlet\"], [\"role\", \"button\", 1, \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-prev-icon\"], i18n_6, [\"role\", \"button\", 1, \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-next-icon\"], i18n_8];\n  },\n  template: function NgbCarousel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ol\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbCarousel_li_1_Template, 1, 5, \"li\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, NgbCarousel_div_3_Template, 4, 4, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, NgbCarousel_a_4_Template, 4, 0, \"a\", 4);\n      ɵngcc0.ɵɵtemplate(5, NgbCarousel_a_5_Template, 4, 0, \"a\", 5);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"sr-only\", !ctx.showNavigationIndicators);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.slides);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.slides);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbCarousel.ctorParameters = function () {\n  return [{\n    type: NgbCarouselConfig\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }];\n};\n\nNgbCarousel.propDecorators = {\n  slides: [{\n    type: ContentChildren,\n    args: [NgbSlide]\n  }],\n  animation: [{\n    type: Input\n  }],\n  activeId: [{\n    type: Input\n  }],\n  interval: [{\n    type: Input\n  }],\n  wrap: [{\n    type: Input\n  }],\n  keyboard: [{\n    type: Input\n  }],\n  pauseOnHover: [{\n    type: Input\n  }],\n  pauseOnFocus: [{\n    type: Input\n  }],\n  showNavigationArrows: [{\n    type: Input\n  }],\n  showNavigationIndicators: [{\n    type: Input\n  }],\n  slide: [{\n    type: Output\n  }],\n  slid: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCarousel, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-carousel',\n      exportAs: 'ngbCarousel',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'carousel slide',\n        '[style.display]': '\"block\"',\n        'tabIndex': '0',\n        '(keydown.arrowLeft)': 'keyboard && arrowLeft()',\n        '(keydown.arrowRight)': 'keyboard && arrowRight()',\n        '(mouseenter)': 'mouseHover = true',\n        '(mouseleave)': 'mouseHover = false',\n        '(focusin)': 'focused = true',\n        '(focusout)': 'focused = false',\n        '[attr.aria-activedescendant]': \"'slide-' + activeId\"\n      },\n      template: \"\\n    <ol class=\\\"carousel-indicators\\\" [class.sr-only]=\\\"!showNavigationIndicators\\\" role=\\\"tablist\\\">\\n      <li *ngFor=\\\"let slide of slides\\\" [class.active]=\\\"slide.id === activeId\\\"\\n          role=\\\"tab\\\" [attr.aria-labelledby]=\\\"'slide-' + slide.id\\\" [attr.aria-controls]=\\\"'slide-' + slide.id\\\"\\n          [attr.aria-selected]=\\\"slide.id === activeId\\\"\\n          (click)=\\\"focus();select(slide.id, NgbSlideEventSource.INDICATOR);\\\"></li>\\n    </ol>\\n    <div class=\\\"carousel-inner\\\">\\n      <div *ngFor=\\\"let slide of slides; index as i; count as c\\\" class=\\\"carousel-item\\\" [id]=\\\"'slide-' + slide.id\\\" role=\\\"tabpanel\\\">\\n        <span class=\\\"sr-only\\\" i18n=\\\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\\\">\\n          Slide {{i + 1}} of {{c}}\\n        </span>\\n        <ng-template [ngTemplateOutlet]=\\\"slide.tplRef\\\"></ng-template>\\n      </div>\\n    </div>\\n    <a class=\\\"carousel-control-prev\\\" role=\\\"button\\\" (click)=\\\"arrowLeft()\\\" *ngIf=\\\"showNavigationArrows\\\">\\n      <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.carousel.previous\\\">Previous</span>\\n    </a>\\n    <a class=\\\"carousel-control-next\\\" role=\\\"button\\\" (click)=\\\"arrowRight()\\\" *ngIf=\\\"showNavigationArrows\\\">\\n      <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.carousel.next\\\">Next</span>\\n    </a>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbCarouselConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    slide: [{\n      type: Output\n    }],\n    slid: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    interval: [{\n      type: Input\n    }],\n    wrap: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    pauseOnHover: [{\n      type: Input\n    }],\n    pauseOnFocus: [{\n      type: Input\n    }],\n    showNavigationArrows: [{\n      type: Input\n    }],\n    showNavigationIndicators: [{\n      type: Input\n    }],\n    activeId: [{\n      type: Input\n    }],\n    slides: [{\n      type: ContentChildren,\n      args: [NgbSlide]\n    }]\n  });\n})();\n\nvar NgbSlideEventSource;\n\n(function (NgbSlideEventSource) {\n  NgbSlideEventSource[\"TIMER\"] = \"timer\";\n  NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n  NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n  NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n})(NgbSlideEventSource || (NgbSlideEventSource = {}));\n\nvar NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n\nvar NgbCarouselModule = /*#__PURE__*/_createClass(function NgbCarouselModule() {\n  _classCallCheck(this, NgbCarouselModule);\n});\n\nNgbCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbCarouselModule\n});\nNgbCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbCarouselModule_Factory(t) {\n    return new (t || NgbCarouselModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbCarouselModule, {\n    declarations: function declarations() {\n      return [NgbCarousel, NgbSlide];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbCarousel, NgbSlide];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCarouselModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_CAROUSEL_DIRECTIVES,\n      exports: NGB_CAROUSEL_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize its properties\r\n * to provide default values for all collapses used in the application.\r\n */\n\n\nvar NgbCollapseConfig = /*#__PURE__*/function () {\n  function NgbCollapseConfig(_ngbConfig) {\n    _classCallCheck(this, NgbCollapseConfig);\n\n    this._ngbConfig = _ngbConfig;\n  }\n\n  _createClass(NgbCollapseConfig, [{\n    key: \"animation\",\n    get: function get() {\n      return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    },\n    set: function set(animation) {\n      this._animation = animation;\n    }\n  }]);\n\n  return NgbCollapseConfig;\n}();\n\nNgbCollapseConfig.ɵfac = function NgbCollapseConfig_Factory(t) {\n  return new (t || NgbCollapseConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbCollapseConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbCollapseConfig_Factory() {\n    return new NgbCollapseConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbCollapseConfig,\n  providedIn: \"root\"\n});\n\nNgbCollapseConfig.ctorParameters = function () {\n  return [{\n    type: NgbConfig\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCollapseConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\r\n * A directive to provide a simple way of hiding and showing elements on the page.\r\n */\n\n\nvar NgbCollapse = /*#__PURE__*/function () {\n  function NgbCollapse(_element, config, _zone) {\n    _classCallCheck(this, NgbCollapse);\n\n    this._element = _element;\n    this._zone = _zone;\n    /**\r\n     * If `true`, will collapse the element or show it otherwise.\r\n     */\n\n    this.collapsed = false;\n    this.ngbCollapseChange = new EventEmitter();\n    /**\r\n     * An event emitted when the collapse element is shown, after the transition. It has no payload.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.shown = new EventEmitter();\n    /**\r\n     * An event emitted when the collapse element is hidden, after the transition. It has no payload.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.hidden = new EventEmitter();\n    this.animation = config.animation;\n  }\n\n  _createClass(NgbCollapse, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._runTransition(this.collapsed, false);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_ref10) {\n      var collapsed = _ref10.collapsed;\n\n      if (!collapsed.firstChange) {\n        this._runTransitionWithEvents(this.collapsed, this.animation);\n      }\n    }\n    /**\r\n     * Triggers collapsing programmatically.\r\n     *\r\n     * If there is a collapsing transition running already, it will be reversed.\r\n     * If the animations are turned off this happens synchronously.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var open = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.collapsed;\n      this.collapsed = !open;\n      this.ngbCollapseChange.next(this.collapsed);\n\n      this._runTransitionWithEvents(this.collapsed, this.animation);\n    }\n  }, {\n    key: \"_runTransition\",\n    value: function _runTransition(collapsed, animation) {\n      return ngbRunTransition(this._zone, this._element.nativeElement, ngbCollapsingTransition, {\n        animation: animation,\n        runningTransition: 'stop',\n        context: {\n          direction: collapsed ? 'hide' : 'show'\n        }\n      });\n    }\n  }, {\n    key: \"_runTransitionWithEvents\",\n    value: function _runTransitionWithEvents(collapsed, animation) {\n      var _this9 = this;\n\n      this._runTransition(collapsed, animation).subscribe(function () {\n        if (collapsed) {\n          _this9.hidden.emit();\n        } else {\n          _this9.shown.emit();\n        }\n      });\n    }\n  }]);\n\n  return NgbCollapse;\n}();\n\nNgbCollapse.ɵfac = function NgbCollapse_Factory(t) {\n  return new (t || NgbCollapse)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgbCollapseConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNgbCollapse.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbCollapse,\n  selectors: [[\"\", \"ngbCollapse\", \"\"]],\n  inputs: {\n    collapsed: [\"ngbCollapse\", \"collapsed\"],\n    animation: \"animation\"\n  },\n  outputs: {\n    ngbCollapseChange: \"ngbCollapseChange\",\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbCollapse\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbCollapse.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgbCollapseConfig\n  }, {\n    type: NgZone\n  }];\n};\n\nNgbCollapse.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  collapsed: [{\n    type: Input,\n    args: ['ngbCollapse']\n  }],\n  ngbCollapseChange: [{\n    type: Output\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCollapse, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbCollapse]',\n      exportAs: 'ngbCollapse'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NgbCollapseConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    collapsed: [{\n      type: Input,\n      args: ['ngbCollapse']\n    }],\n    ngbCollapseChange: [{\n      type: Output\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbCollapseModule = /*#__PURE__*/_createClass(function NgbCollapseModule() {\n  _classCallCheck(this, NgbCollapseModule);\n});\n\nNgbCollapseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbCollapseModule\n});\nNgbCollapseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbCollapseModule_Factory(t) {\n    return new (t || NgbCollapseModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbCollapseModule, {\n    declarations: [NgbCollapse],\n    exports: [NgbCollapse]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCollapseModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbCollapse],\n      exports: [NgbCollapse]\n    }]\n  }], null, null);\n})();\n/**\r\n * A simple class that represents a date that datepicker also uses internally.\r\n *\r\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\r\n * like `.equals()`, `.before()`, etc.\r\n *\r\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\r\n *\r\n * In many cases it is simpler to manipulate these objects together with\r\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\r\n *\r\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\r\n *\r\n * @since 3.0.0\r\n */\n\n\nvar NgbDate = /*#__PURE__*/function () {\n  function NgbDate(year, month, day) {\n    _classCallCheck(this, NgbDate);\n\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n  /**\r\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\r\n   *\r\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\r\n   *\r\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\r\n   */\n\n\n  _createClass(NgbDate, [{\n    key: \"equals\",\n    value:\n    /**\r\n     * Checks if the current date is equal to another date.\r\n     */\n    function equals(other) {\n      return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n    }\n    /**\r\n     * Checks if the current date is before another date.\r\n     */\n\n  }, {\n    key: \"before\",\n    value: function before(other) {\n      if (!other) {\n        return false;\n      }\n\n      if (this.year === other.year) {\n        if (this.month === other.month) {\n          return this.day === other.day ? false : this.day < other.day;\n        } else {\n          return this.month < other.month;\n        }\n      } else {\n        return this.year < other.year;\n      }\n    }\n    /**\r\n     * Checks if the current date is after another date.\r\n     */\n\n  }, {\n    key: \"after\",\n    value: function after(other) {\n      if (!other) {\n        return false;\n      }\n\n      if (this.year === other.year) {\n        if (this.month === other.month) {\n          return this.day === other.day ? false : this.day > other.day;\n        } else {\n          return this.month > other.month;\n        }\n      } else {\n        return this.year > other.year;\n      }\n    }\n  }], [{\n    key: \"from\",\n    value: function from(date) {\n      if (date instanceof NgbDate) {\n        return date;\n      }\n\n      return date ? new NgbDate(date.year, date.month, date.day) : null;\n    }\n  }]);\n\n  return NgbDate;\n}();\n\nfunction fromJSDate(jsDate) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\n\nfunction toJSDate(date) {\n  var jsDate = new Date(date.year, date.month - 1, date.day, 12); // this is done avoid 30 -> 1930 conversion\n\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n\n  return jsDate;\n}\n\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n/**\r\n * A service that represents the calendar used by the datepicker.\r\n *\r\n * The default implementation uses the Gregorian calendar. You can inject it in your own\r\n * implementations if necessary to simplify `NgbDate` calculations.\r\n */\n\n\nvar NgbCalendar = /*#__PURE__*/_createClass(function NgbCalendar() {\n  _classCallCheck(this, NgbCalendar);\n});\n\nNgbCalendar.ɵfac = function NgbCalendar_Factory(t) {\n  return new (t || NgbCalendar)();\n};\n\nNgbCalendar.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_CALENDAR_FACTORY,\n  token: NgbCalendar,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_CALENDAR_FACTORY\n    }]\n  }], null, null);\n})();\n\nvar NgbCalendarGregorian = /*#__PURE__*/function (_NgbCalendar) {\n  _inherits(NgbCalendarGregorian, _NgbCalendar);\n\n  var _super = _createSuper(NgbCalendarGregorian);\n\n  function NgbCalendarGregorian() {\n    _classCallCheck(this, NgbCalendarGregorian);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarGregorian, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var jsDate = toJSDate(date);\n      var checkMonth = true;\n      var expectedMonth = jsDate.getMonth();\n\n      switch (period) {\n        case 'y':\n          jsDate.setFullYear(jsDate.getFullYear() + number);\n          break;\n\n        case 'm':\n          expectedMonth += number;\n          jsDate.setMonth(expectedMonth);\n          expectedMonth = expectedMonth % 12;\n\n          if (expectedMonth < 0) {\n            expectedMonth = expectedMonth + 12;\n          }\n\n          break;\n\n        case 'd':\n          jsDate.setDate(jsDate.getDate() + number);\n          checkMonth = false;\n          break;\n\n        default:\n          return date;\n      }\n\n      if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n        // this means the destination month has less days than the initial month\n        // let's go back to the end of the previous month:\n        jsDate.setDate(0);\n      }\n\n      return fromJSDate(jsDate);\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var jsDate = toJSDate(date);\n      var day = jsDate.getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n\n      var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      var date = week[thursdayIndex];\n      var jsDate = toJSDate(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n      var time = jsDate.getTime();\n      jsDate.setMonth(0); // Compare with Jan 1\n\n      jsDate.setDate(1);\n      return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return fromJSDate(new Date());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n        return false;\n      } // year 0 doesn't exist in Gregorian calendar\n\n\n      if (date.year === 0) {\n        return false;\n      }\n\n      var jsDate = toJSDate(date);\n      return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n    }\n  }]);\n\n  return NgbCalendarGregorian;\n}(NgbCalendar);\n\nNgbCalendarGregorian.ɵfac = function NgbCalendarGregorian_Factory(t) {\n  return ɵNgbCalendarGregorian_BaseFactory(t || NgbCalendarGregorian);\n};\n\nNgbCalendarGregorian.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarGregorian,\n  factory: NgbCalendarGregorian.ɵfac\n});\nvar ɵNgbCalendarGregorian_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarGregorian);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarGregorian, [{\n    type: Injectable\n  }], null, null);\n})();\n\nfunction isChangedDate(prev, next) {\n  return !dateComparator(prev, next);\n}\n\nfunction isChangedMonth(prev, next) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nfunction dateComparator(prev, next) {\n  return !prev && !next || !!prev && !!next && prev.equals(next);\n}\n\nfunction checkMinBeforeMax(minDate, maxDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(\"'maxDate' \".concat(maxDate, \" should be greater than 'minDate' \").concat(minDate));\n  }\n}\n\nfunction checkDateInRange(date, minDate, maxDate) {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date || null;\n}\n\nfunction isDateSelectable(date, state) {\n  var minDate = state.minDate,\n      maxDate = state.maxDate,\n      disabled = state.disabled,\n      markDisabled = state.markDisabled; // clang-format off\n\n  return !(date === null || date === undefined || disabled || markDisabled && markDisabled(date, {\n    year: date.year,\n    month: date.month\n  }) || minDate && date.before(minDate) || maxDate && date.after(maxDate)); // clang-format on\n}\n\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n\n  var months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    var index = months.findIndex(function (month) {\n      return month === minDate.month;\n    });\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    var _index = months.findIndex(function (month) {\n      return month === maxDate.month;\n    });\n\n    months = months.slice(0, _index + 1);\n  }\n\n  return months;\n}\n\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n\n  var start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  var end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n  var length = end - start + 1;\n  var numbers = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nfunction nextMonthDisabled(calendar, date, maxDate) {\n  var nextDate = Object.assign(calendar.getNext(date, 'm'), {\n    day: 1\n  });\n  return maxDate != null && nextDate.after(maxDate);\n}\n\nfunction prevMonthDisabled(calendar, date, minDate) {\n  var prevDate = Object.assign(calendar.getPrev(date, 'm'), {\n    day: 1\n  });\n  return minDate != null && (prevDate.year === minDate.year && prevDate.month < minDate.month || prevDate.year < minDate.year && minDate.month === 1);\n}\n\nfunction buildMonths(calendar, date, state, i18n, force) {\n  var displayMonths = state.displayMonths,\n      months = state.months; // move old months to a temporary array\n\n  var monthsToReuse = months.splice(0, months.length); // generate new first dates, nullify or reuse months\n\n  var firstDates = Array.from({\n    length: displayMonths\n  }, function (_, i) {\n    var firstDate = Object.assign(calendar.getNext(date, 'm', i), {\n      day: 1\n    });\n    months[i] = null;\n\n    if (!force) {\n      var reusedIndex = monthsToReuse.findIndex(function (month) {\n        return month.firstDate.equals(firstDate);\n      }); // move reused month back to months\n\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  }); // rebuild nullified months\n\n  firstDates.forEach(function (firstDate, i) {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n    }\n  });\n  return months;\n}\n\nfunction buildMonth(calendar, date, state, i18n) {\n  var month = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var dayTemplateData = state.dayTemplateData,\n      minDate = state.minDate,\n      maxDate = state.maxDate,\n      firstDayOfWeek = state.firstDayOfWeek,\n      markDisabled = state.markDisabled,\n      outsideDays = state.outsideDays,\n      weekdayWidth = state.weekdayWidth,\n      weekdaysVisible = state.weekdaysVisible;\n  var calendarToday = calendar.getToday();\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n  date = getFirstViewDate(calendar, date, firstDayOfWeek); // clearing weekdays, if not visible\n\n  if (!weekdaysVisible) {\n    month.weekdays.length = 0;\n  } // month has weeks\n\n\n  for (var week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    var weekObject = month.weeks[week];\n\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {\n        number: 0,\n        days: [],\n        collapsed: true\n      };\n    }\n\n    var days = weekObject.days; // week has days\n\n    for (var day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0 && weekdaysVisible) {\n        month.weekdays[day] = i18n.getWeekdayLabel(calendar.getWeekday(date), weekdayWidth);\n      }\n\n      var newDate = new NgbDate(date.year, date.month, date.day);\n      var nextDate = calendar.getNext(newDate);\n      var ariaLabel = i18n.getDayAriaLabel(newDate); // marking date as disabled\n\n      var disabled = !!(minDate && newDate.before(minDate) || maxDate && newDate.after(maxDate));\n\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {\n          month: month.number,\n          year: month.year\n        });\n      } // today\n\n\n      var today = newDate.equals(calendarToday); // adding user-provided data to the context\n\n      var contextUserData = dayTemplateData ? dayTemplateData(newDate, {\n        month: month.number,\n        year: month.year\n      }) : undefined; // saving first date of the month\n\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      } // saving last date of the month\n\n\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      var dayObject = days[day];\n\n      if (!dayObject) {\n        dayObject = days[day] = {};\n      }\n\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year,\n        disabled: disabled,\n        focused: false,\n        selected: false,\n        today: today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(function (day) {\n      return day.date;\n    }), firstDayOfWeek); // marking week as collapsed\n\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number && days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n  var daysPerWeek = calendar.getDaysPerWeek();\n  var firstMonthDate = new NgbDate(date.year, date.month, 1);\n  var dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n/**\r\n * A service supplying i18n data to the datepicker component.\r\n *\r\n * The default implementation of this service uses the Angular locale and registered locale data for\r\n * weekdays and month names (as explained in the Angular i18n guide).\r\n *\r\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\r\n * numerals. For other static labels the datepicker uses the default Angular i18n.\r\n *\r\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\r\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\r\n * a custom provider for i18n.\r\n */\n\n\nvar NgbDatepickerI18n = /*#__PURE__*/function () {\n  function NgbDatepickerI18n() {\n    _classCallCheck(this, NgbDatepickerI18n);\n  }\n\n  _createClass(NgbDatepickerI18n, [{\n    key: \"getWeekdayLabel\",\n    value:\n    /**\r\n     * Returns the weekday label using specified width\r\n     *\r\n     * @since 9.1.0\r\n     */\n    function getWeekdayLabel(weekday, width) {\n      return this.getWeekdayShortName(weekday);\n    }\n    /**\r\n     * Returns the text label to display above the day view.\r\n     *\r\n     * @since 9.1.0\r\n     */\n\n  }, {\n    key: \"getMonthLabel\",\n    value: function getMonthLabel(date) {\n      return \"\".concat(this.getMonthFullName(date.month, date.year), \" \").concat(this.getYearNumerals(date.year));\n    }\n    /**\r\n     * Returns the textual representation of a day that is rendered in a day cell.\r\n     *\r\n     * @since 3.0.0\r\n     */\n\n  }, {\n    key: \"getDayNumerals\",\n    value: function getDayNumerals(date) {\n      return \"\".concat(date.day);\n    }\n    /**\r\n     * Returns the textual representation of a week number rendered by datepicker.\r\n     *\r\n     * @since 3.0.0\r\n     */\n\n  }, {\n    key: \"getWeekNumerals\",\n    value: function getWeekNumerals(weekNumber) {\n      return \"\".concat(weekNumber);\n    }\n    /**\r\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\r\n     *\r\n     * @since 3.0.0\r\n     */\n\n  }, {\n    key: \"getYearNumerals\",\n    value: function getYearNumerals(year) {\n      return \"\".concat(year);\n    }\n    /**\r\n     * Returns the week label to display in the heading of the month view.\r\n     *\r\n     * @since 9.1.0\r\n     */\n\n  }, {\n    key: \"getWeekLabel\",\n    value: function getWeekLabel() {\n      return '';\n    }\n  }]);\n\n  return NgbDatepickerI18n;\n}();\n\nNgbDatepickerI18n.ɵfac = function NgbDatepickerI18n_Factory(t) {\n  return new (t || NgbDatepickerI18n)();\n};\n\nNgbDatepickerI18n.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerI18n_Factory() {\n    return NGB_DATEPICKER_18N_FACTORY(ɵɵinject(LOCALE_ID));\n  },\n  token: NgbDatepickerI18n,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n/**\r\n * A service providing default implementation for the datepicker i18n.\r\n * It can be used as a base implementation if necessary.\r\n *\r\n * @since 9.1.0\r\n */\n\n\nvar NgbDatepickerI18nDefault = /*#__PURE__*/function (_NgbDatepickerI18n) {\n  _inherits(NgbDatepickerI18nDefault, _NgbDatepickerI18n);\n\n  var _super2 = _createSuper(NgbDatepickerI18nDefault);\n\n  function NgbDatepickerI18nDefault(_locale) {\n    var _this10;\n\n    _classCallCheck(this, NgbDatepickerI18nDefault);\n\n    _this10 = _super2.call(this);\n    _this10._locale = _locale;\n    _this10._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    _this10._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n    return _this10;\n  }\n\n  _createClass(NgbDatepickerI18nDefault, [{\n    key: \"getWeekdayShortName\",\n    value: function getWeekdayShortName(weekday) {\n      return this.getWeekdayLabel(weekday, TranslationWidth.Short);\n    }\n  }, {\n    key: \"getWeekdayLabel\",\n    value: function getWeekdayLabel(weekday, width) {\n      var weekdaysStartingOnSunday = getLocaleDayNames(this._locale, FormStyle.Standalone, width === undefined ? TranslationWidth.Short : width);\n      var weekdays = weekdaysStartingOnSunday.map(function (day, index) {\n        return weekdaysStartingOnSunday[(index + 1) % 7];\n      });\n      return weekdays[weekday - 1] || '';\n    }\n  }, {\n    key: \"getMonthShortName\",\n    value: function getMonthShortName(month) {\n      return this._monthsShort[month - 1] || '';\n    }\n  }, {\n    key: \"getMonthFullName\",\n    value: function getMonthFullName(month) {\n      return this._monthsFull[month - 1] || '';\n    }\n  }, {\n    key: \"getDayAriaLabel\",\n    value: function getDayAriaLabel(date) {\n      var jsDate = new Date(date.year, date.month - 1, date.day);\n      return formatDate(jsDate, 'fullDate', this._locale);\n    }\n  }]);\n\n  return NgbDatepickerI18nDefault;\n}(NgbDatepickerI18n);\n\nNgbDatepickerI18nDefault.ɵfac = function NgbDatepickerI18nDefault_Factory(t) {\n  return new (t || NgbDatepickerI18nDefault)(ɵngcc0.ɵɵinject(LOCALE_ID));\n};\n\nNgbDatepickerI18nDefault.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerI18nDefault,\n  factory: NgbDatepickerI18nDefault.ɵfac\n});\n\nNgbDatepickerI18nDefault.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\nvar NgbDatepickerService = /*#__PURE__*/function () {\n  function NgbDatepickerService(_calendar, _i18n) {\n    var _this11 = this;\n\n    _classCallCheck(this, NgbDatepickerService);\n\n    this._calendar = _calendar;\n    this._i18n = _i18n;\n    this._VALIDATORS = {\n      dayTemplateData: function dayTemplateData(_dayTemplateData) {\n        if (_this11._state.dayTemplateData !== _dayTemplateData) {\n          return {\n            dayTemplateData: _dayTemplateData\n          };\n        }\n      },\n      displayMonths: function displayMonths(_displayMonths) {\n        _displayMonths = toInteger(_displayMonths);\n\n        if (isInteger(_displayMonths) && _displayMonths > 0 && _this11._state.displayMonths !== _displayMonths) {\n          return {\n            displayMonths: _displayMonths\n          };\n        }\n      },\n      disabled: function disabled(_disabled) {\n        if (_this11._state.disabled !== _disabled) {\n          return {\n            disabled: _disabled\n          };\n        }\n      },\n      firstDayOfWeek: function firstDayOfWeek(_firstDayOfWeek) {\n        _firstDayOfWeek = toInteger(_firstDayOfWeek);\n\n        if (isInteger(_firstDayOfWeek) && _firstDayOfWeek >= 0 && _this11._state.firstDayOfWeek !== _firstDayOfWeek) {\n          return {\n            firstDayOfWeek: _firstDayOfWeek\n          };\n        }\n      },\n      focusVisible: function focusVisible(_focusVisible) {\n        if (_this11._state.focusVisible !== _focusVisible && !_this11._state.disabled) {\n          return {\n            focusVisible: _focusVisible\n          };\n        }\n      },\n      markDisabled: function markDisabled(_markDisabled) {\n        if (_this11._state.markDisabled !== _markDisabled) {\n          return {\n            markDisabled: _markDisabled\n          };\n        }\n      },\n      maxDate: function maxDate(date) {\n        var maxDate = _this11.toValidDate(date, null);\n\n        if (isChangedDate(_this11._state.maxDate, maxDate)) {\n          return {\n            maxDate: maxDate\n          };\n        }\n      },\n      minDate: function minDate(date) {\n        var minDate = _this11.toValidDate(date, null);\n\n        if (isChangedDate(_this11._state.minDate, minDate)) {\n          return {\n            minDate: minDate\n          };\n        }\n      },\n      navigation: function navigation(_navigation) {\n        if (_this11._state.navigation !== _navigation) {\n          return {\n            navigation: _navigation\n          };\n        }\n      },\n      outsideDays: function outsideDays(_outsideDays) {\n        if (_this11._state.outsideDays !== _outsideDays) {\n          return {\n            outsideDays: _outsideDays\n          };\n        }\n      },\n      weekdays: function weekdays(_weekdays) {\n        var weekdayWidth = _weekdays === true || _weekdays === false ? TranslationWidth.Short : _weekdays;\n        var weekdaysVisible = _weekdays === true || _weekdays === false ? _weekdays : true;\n\n        if (_this11._state.weekdayWidth !== weekdayWidth || _this11._state.weekdaysVisible !== weekdaysVisible) {\n          return {\n            weekdayWidth: weekdayWidth,\n            weekdaysVisible: weekdaysVisible\n          };\n        }\n      }\n    };\n    this._model$ = new Subject();\n    this._dateSelect$ = new Subject();\n    this._state = {\n      dayTemplateData: null,\n      markDisabled: null,\n      maxDate: null,\n      minDate: null,\n      disabled: false,\n      displayMonths: 1,\n      firstDate: null,\n      firstDayOfWeek: 1,\n      lastDate: null,\n      focusDate: null,\n      focusVisible: false,\n      months: [],\n      navigation: 'select',\n      outsideDays: 'visible',\n      prevDisabled: false,\n      nextDisabled: false,\n      selectedDate: null,\n      selectBoxes: {\n        years: [],\n        months: []\n      },\n      weekdayWidth: TranslationWidth.Short,\n      weekdaysVisible: true\n    };\n  }\n\n  _createClass(NgbDatepickerService, [{\n    key: \"model$\",\n    get: function get() {\n      return this._model$.pipe(filter(function (model) {\n        return model.months.length > 0;\n      }));\n    }\n  }, {\n    key: \"dateSelect$\",\n    get: function get() {\n      return this._dateSelect$.pipe(filter(function (date) {\n        return date !== null;\n      }));\n    }\n  }, {\n    key: \"set\",\n    value: function set(options) {\n      var _this12 = this;\n\n      var patch = Object.keys(options).map(function (key) {\n        return _this12._VALIDATORS[key](options[key]);\n      }).reduce(function (obj, part) {\n        return Object.assign(Object.assign({}, obj), part);\n      }, {});\n\n      if (Object.keys(patch).length > 0) {\n        this._nextState(patch);\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus(date) {\n      var focusedDate = this.toValidDate(date, null);\n\n      if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n        this._nextState({\n          focusDate: date\n        });\n      }\n    }\n  }, {\n    key: \"focusSelect\",\n    value: function focusSelect() {\n      if (isDateSelectable(this._state.focusDate, this._state)) {\n        this.select(this._state.focusDate, {\n          emitEvent: true\n        });\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open(date) {\n      var firstDate = this.toValidDate(date, this._calendar.getToday());\n\n      if (firstDate != null && !this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\n        this._nextState({\n          firstDate: firstDate\n        });\n      }\n    }\n  }, {\n    key: \"select\",\n    value: function select(date) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var selectedDate = this.toValidDate(date, null);\n\n      if (selectedDate != null && !this._state.disabled) {\n        if (isChangedDate(this._state.selectedDate, selectedDate)) {\n          this._nextState({\n            selectedDate: selectedDate\n          });\n        }\n\n        if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n          this._dateSelect$.next(selectedDate);\n        }\n      }\n    }\n  }, {\n    key: \"toValidDate\",\n    value: function toValidDate(date, defaultValue) {\n      var ngbDate = NgbDate.from(date);\n\n      if (defaultValue === undefined) {\n        defaultValue = this._calendar.getToday();\n      }\n\n      return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    }\n  }, {\n    key: \"getMonth\",\n    value: function getMonth(struct) {\n      var _iterator2 = _createForOfIteratorHelper(this._state.months),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var month = _step2.value;\n\n          if (struct.month === month.number && struct.year === month.year) {\n            return month;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      throw new Error(\"month \".concat(struct.month, \" of year \").concat(struct.year, \" not found\"));\n    }\n  }, {\n    key: \"_nextState\",\n    value: function _nextState(patch) {\n      var newState = this._updateState(patch);\n\n      this._patchContexts(newState);\n\n      this._state = newState;\n\n      this._model$.next(this._state);\n    }\n  }, {\n    key: \"_patchContexts\",\n    value: function _patchContexts(state) {\n      var months = state.months,\n          displayMonths = state.displayMonths,\n          selectedDate = state.selectedDate,\n          focusDate = state.focusDate,\n          focusVisible = state.focusVisible,\n          disabled = state.disabled,\n          outsideDays = state.outsideDays;\n      state.months.forEach(function (month) {\n        month.weeks.forEach(function (week) {\n          week.days.forEach(function (day) {\n            // patch focus flag\n            if (focusDate) {\n              day.context.focused = focusDate.equals(day.date) && focusVisible;\n            } // calculating tabindex\n\n\n            day.tabindex = !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1; // override context disabled\n\n            if (disabled === true) {\n              day.context.disabled = true;\n            } // patch selection flag\n\n\n            if (selectedDate !== undefined) {\n              day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n            } // visibility\n\n\n            if (month.number !== day.date.month) {\n              day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' || displayMonths > 1 && day.date.after(months[0].firstDate) && day.date.before(months[displayMonths - 1].lastDate);\n            }\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_updateState\",\n    value: function _updateState(patch) {\n      // patching fields\n      var state = Object.assign({}, this._state, patch);\n      var startDate = state.firstDate; // min/max dates changed\n\n      if ('minDate' in patch || 'maxDate' in patch) {\n        checkMinBeforeMax(state.minDate, state.maxDate);\n        state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n        state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n        startDate = state.focusDate;\n      } // disabled\n\n\n      if ('disabled' in patch) {\n        state.focusVisible = false;\n      } // initial rebuild via 'select()'\n\n\n      if ('selectedDate' in patch && this._state.months.length === 0) {\n        startDate = state.selectedDate;\n      } // terminate early if only focus visibility was changed\n\n\n      if ('focusVisible' in patch) {\n        return state;\n      } // focus date changed\n\n\n      if ('focusDate' in patch) {\n        state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n        startDate = state.focusDate; // nothing to rebuild if only focus changed and it is still visible\n\n        if (state.months.length !== 0 && state.focusDate && !state.focusDate.before(state.firstDate) && !state.focusDate.after(state.lastDate)) {\n          return state;\n        }\n      } // first date changed\n\n\n      if ('firstDate' in patch) {\n        state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n        startDate = state.firstDate;\n      } // rebuilding months\n\n\n      if (startDate) {\n        var forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch || 'weekdaysVisible' in patch;\n        var months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild); // updating months and boundary dates\n\n        state.months = months;\n        state.firstDate = months[0].firstDate;\n        state.lastDate = months[months.length - 1].lastDate; // reset selected date if 'markDisabled' returns true\n\n        if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n          state.selectedDate = null;\n        } // adjusting focus after months were built\n\n\n        if ('firstDate' in patch) {\n          if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n            state.focusDate = startDate;\n          }\n        } // adjusting months/years for the select box navigation\n\n\n        var yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n        var monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n\n        if (state.navigation === 'select') {\n          // years ->  boundaries (min/max were changed)\n          if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n            state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n          } // months -> when current year or boundaries change\n\n\n          if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n            state.selectBoxes.months = generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n          }\n        } else {\n          state.selectBoxes = {\n            years: [],\n            months: []\n          };\n        } // updating navigation arrows -> boundaries change (min/max) or month/year changes\n\n\n        if ((state.navigation === 'arrows' || state.navigation === 'select') && (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n          state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n          state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n        }\n      }\n\n      return state;\n    }\n  }]);\n\n  return NgbDatepickerService;\n}();\n\nNgbDatepickerService.ɵfac = function NgbDatepickerService_Factory(t) {\n  return new (t || NgbDatepickerService)(ɵngcc0.ɵɵinject(NgbCalendar), ɵngcc0.ɵɵinject(NgbDatepickerI18n));\n};\n\nNgbDatepickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerService,\n  factory: NgbDatepickerService.ɵfac\n});\n\nNgbDatepickerService.ctorParameters = function () {\n  return [{\n    type: NgbCalendar\n  }, {\n    type: NgbDatepickerI18n\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }];\n  }, null);\n})(); // clang-format on\n\n\nvar NavigationEvent;\n\n(function (NavigationEvent) {\n  NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n  NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n/**\r\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the datepickers used in the application.\r\n */\n\n\nvar NgbDatepickerConfig = /*#__PURE__*/_createClass(function NgbDatepickerConfig() {\n  _classCallCheck(this, NgbDatepickerConfig);\n\n  this.displayMonths = 1;\n  this.firstDayOfWeek = 1;\n  this.navigation = 'select';\n  this.outsideDays = 'visible';\n  this.showWeekdays = true;\n  this.showWeekNumbers = false;\n  this.weekdays = TranslationWidth.Short;\n});\n\nNgbDatepickerConfig.ɵfac = function NgbDatepickerConfig_Factory(t) {\n  return new (t || NgbDatepickerConfig)();\n};\n\nNgbDatepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerConfig_Factory() {\n    return new NgbDatepickerConfig();\n  },\n  token: NgbDatepickerConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n/**\r\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\r\n * any provided user date model `D`, ex. a string, a native date, etc.\r\n *\r\n * The adapter is used **only** for conversion when binding datepicker to a form control,\r\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\r\n *\r\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\r\n *\r\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\r\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\r\n */\n\n\nvar NgbDateAdapter = /*#__PURE__*/_createClass(function NgbDateAdapter() {\n  _classCallCheck(this, NgbDateAdapter);\n});\n\nNgbDateAdapter.ɵfac = function NgbDateAdapter_Factory(t) {\n  return new (t || NgbDateAdapter)();\n};\n\nNgbDateAdapter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY,\n  token: NgbDateAdapter,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nvar NgbDateStructAdapter = /*#__PURE__*/function (_NgbDateAdapter) {\n  _inherits(NgbDateStructAdapter, _NgbDateAdapter);\n\n  var _super3 = _createSuper(NgbDateStructAdapter);\n\n  function NgbDateStructAdapter() {\n    _classCallCheck(this, NgbDateStructAdapter);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(NgbDateStructAdapter, [{\n    key: \"fromModel\",\n    value:\n    /**\r\n     * Converts a NgbDateStruct value into NgbDateStruct value\r\n     */\n    function fromModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n        year: date.year,\n        month: date.month,\n        day: date.day\n      } : null;\n    }\n    /**\r\n     * Converts a NgbDateStruct value into NgbDateStruct value\r\n     */\n\n  }, {\n    key: \"toModel\",\n    value: function toModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n        year: date.year,\n        month: date.month,\n        day: date.day\n      } : null;\n    }\n  }]);\n\n  return NgbDateStructAdapter;\n}(NgbDateAdapter);\n\nNgbDateStructAdapter.ɵfac = function NgbDateStructAdapter_Factory(t) {\n  return ɵNgbDateStructAdapter_BaseFactory(t || NgbDateStructAdapter);\n};\n\nNgbDateStructAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateStructAdapter,\n  factory: NgbDateStructAdapter.ɵfac\n});\nvar ɵNgbDateStructAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateStructAdapter);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * A directive that marks the content template that customizes the way datepicker months are displayed\r\n *\r\n * @since 5.3.0\r\n */\n\n\nvar NgbDatepickerContent = /*#__PURE__*/_createClass(function NgbDatepickerContent(templateRef) {\n  _classCallCheck(this, NgbDatepickerContent);\n\n  this.templateRef = templateRef;\n});\n\nNgbDatepickerContent.ɵfac = function NgbDatepickerContent_Factory(t) {\n  return new (t || NgbDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbDatepickerContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDatepickerContent,\n  selectors: [[\"ng-template\", \"ngbDatepickerContent\", \"\"]]\n});\n\nNgbDatepickerContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbDatepickerContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * A highly configurable component that helps you with selecting calendar dates.\r\n *\r\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\r\n */\n\n\nvar NgbDatepicker = /*#__PURE__*/function () {\n  function NgbDatepicker(_service, _calendar, i18n, config, cd, _elementRef, _ngbDateAdapter, _ngZone) {\n    var _this13 = this;\n\n    _classCallCheck(this, NgbDatepicker);\n\n    this._service = _service;\n    this._calendar = _calendar;\n    this.i18n = i18n;\n    this._elementRef = _elementRef;\n    this._ngbDateAdapter = _ngbDateAdapter;\n    this._ngZone = _ngZone;\n    this._controlValue = null;\n    this._destroyed$ = new Subject();\n    this._publicState = {};\n    /**\r\n     * An event emitted right before the navigation happens and displayed month changes.\r\n     *\r\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\r\n     */\n\n    this.navigate = new EventEmitter();\n    /**\r\n     * An event emitted when user selects a date using keyboard or mouse.\r\n     *\r\n     * The payload of the event is currently selected `NgbDate`.\r\n     *\r\n     * @since 5.2.0\r\n     */\n\n    this.dateSelect = new EventEmitter();\n\n    this.onChange = function (_) {};\n\n    this.onTouched = function () {};\n\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate', 'weekdays'].forEach(function (input) {\n      return _this13[input] = config[input];\n    });\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(function (date) {\n      _this13.dateSelect.emit(date);\n    });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(function (model) {\n      var newDate = model.firstDate;\n      var oldDate = _this13.model ? _this13.model.firstDate : null; // update public state\n\n      _this13._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(function (viewModel) {\n          return viewModel.firstDate;\n        })\n      };\n      var navigationPrevented = false; // emitting navigation event if the first month changes\n\n      if (!newDate.equals(oldDate)) {\n        _this13.navigate.emit({\n          current: oldDate ? {\n            year: oldDate.year,\n            month: oldDate.month\n          } : null,\n          next: {\n            year: newDate.year,\n            month: newDate.month\n          },\n          preventDefault: function preventDefault() {\n            return navigationPrevented = true;\n          }\n        }); // can't prevent the very first navigation\n\n\n        if (navigationPrevented && oldDate !== null) {\n          _this13._service.open(oldDate);\n\n          return;\n        }\n      }\n\n      var newSelectedDate = model.selectedDate;\n      var newFocusedDate = model.focusDate;\n      var oldFocusedDate = _this13.model ? _this13.model.focusDate : null;\n      _this13.model = model; // handling selection change\n\n      if (isChangedDate(newSelectedDate, _this13._controlValue)) {\n        _this13._controlValue = newSelectedDate;\n\n        _this13.onTouched();\n\n        _this13.onChange(_this13._ngbDateAdapter.toModel(newSelectedDate));\n      } // handling focus change\n\n\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        _this13.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n  /**\r\n   * If `true`, weekdays will be displayed.\r\n   *\r\n   * @deprecated 9.1.0, please use 'weekdays' instead\r\n   */\n\n\n  _createClass(NgbDatepicker, [{\n    key: \"showWeekdays\",\n    get: function get() {\n      return this._showWeekdays;\n    }\n    /**\r\n     *  Returns the readonly public state of the datepicker\r\n     *\r\n     * @since 5.2.0\r\n     */\n    ,\n    set: function set(weekdays) {\n      this.weekdays = weekdays;\n      this._showWeekdays = weekdays;\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this._publicState;\n    }\n    /**\r\n     *  Returns the calendar service used in the specific datepicker instance.\r\n     *\r\n     *  @since 5.3.0\r\n     */\n\n  }, {\n    key: \"calendar\",\n    get: function get() {\n      return this._calendar;\n    }\n    /**\r\n     *  Focuses on given date.\r\n     */\n\n  }, {\n    key: \"focusDate\",\n    value: function focusDate(date) {\n      this._service.focus(NgbDate.from(date));\n    }\n    /**\r\n     *  Selects focused date.\r\n     */\n\n  }, {\n    key: \"focusSelect\",\n    value: function focusSelect() {\n      this._service.focusSelect();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var _this14 = this;\n\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n        var elementToFocus = _this14._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n\n        if (elementToFocus) {\n          elementToFocus.focus();\n        }\n      });\n    }\n    /**\r\n     * Navigates to the provided date.\r\n     *\r\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n     * If nothing or invalid date provided calendar will open current month.\r\n     *\r\n     * Use the `[startDate]` input as an alternative.\r\n     */\n\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(date) {\n      this._service.open(NgbDate.from(date ? date.day ? date : Object.assign(Object.assign({}, date), {\n        day: 1\n      }) : null));\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this15 = this;\n\n      this._ngZone.runOutsideAngular(function () {\n        var focusIns$ = fromEvent(_this15._contentEl.nativeElement, 'focusin');\n        var focusOuts$ = fromEvent(_this15._contentEl.nativeElement, 'focusout');\n        var nativeElement = _this15._elementRef.nativeElement; // we're changing 'focusVisible' only when entering or leaving months view\n        // and ignoring all focus events where both 'target' and 'related' target are day cells\n\n        merge(focusIns$, focusOuts$).pipe(filter(function (_ref11) {\n          var target = _ref11.target,\n              relatedTarget = _ref11.relatedTarget;\n          return !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') && nativeElement.contains(target) && nativeElement.contains(relatedTarget));\n        }), takeUntil(_this15._destroyed$)).subscribe(function (_ref12) {\n          var type = _ref12.type;\n          return _this15._ngZone.run(function () {\n            return _this15._service.set({\n              focusVisible: type === 'focusin'\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyed$.next();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this16 = this;\n\n      if (this.model === undefined) {\n        var inputs = {};\n        ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays', 'weekdays'].forEach(function (name) {\n          return inputs[name] = _this16[name];\n        });\n\n        this._service.set(inputs);\n\n        this.navigateTo(this.startDate);\n      }\n\n      if (!this.dayTemplate) {\n        this.dayTemplate = this._defaultDayTemplate;\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this17 = this;\n\n      var inputs = {};\n\n      if (changes.showWeekdays) {\n        inputs['weekdays'] = this.weekdays;\n      }\n\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays', 'weekdays'].filter(function (name) {\n        return name in changes;\n      }).forEach(function (name) {\n        return inputs[name] = _this17[name];\n      });\n\n      this._service.set(inputs);\n\n      if ('startDate' in changes) {\n        var _changes$startDate = changes.startDate,\n            currentValue = _changes$startDate.currentValue,\n            previousValue = _changes$startDate.previousValue;\n\n        if (isChangedMonth(previousValue, currentValue)) {\n          this.navigateTo(this.startDate);\n        }\n      }\n    }\n  }, {\n    key: \"onDateSelect\",\n    value: function onDateSelect(date) {\n      this._service.focus(date);\n\n      this._service.select(date, {\n        emitEvent: true\n      });\n    }\n  }, {\n    key: \"onNavigateDateSelect\",\n    value: function onNavigateDateSelect(date) {\n      this._service.open(date);\n    }\n  }, {\n    key: \"onNavigateEvent\",\n    value: function onNavigateEvent(event) {\n      switch (event) {\n        case NavigationEvent.PREV:\n          this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n\n          break;\n\n        case NavigationEvent.NEXT:\n          this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n\n          break;\n      }\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(disabled) {\n      this._service.set({\n        disabled: disabled\n      });\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n\n      this._service.select(this._controlValue);\n    }\n  }]);\n\n  return NgbDatepicker;\n}();\n\nNgbDatepicker.ɵfac = function NgbDatepicker_Factory(t) {\n  return new (t || NgbDatepicker)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerService), ɵngcc0.ɵɵdirectiveInject(NgbCalendar), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgbDateAdapter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNgbDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepicker,\n  selectors: [[\"ngb-datepicker\"]],\n  contentQueries: function NgbDatepicker_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDatepickerContent, 3);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    }\n  },\n  viewQuery: function NgbDatepicker_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c10, 3);\n      ɵngcc0.ɵɵviewQuery(_c11, 3);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._defaultDayTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentEl = _t.first);\n    }\n  },\n  inputs: {\n    showWeekdays: \"showWeekdays\",\n    weekdays: \"weekdays\",\n    dayTemplate: \"dayTemplate\",\n    dayTemplateData: \"dayTemplateData\",\n    displayMonths: \"displayMonths\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    footerTemplate: \"footerTemplate\",\n    markDisabled: \"markDisabled\",\n    maxDate: \"maxDate\",\n    minDate: \"minDate\",\n    navigation: \"navigation\",\n    outsideDays: \"outsideDays\",\n    showWeekNumbers: \"showWeekNumbers\",\n    startDate: \"startDate\"\n  },\n  outputs: {\n    navigate: \"navigate\",\n    dateSelect: \"dateSelect\"\n  },\n  exportAs: [\"ngbDatepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NgbDatepicker;\n    }),\n    multi: true\n  }, NgbDatepickerService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 5,\n  consts: [[\"defaultDayTemplate\", \"\"], [\"defaultContentTemplate\", \"\"], [1, \"ngb-dp-header\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\", 4, \"ngIf\"], [1, \"ngb-dp-content\"], [\"content\", \"\"], [3, \"ngTemplateOutlet\"], [\"ngbDatepickerDayView\", \"\", 3, \"date\", \"currentMonth\", \"selected\", \"disabled\", \"focused\"], [\"class\", \"ngb-dp-month\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-month\"], [\"class\", \"ngb-dp-month-name\", 4, \"ngIf\"], [3, \"month\"], [1, \"ngb-dp-month-name\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\"]],\n  template: function NgbDatepicker_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbDatepicker_ng_template_0_Template, 1, 5, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbDatepicker_ng_template_2_Template, 1, 1, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementStart(4, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(5, NgbDatepicker_ngb_datepicker_navigation_5_Template, 1, 7, \"ngb-datepicker-navigation\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"div\", 4, 5);\n      ɵngcc0.ɵɵtemplate(8, NgbDatepicker_ng_template_8_Template, 0, 0, \"ng-template\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(9, NgbDatepicker_ng_template_9_Template, 0, 0, \"ng-template\", 6);\n    }\n\n    if (rf & 2) {\n      var _r2 = ɵngcc0.ɵɵreference(3);\n\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.navigation !== \"none\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"ngb-dp-months\", !ctx.contentTemplate);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx.contentTemplate == null ? null : ctx.contentTemplate.templateRef) || _r2);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.footerTemplate);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, NgbDatepickerDayView, ɵngcc1.NgForOf, NgbDatepickerMonth, NgbDatepickerNavigation];\n  },\n  styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{background-color:#f8f9fa;background-color:var(--light);border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{background-color:#f8f9fa;background-color:var(--light);font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepicker.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerService\n  }, {\n    type: NgbCalendar\n  }, {\n    type: NgbDatepickerI18n\n  }, {\n    type: NgbDatepickerConfig\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: NgbDateAdapter\n  }, {\n    type: NgZone\n  }];\n};\n\nNgbDatepicker.propDecorators = {\n  _defaultDayTemplate: [{\n    type: ViewChild,\n    args: ['defaultDayTemplate', {\n      static: true\n    }]\n  }],\n  _contentEl: [{\n    type: ViewChild,\n    args: ['content', {\n      static: true\n    }]\n  }],\n  contentTemplate: [{\n    type: ContentChild,\n    args: [NgbDatepickerContent, {\n      static: true\n    }]\n  }],\n  dayTemplate: [{\n    type: Input\n  }],\n  dayTemplateData: [{\n    type: Input\n  }],\n  displayMonths: [{\n    type: Input\n  }],\n  firstDayOfWeek: [{\n    type: Input\n  }],\n  footerTemplate: [{\n    type: Input\n  }],\n  markDisabled: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  navigation: [{\n    type: Input\n  }],\n  outsideDays: [{\n    type: Input\n  }],\n  showWeekdays: [{\n    type: Input\n  }],\n  showWeekNumbers: [{\n    type: Input\n  }],\n  startDate: [{\n    type: Input\n  }],\n  weekdays: [{\n    type: Input\n  }],\n  navigate: [{\n    type: Output\n  }],\n  dateSelect: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepicker, [{\n    type: Component,\n    args: [{\n      exportAs: 'ngbDatepicker',\n      selector: 'ngb-datepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-template #defaultDayTemplate let-date=\\\"date\\\" let-currentMonth=\\\"currentMonth\\\" let-selected=\\\"selected\\\"\\n                 let-disabled=\\\"disabled\\\" let-focused=\\\"focused\\\">\\n      <div ngbDatepickerDayView\\n        [date]=\\\"date\\\"\\n        [currentMonth]=\\\"currentMonth\\\"\\n        [selected]=\\\"selected\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [focused]=\\\"focused\\\">\\n      </div>\\n    </ng-template>\\n\\n    <ng-template #defaultContentTemplate>\\n      <div *ngFor=\\\"let month of model.months; let i = index;\\\" class=\\\"ngb-dp-month\\\">\\n        <div *ngIf=\\\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\\\" class=\\\"ngb-dp-month-name\\\">\\n          {{ i18n.getMonthLabel(month.firstDate) }}\\n        </div>\\n        <ngb-datepicker-month [month]=\\\"month.firstDate\\\"></ngb-datepicker-month>\\n      </div>\\n    </ng-template>\\n\\n    <div class=\\\"ngb-dp-header\\\">\\n      <ngb-datepicker-navigation *ngIf=\\\"navigation !== 'none'\\\"\\n        [date]=\\\"model.firstDate!\\\"\\n        [months]=\\\"model.months\\\"\\n        [disabled]=\\\"model.disabled\\\"\\n        [showSelect]=\\\"model.navigation === 'select'\\\"\\n        [prevDisabled]=\\\"model.prevDisabled\\\"\\n        [nextDisabled]=\\\"model.nextDisabled\\\"\\n        [selectBoxes]=\\\"model.selectBoxes\\\"\\n        (navigate)=\\\"onNavigateEvent($event)\\\"\\n        (select)=\\\"onNavigateDateSelect($event)\\\">\\n      </ngb-datepicker-navigation>\\n    </div>\\n\\n    <div class=\\\"ngb-dp-content\\\" [class.ngb-dp-months]=\\\"!contentTemplate\\\" #content>\\n      <ng-template [ngTemplateOutlet]=\\\"contentTemplate?.templateRef || defaultContentTemplate\\\"></ng-template>\\n    </div>\\n\\n    <ng-template [ngTemplateOutlet]=\\\"footerTemplate\\\"></ng-template>\\n  \",\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NgbDatepicker;\n        }),\n        multi: true\n      }, NgbDatepickerService],\n      styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{background-color:#f8f9fa;background-color:var(--light);border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{background-color:#f8f9fa;background-color:var(--light);font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerService\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepickerConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    navigate: [{\n      type: Output\n    }],\n    dateSelect: [{\n      type: Output\n    }],\n    showWeekdays: [{\n      type: Input\n    }],\n    weekdays: [{\n      type: Input\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    _defaultDayTemplate: [{\n      type: ViewChild,\n      args: ['defaultDayTemplate', {\n        static: true\n      }]\n    }],\n    _contentEl: [{\n      type: ViewChild,\n      args: ['content', {\n        static: true\n      }]\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: [NgbDatepickerContent, {\n        static: true\n      }]\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }]\n  });\n})();\n\nvar Key;\n\n(function (Key) {\n  Key[Key[\"Tab\"] = 9] = \"Tab\";\n  Key[Key[\"Enter\"] = 13] = \"Enter\";\n  Key[Key[\"Escape\"] = 27] = \"Escape\";\n  Key[Key[\"Space\"] = 32] = \"Space\";\n  Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n  Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n  Key[Key[\"End\"] = 35] = \"End\";\n  Key[Key[\"Home\"] = 36] = \"Home\";\n  Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n  Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n  Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n  Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\n/**\r\n * A service that represents the keyboard navigation.\r\n *\r\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\r\n *\r\n * @since 5.2.0\r\n */\n\n\nvar NgbDatepickerKeyboardService = /*#__PURE__*/function () {\n  function NgbDatepickerKeyboardService() {\n    _classCallCheck(this, NgbDatepickerKeyboardService);\n  }\n\n  _createClass(NgbDatepickerKeyboardService, [{\n    key: \"processKey\",\n    value:\n    /**\r\n     * Processes a keyboard event.\r\n     */\n    function processKey(event, datepicker) {\n      var state = datepicker.state,\n          calendar = datepicker.calendar; // tslint:disable-next-line:deprecation\n\n      switch (event.which) {\n        case Key.PageUp:\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n          break;\n\n        case Key.PageDown:\n          datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n          break;\n\n        case Key.End:\n          datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n          break;\n\n        case Key.Home:\n          datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n          break;\n\n        case Key.ArrowLeft:\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n          break;\n\n        case Key.ArrowUp:\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n          break;\n\n        case Key.ArrowRight:\n          datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n          break;\n\n        case Key.ArrowDown:\n          datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n          break;\n\n        case Key.Enter:\n        case Key.Space:\n          datepicker.focusSelect();\n          break;\n\n        default:\n          return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }]);\n\n  return NgbDatepickerKeyboardService;\n}();\n\nNgbDatepickerKeyboardService.ɵfac = function NgbDatepickerKeyboardService_Factory(t) {\n  return new (t || NgbDatepickerKeyboardService)();\n};\n\nNgbDatepickerKeyboardService.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerKeyboardService_Factory() {\n    return new NgbDatepickerKeyboardService();\n  },\n  token: NgbDatepickerKeyboardService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerKeyboardService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\r\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\r\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\r\n *\r\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\r\n *\r\n * @since 5.3.0\r\n */\n\n\nvar NgbDatepickerMonth = /*#__PURE__*/function () {\n  function NgbDatepickerMonth(i18n, datepicker, _keyboardService, _service) {\n    _classCallCheck(this, NgbDatepickerMonth);\n\n    this.i18n = i18n;\n    this.datepicker = datepicker;\n    this._keyboardService = _keyboardService;\n    this._service = _service;\n  }\n  /**\r\n   * The first date of month to be rendered.\r\n   *\r\n   * This month must one of the months present in the\r\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\r\n   */\n\n\n  _createClass(NgbDatepickerMonth, [{\n    key: \"month\",\n    set: function set(month) {\n      this.viewModel = this._service.getMonth(month);\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      this._keyboardService.processKey(event, this.datepicker);\n    }\n  }, {\n    key: \"doSelect\",\n    value: function doSelect(day) {\n      if (!day.context.disabled && !day.hidden) {\n        this.datepicker.onDateSelect(day.date);\n      }\n    }\n  }]);\n\n  return NgbDatepickerMonth;\n}();\n\nNgbDatepickerMonth.ɵfac = function NgbDatepickerMonth_Factory(t) {\n  return new (t || NgbDatepickerMonth)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(NgbDatepicker), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerKeyboardService), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerService));\n};\n\nNgbDatepickerMonth.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerMonth,\n  selectors: [[\"ngb-datepicker-month\"]],\n  hostAttrs: [\"role\", \"grid\"],\n  hostBindings: function NgbDatepickerMonth_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown\", function NgbDatepickerMonth_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    month: \"month\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"ngb-dp-week ngb-dp-weekdays\", \"role\", \"row\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"role\", \"row\", 1, \"ngb-dp-week\", \"ngb-dp-weekdays\"], [\"class\", \"ngb-dp-weekday ngb-dp-showweek small\", 4, \"ngIf\"], [\"class\", \"ngb-dp-weekday small\", \"role\", \"columnheader\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-weekday\", \"ngb-dp-showweek\", \"small\"], [\"role\", \"columnheader\", 1, \"ngb-dp-weekday\", \"small\"], [\"class\", \"ngb-dp-week\", \"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\", 1, \"ngb-dp-week\"], [\"class\", \"ngb-dp-week-number small text-muted\", 4, \"ngIf\"], [\"class\", \"ngb-dp-day\", \"role\", \"gridcell\", 3, \"disabled\", \"tabindex\", \"hidden\", \"ngb-dp-today\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-week-number\", \"small\", \"text-muted\"], [\"role\", \"gridcell\", 1, \"ngb-dp-day\", 3, \"tabindex\", \"click\"], [3, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbDatepickerMonth_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_div_0_Template, 3, 2, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.viewModel.weekdays.length > 0);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.viewModel.weeks);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  styles: [\"ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{font-style:italic;line-height:2rem;text-align:center}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{background-color:#f8f9fa;background-color:var(--light);border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{height:2rem;width:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\"],\n  encapsulation: 2\n});\n\nNgbDatepickerMonth.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }, {\n    type: NgbDatepicker\n  }, {\n    type: NgbDatepickerKeyboardService\n  }, {\n    type: NgbDatepickerService\n  }];\n};\n\nNgbDatepickerMonth.propDecorators = {\n  month: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerMonth, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-month',\n      host: {\n        'role': 'grid',\n        '(keydown)': 'onKeyDown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div *ngIf=\\\"viewModel.weekdays.length > 0\\\" class=\\\"ngb-dp-week ngb-dp-weekdays\\\" role=\\\"row\\\">\\n      <div *ngIf=\\\"datepicker.showWeekNumbers\\\" class=\\\"ngb-dp-weekday ngb-dp-showweek small\\\">{{ i18n.getWeekLabel() }}</div>\\n      <div *ngFor=\\\"let weekday of viewModel.weekdays\\\" class=\\\"ngb-dp-weekday small\\\" role=\\\"columnheader\\\">{{ weekday }}</div>\\n    </div>\\n    <ng-template ngFor let-week [ngForOf]=\\\"viewModel.weeks\\\">\\n      <div *ngIf=\\\"!week.collapsed\\\" class=\\\"ngb-dp-week\\\" role=\\\"row\\\">\\n        <div *ngIf=\\\"datepicker.showWeekNumbers\\\" class=\\\"ngb-dp-week-number small text-muted\\\">{{ i18n.getWeekNumerals(week.number) }}</div>\\n        <div *ngFor=\\\"let day of week.days\\\" (click)=\\\"doSelect(day); $event.preventDefault()\\\" class=\\\"ngb-dp-day\\\" role=\\\"gridcell\\\"\\n             [class.disabled]=\\\"day.context.disabled\\\"\\n             [tabindex]=\\\"day.tabindex\\\"\\n             [class.hidden]=\\\"day.hidden\\\"\\n             [class.ngb-dp-today]=\\\"day.context.today\\\"\\n             [attr.aria-label]=\\\"day.ariaLabel\\\">\\n          <ng-template [ngIf]=\\\"!day.hidden\\\">\\n            <ng-template [ngTemplateOutlet]=\\\"datepicker.dayTemplate\\\" [ngTemplateOutletContext]=\\\"day.context\\\"></ng-template>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \",\n      styles: [\"ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{font-style:italic;line-height:2rem;text-align:center}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{background-color:#f8f9fa;background-color:var(--light);border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{height:2rem;width:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepicker\n    }, {\n      type: NgbDatepickerKeyboardService\n    }, {\n      type: NgbDatepickerService\n    }];\n  }, {\n    month: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbDatepickerNavigation = /*#__PURE__*/function () {\n  function NgbDatepickerNavigation(i18n) {\n    _classCallCheck(this, NgbDatepickerNavigation);\n\n    this.i18n = i18n;\n    this.navigation = NavigationEvent;\n    this.months = [];\n    this.navigate = new EventEmitter();\n    this.select = new EventEmitter();\n  }\n\n  _createClass(NgbDatepickerNavigation, [{\n    key: \"onClickPrev\",\n    value: function onClickPrev(event) {\n      event.currentTarget.focus();\n      this.navigate.emit(this.navigation.PREV);\n    }\n  }, {\n    key: \"onClickNext\",\n    value: function onClickNext(event) {\n      event.currentTarget.focus();\n      this.navigate.emit(this.navigation.NEXT);\n    }\n  }]);\n\n  return NgbDatepickerNavigation;\n}();\n\nNgbDatepickerNavigation.ɵfac = function NgbDatepickerNavigation_Factory(t) {\n  return new (t || NgbDatepickerNavigation)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n));\n};\n\nNgbDatepickerNavigation.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerNavigation,\n  selectors: [[\"ngb-datepicker-navigation\"]],\n  inputs: {\n    months: \"months\",\n    date: \"date\",\n    disabled: \"disabled\",\n    showSelect: \"showSelect\",\n    prevDisabled: \"prevDisabled\",\n    nextDisabled: \"nextDisabled\",\n    selectBoxes: \"selectBoxes\"\n  },\n  outputs: {\n    navigate: \"navigate\",\n    select: \"select\"\n  },\n  decls: 8,\n  vars: 4,\n  consts: function consts() {\n    var i18n_12;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_13 = goog.getMsg(\"Previous month\");\n      i18n_12 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_13;\n    } else {\n      i18n_12 = $localize(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\":@@ngb.datepicker.previous-month\\u241Fc3b08b07b5ab98e7cdcf18df39355690ab7d3884\\u241F8586908745456864217:Previous month\"])));\n    }\n\n    var i18n_14;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_15 = goog.getMsg(\"Previous month\");\n      i18n_14 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_15;\n    } else {\n      i18n_14 = $localize(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\":@@ngb.datepicker.previous-month\\u241Fc3b08b07b5ab98e7cdcf18df39355690ab7d3884\\u241F8586908745456864217:Previous month\"])));\n    }\n\n    var i18n_16;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_17 = goog.getMsg(\"Next month\");\n      i18n_16 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_17;\n    } else {\n      i18n_16 = $localize(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\":@@ngb.datepicker.next-month\\u241F4bd046985cfe13040d5ef0cd881edce0968a111a\\u241F3628374603023447227:Next month\"])));\n    }\n\n    var i18n_18;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_19 = goog.getMsg(\"Next month\");\n      i18n_18 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_19;\n    } else {\n      i18n_18 = $localize(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\":@@ngb.datepicker.next-month\\u241F4bd046985cfe13040d5ef0cd881edce0968a111a\\u241F3628374603023447227:Next month\"])));\n    }\n\n    return [[1, \"ngb-dp-arrow\"], [\"type\", \"button\", \"aria-label\", i18n_12, \"title\", i18n_14, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-chevron\"], [\"class\", \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ngb-dp-arrow\", \"right\"], [\"type\", \"button\", \"aria-label\", i18n_16, \"title\", i18n_18, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"ngb-dp-arrow\", 4, \"ngIf\"], [1, \"ngb-dp-month-name\"]];\n  },\n  template: function NgbDatepickerNavigation_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_1_listener($event) {\n        return ctx.onClickPrev($event);\n      });\n      ɵngcc0.ɵɵelement(2, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template, 1, 4, \"ngb-datepicker-navigation-select\", 3);\n      ɵngcc0.ɵɵtemplate(4, NgbDatepickerNavigation_4_Template, 1, 1, undefined, 4);\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n      ɵngcc0.ɵɵelementStart(6, \"button\", 6);\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_6_listener($event) {\n        return ctx.onClickNext($event);\n      });\n      ɵngcc0.ɵɵelement(7, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.prevDisabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSelect);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.showSelect);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.nextDisabled);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, NgbDatepickerNavigationSelect, ɵngcc1.NgForOf];\n  },\n  styles: [\"ngb-datepicker-navigation{align-items:center;display:flex}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg);width:.75em}.ngb-dp-arrow{display:flex;flex:1 1 auto;height:2rem;margin:0;padding-left:0;padding-right:0;width:2rem}.ngb-dp-arrow.right{justify-content:flex-end}.ngb-dp-arrow.right .ngb-dp-navigation-chevron{margin-left:.15em;margin-right:.25em;transform:rotate(45deg)}.ngb-dp-arrow-btn{background-color:transparent;border:none;margin:0 .5rem;padding:0 .25rem;z-index:1}.ngb-dp-arrow-btn:focus{outline-style:auto;outline-width:1px}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepickerNavigation.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }];\n};\n\nNgbDatepickerNavigation.propDecorators = {\n  date: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  months: [{\n    type: Input\n  }],\n  showSelect: [{\n    type: Input\n  }],\n  prevDisabled: [{\n    type: Input\n  }],\n  nextDisabled: [{\n    type: Input\n  }],\n  selectBoxes: [{\n    type: Input\n  }],\n  navigate: [{\n    type: Output\n  }],\n  select: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerNavigation, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div class=\\\"ngb-dp-arrow\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\" (click)=\\\"onClickPrev($event)\\\" [disabled]=\\\"prevDisabled\\\"\\n              i18n-aria-label=\\\"@@ngb.datepicker.previous-month\\\" aria-label=\\\"Previous month\\\"\\n              i18n-title=\\\"@@ngb.datepicker.previous-month\\\" title=\\\"Previous month\\\">\\n        <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n      </button>\\n    </div>\\n    <ngb-datepicker-navigation-select *ngIf=\\\"showSelect\\\" class=\\\"ngb-dp-navigation-select\\\"\\n      [date]=\\\"date\\\"\\n      [disabled] = \\\"disabled\\\"\\n      [months]=\\\"selectBoxes.months\\\"\\n      [years]=\\\"selectBoxes.years\\\"\\n      (select)=\\\"select.emit($event)\\\">\\n    </ngb-datepicker-navigation-select>\\n\\n    <ng-template *ngIf=\\\"!showSelect\\\" ngFor let-month [ngForOf]=\\\"months\\\" let-i=\\\"index\\\">\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i > 0\\\"></div>\\n      <div class=\\\"ngb-dp-month-name\\\">\\n        {{ i18n.getMonthLabel(month.firstDate) }}\\n      </div>\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i !== months.length - 1\\\"></div>\\n    </ng-template>\\n    <div class=\\\"ngb-dp-arrow right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\" (click)=\\\"onClickNext($event)\\\" [disabled]=\\\"nextDisabled\\\"\\n              i18n-aria-label=\\\"@@ngb.datepicker.next-month\\\" aria-label=\\\"Next month\\\"\\n              i18n-title=\\\"@@ngb.datepicker.next-month\\\" title=\\\"Next month\\\">\\n        <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n      </button>\\n    </div>\\n    \",\n      styles: [\"ngb-datepicker-navigation{align-items:center;display:flex}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg);width:.75em}.ngb-dp-arrow{display:flex;flex:1 1 auto;height:2rem;margin:0;padding-left:0;padding-right:0;width:2rem}.ngb-dp-arrow.right{justify-content:flex-end}.ngb-dp-arrow.right .ngb-dp-navigation-chevron{margin-left:.15em;margin-right:.25em;transform:rotate(45deg)}.ngb-dp-arrow-btn{background-color:transparent;border:none;margin:0 .5rem;padding:0 .25rem;z-index:1}.ngb-dp-arrow-btn:focus{outline-style:auto;outline-width:1px}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    months: [{\n      type: Input\n    }],\n    navigate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    showSelect: [{\n      type: Input\n    }],\n    prevDisabled: [{\n      type: Input\n    }],\n    nextDisabled: [{\n      type: Input\n    }],\n    selectBoxes: [{\n      type: Input\n    }]\n  });\n})();\n\nvar isContainedIn = function isContainedIn(element, array) {\n  return array ? array.some(function (item) {\n    return item.contains(element);\n  }) : false;\n};\n\nvar ɵ0$2 = isContainedIn;\n\nvar matchesSelectorIfAny = function matchesSelectorIfAny(element, selector) {\n  return !selector || closest(element, selector) != null;\n};\n\nvar ɵ1$1 = matchesSelectorIfAny;\n\nvar ɵ2$1 = function ɵ2$1() {\n  var isIOS = function isIOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) || /Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2;\n  };\n\n  var isAndroid = function isAndroid() {\n    return /Android/.test(navigator.userAgent);\n  };\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n}; // we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\n\n\nvar isMobile = ɵ2$1(); // setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\n\nvar wrapAsyncForMobile = function wrapAsyncForMobile(fn) {\n  return isMobile ? function () {\n    return setTimeout(function () {\n      return fn();\n    }, 100);\n  } : fn;\n};\n\nvar ɵ3 = wrapAsyncForMobile;\n\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(function () {\n      var shouldCloseOnClick = function shouldCloseOnClick(event) {\n        var element = event.target;\n\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else\n          /* if (type === true) */\n          {\n            return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n          }\n      };\n\n      var escapes$ = fromEvent(document, 'keydown').pipe(takeUntil(closed$), // tslint:disable-next-line:deprecation\n      filter(function (e) {\n        return e.which === Key.Escape;\n      }), tap(function (e) {\n        return e.preventDefault();\n      })); // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n\n      var mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n      var closeableClicks$ = fromEvent(document, 'mouseup').pipe(withLatestFrom(mouseDowns$), filter(function (_ref13) {\n        var _ref14 = _slicedToArray(_ref13, 2),\n            _ = _ref14[0],\n            shouldClose = _ref14[1];\n\n        return shouldClose;\n      }), delay(0), takeUntil(closed$));\n      race([escapes$.pipe(map(function (_) {\n        return 0;\n      }\n      /* ESCAPE */\n      )), closeableClicks$.pipe(map(function (_) {\n        return 1;\n      }\n      /* CLICK */\n      ))]).subscribe(function (source) {\n        return zone.run(function () {\n          return close(source);\n        });\n      });\n    }));\n  }\n}\n\nvar FOCUSABLE_ELEMENTS_SELECTOR = ['a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])', 'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'].join(', ');\n/**\r\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\r\n */\n\nfunction getFocusableBoundaryElements(element) {\n  var list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)).filter(function (el) {\n    return el.tabIndex !== -1;\n  });\n  return [list[0], list[list.length - 1]];\n}\n/**\r\n * Function that enforces browser focus to be trapped inside a DOM element.\r\n *\r\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\r\n *\r\n * @param zone Angular zone\r\n * @param element The element around which focus will be trapped inside\r\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\r\n * and free internal resources\r\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\r\n * false)\r\n */\n\n\nvar ngbFocusTrap = function ngbFocusTrap(zone, element, stopFocusTrap$) {\n  var refocusOnClick = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  zone.runOutsideAngular(function () {\n    // last focused element\n    var lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(function (e) {\n      return e.target;\n    })); // 'tab' / 'shift+tab' stream\n\n    fromEvent(element, 'keydown').pipe(takeUntil(stopFocusTrap$), // tslint:disable:deprecation\n    filter(function (e) {\n      return e.which === Key.Tab;\n    }), // tslint:enable:deprecation\n    withLatestFrom(lastFocusedElement$)).subscribe(function (_ref15) {\n      var _ref16 = _slicedToArray(_ref15, 2),\n          tabEvent = _ref16[0],\n          focusedElement = _ref16[1];\n\n      var _getFocusableBoundary = getFocusableBoundaryElements(element),\n          _getFocusableBoundary2 = _slicedToArray(_getFocusableBoundary, 2),\n          first = _getFocusableBoundary2[0],\n          last = _getFocusableBoundary2[1];\n\n      if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n        last.focus();\n        tabEvent.preventDefault();\n      }\n\n      if (focusedElement === last && !tabEvent.shiftKey) {\n        first.focus();\n        tabEvent.preventDefault();\n      }\n    }); // inside click\n\n    if (refocusOnClick) {\n      fromEvent(element, 'click').pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(function (arr) {\n        return arr[1];\n      })).subscribe(function (lastFocusedElement) {\n        return lastFocusedElement.focus();\n      });\n    }\n  });\n}; // previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n\n\nvar Positioning = /*#__PURE__*/function () {\n  function Positioning() {\n    _classCallCheck(this, Positioning);\n  }\n\n  _createClass(Positioning, [{\n    key: \"getAllStyles\",\n    value: function getAllStyles(element) {\n      return window.getComputedStyle(element);\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(element, prop) {\n      return this.getAllStyles(element)[prop];\n    }\n  }, {\n    key: \"isStaticPositioned\",\n    value: function isStaticPositioned(element) {\n      return (this.getStyle(element, 'position') || 'static') === 'static';\n    }\n  }, {\n    key: \"offsetParent\",\n    value: function offsetParent(element) {\n      var offsetParentEl = element.offsetParent || document.documentElement;\n\n      while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n        offsetParentEl = offsetParentEl.offsetParent;\n      }\n\n      return offsetParentEl || document.documentElement;\n    }\n  }, {\n    key: \"position\",\n    value: function position(element) {\n      var round = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var elPosition;\n      var parentOffset = {\n        width: 0,\n        height: 0,\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n      };\n\n      if (this.getStyle(element, 'position') === 'fixed') {\n        elPosition = element.getBoundingClientRect();\n        elPosition = {\n          top: elPosition.top,\n          bottom: elPosition.bottom,\n          left: elPosition.left,\n          right: elPosition.right,\n          height: elPosition.height,\n          width: elPosition.width\n        };\n      } else {\n        var offsetParentEl = this.offsetParent(element);\n        elPosition = this.offset(element, false);\n\n        if (offsetParentEl !== document.documentElement) {\n          parentOffset = this.offset(offsetParentEl, false);\n        }\n\n        parentOffset.top += offsetParentEl.clientTop;\n        parentOffset.left += offsetParentEl.clientLeft;\n      }\n\n      elPosition.top -= parentOffset.top;\n      elPosition.bottom -= parentOffset.top;\n      elPosition.left -= parentOffset.left;\n      elPosition.right -= parentOffset.left;\n\n      if (round) {\n        elPosition.top = Math.round(elPosition.top);\n        elPosition.bottom = Math.round(elPosition.bottom);\n        elPosition.left = Math.round(elPosition.left);\n        elPosition.right = Math.round(elPosition.right);\n      }\n\n      return elPosition;\n    }\n  }, {\n    key: \"offset\",\n    value: function offset(element) {\n      var round = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var elBcr = element.getBoundingClientRect();\n      var viewportOffset = {\n        top: window.pageYOffset - document.documentElement.clientTop,\n        left: window.pageXOffset - document.documentElement.clientLeft\n      };\n      var elOffset = {\n        height: elBcr.height || element.offsetHeight,\n        width: elBcr.width || element.offsetWidth,\n        top: elBcr.top + viewportOffset.top,\n        bottom: elBcr.bottom + viewportOffset.top,\n        left: elBcr.left + viewportOffset.left,\n        right: elBcr.right + viewportOffset.left\n      };\n\n      if (round) {\n        elOffset.height = Math.round(elOffset.height);\n        elOffset.width = Math.round(elOffset.width);\n        elOffset.top = Math.round(elOffset.top);\n        elOffset.bottom = Math.round(elOffset.bottom);\n        elOffset.left = Math.round(elOffset.left);\n        elOffset.right = Math.round(elOffset.right);\n      }\n\n      return elOffset;\n    }\n    /*\r\n      Return false if the element to position is outside the viewport\r\n    */\n\n  }, {\n    key: \"positionElements\",\n    value: function positionElements(hostElement, targetElement, placement, appendToBody) {\n      var _placement$split = placement.split('-'),\n          _placement$split2 = _slicedToArray(_placement$split, 2),\n          _placement$split2$ = _placement$split2[0],\n          placementPrimary = _placement$split2$ === void 0 ? 'top' : _placement$split2$,\n          _placement$split2$2 = _placement$split2[1],\n          placementSecondary = _placement$split2$2 === void 0 ? 'center' : _placement$split2$2;\n\n      var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n      var targetElStyles = this.getAllStyles(targetElement);\n      var marginTop = parseFloat(targetElStyles.marginTop);\n      var marginBottom = parseFloat(targetElStyles.marginBottom);\n      var marginLeft = parseFloat(targetElStyles.marginLeft);\n      var marginRight = parseFloat(targetElStyles.marginRight);\n      var topPosition = 0;\n      var leftPosition = 0;\n\n      switch (placementPrimary) {\n        case 'top':\n          topPosition = hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom);\n          break;\n\n        case 'bottom':\n          topPosition = hostElPosition.top + hostElPosition.height;\n          break;\n\n        case 'left':\n          leftPosition = hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight);\n          break;\n\n        case 'right':\n          leftPosition = hostElPosition.left + hostElPosition.width;\n          break;\n      }\n\n      switch (placementSecondary) {\n        case 'top':\n          topPosition = hostElPosition.top;\n          break;\n\n        case 'bottom':\n          topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n          break;\n\n        case 'left':\n          leftPosition = hostElPosition.left;\n          break;\n\n        case 'right':\n          leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n          break;\n\n        case 'center':\n          if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n            leftPosition = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n          } else {\n            topPosition = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n          }\n\n          break;\n      } /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n      // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n\n\n      targetElement.style.transform = \"translate(\".concat(Math.round(leftPosition), \"px, \").concat(Math.round(topPosition), \"px)\"); // Check if the targetElement is inside the viewport\n\n      var targetElBCR = targetElement.getBoundingClientRect();\n      var html = document.documentElement;\n      var windowHeight = window.innerHeight || html.clientHeight;\n      var windowWidth = window.innerWidth || html.clientWidth;\n      return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth && targetElBCR.bottom <= windowHeight;\n    }\n  }]);\n\n  return Positioning;\n}();\n\nvar placementSeparator = /\\s+/;\nvar positionService = new Positioning();\n/*\r\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\r\n * Returns the applied placement.\r\n * In case of auto placement, placements are selected in order\r\n *   'top', 'bottom', 'left', 'right',\r\n *   'top-left', 'top-right',\r\n *   'bottom-left', 'bottom-right',\r\n *   'left-top', 'left-bottom',\r\n *   'right-top', 'right-bottom'.\r\n * */\n\nfunction positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {\n  var placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator);\n  var allowedPlacements = ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom', 'right-top', 'right-bottom'];\n  var classList = targetElement.classList;\n\n  var addClassesToTarget = function addClassesToTarget(targetPlacement) {\n    var _targetPlacement$spli = targetPlacement.split('-'),\n        _targetPlacement$spli2 = _slicedToArray(_targetPlacement$spli, 2),\n        primary = _targetPlacement$spli2[0],\n        secondary = _targetPlacement$spli2[1];\n\n    var classes = [];\n\n    if (baseClass) {\n      classes.push(\"\".concat(baseClass, \"-\").concat(primary));\n\n      if (secondary) {\n        classes.push(\"\".concat(baseClass, \"-\").concat(primary, \"-\").concat(secondary));\n      }\n\n      classes.forEach(function (classname) {\n        classList.add(classname);\n      });\n    }\n\n    return classes;\n  }; // Remove old placement classes to avoid issues\n\n\n  if (baseClass) {\n    allowedPlacements.forEach(function (placementToRemove) {\n      classList.remove(\"\".concat(baseClass, \"-\").concat(placementToRemove));\n    });\n  } // replace auto placement with other placements\n\n\n  var hasAuto = placementVals.findIndex(function (val) {\n    return val === 'auto';\n  });\n\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function (obj) {\n      if (placementVals.find(function (val) {\n        return val.search('^' + obj) !== -1;\n      }) == null) {\n        placementVals.splice(hasAuto++, 1, obj);\n      }\n    });\n  } // coordinates where to position\n  // Required for transform:\n\n\n  var style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n  var testPlacement = null;\n  var isInViewport = false;\n\n  var _iterator3 = _createForOfIteratorHelper(placementVals),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      testPlacement = _step3.value;\n      var addedClasses = addClassesToTarget(testPlacement);\n\n      if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n        isInViewport = true;\n        break;\n      } // Remove the baseClasses for further calculation\n\n\n      if (baseClass) {\n        addedClasses.forEach(function (classname) {\n          classList.remove(classname);\n        });\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n/**\r\n * An abstract service for parsing and formatting dates for the\r\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\r\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\r\n * input element.\r\n *\r\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\r\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\r\n * in the input.\r\n *\r\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\r\n * to use an alternative string format or a custom parsing logic.\r\n *\r\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\r\n */\n\n\nvar NgbDateParserFormatter = /*#__PURE__*/_createClass(function NgbDateParserFormatter() {\n  _classCallCheck(this, NgbDateParserFormatter);\n});\n\nNgbDateParserFormatter.ɵfac = function NgbDateParserFormatter_Factory(t) {\n  return new (t || NgbDateParserFormatter)();\n};\n\nNgbDateParserFormatter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY,\n  token: NgbDateParserFormatter,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateParserFormatter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nvar NgbDateISOParserFormatter = /*#__PURE__*/function (_NgbDateParserFormatt) {\n  _inherits(NgbDateISOParserFormatter, _NgbDateParserFormatt);\n\n  var _super4 = _createSuper(NgbDateISOParserFormatter);\n\n  function NgbDateISOParserFormatter() {\n    _classCallCheck(this, NgbDateISOParserFormatter);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(NgbDateISOParserFormatter, [{\n    key: \"parse\",\n    value: function parse(value) {\n      if (value != null) {\n        var dateParts = value.trim().split('-');\n\n        if (dateParts.length === 1 && isNumber(dateParts[0])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: null,\n            day: null\n          };\n        } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: toInteger(dateParts[1]),\n            day: null\n          };\n        } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: toInteger(dateParts[1]),\n            day: toInteger(dateParts[2])\n          };\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"format\",\n    value: function format(date) {\n      return date ? \"\".concat(date.year, \"-\").concat(isNumber(date.month) ? padNumber(date.month) : '', \"-\").concat(isNumber(date.day) ? padNumber(date.day) : '') : '';\n    }\n  }]);\n\n  return NgbDateISOParserFormatter;\n}(NgbDateParserFormatter);\n\nNgbDateISOParserFormatter.ɵfac = function NgbDateISOParserFormatter_Factory(t) {\n  return ɵNgbDateISOParserFormatter_BaseFactory(t || NgbDateISOParserFormatter);\n};\n\nNgbDateISOParserFormatter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateISOParserFormatter,\n  factory: NgbDateISOParserFormatter.ɵfac\n});\nvar ɵNgbDateISOParserFormatter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateISOParserFormatter);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateISOParserFormatter, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the datepicker inputs used in the application.\r\n *\r\n * @since 5.2.0\r\n */\n\n\nvar NgbInputDatepickerConfig = /*#__PURE__*/function (_NgbDatepickerConfig) {\n  _inherits(NgbInputDatepickerConfig, _NgbDatepickerConfig);\n\n  var _super5 = _createSuper(NgbInputDatepickerConfig);\n\n  function NgbInputDatepickerConfig() {\n    var _this18;\n\n    _classCallCheck(this, NgbInputDatepickerConfig);\n\n    _this18 = _super5.apply(this, arguments);\n    _this18.autoClose = true;\n    _this18.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    _this18.restoreFocus = true;\n    return _this18;\n  }\n\n  return _createClass(NgbInputDatepickerConfig);\n}(NgbDatepickerConfig);\n\nNgbInputDatepickerConfig.ɵfac = function NgbInputDatepickerConfig_Factory(t) {\n  return ɵNgbInputDatepickerConfig_BaseFactory(t || NgbInputDatepickerConfig);\n};\n\nNgbInputDatepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbInputDatepickerConfig_Factory() {\n    return new NgbInputDatepickerConfig();\n  },\n  token: NgbInputDatepickerConfig,\n  providedIn: \"root\"\n});\nvar ɵNgbInputDatepickerConfig_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbInputDatepickerConfig);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbInputDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\r\n * A directive that allows to stick a datepicker popup to an input field.\r\n *\r\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\r\n */\n\n\nvar NgbInputDatepicker = /*#__PURE__*/function () {\n  function NgbInputDatepicker(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, _ngZone, _calendar, _dateAdapter, _document, _changeDetector, config) {\n    var _this19 = this;\n\n    _classCallCheck(this, NgbInputDatepicker);\n\n    this._parserFormatter = _parserFormatter;\n    this._elRef = _elRef;\n    this._vcRef = _vcRef;\n    this._renderer = _renderer;\n    this._cfr = _cfr;\n    this._ngZone = _ngZone;\n    this._calendar = _calendar;\n    this._dateAdapter = _dateAdapter;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    this._cRef = null;\n    this._disabled = false;\n    this._elWithFocus = null;\n    this._model = null;\n    /**\r\n     * An event emitted when user selects a date using keyboard or mouse.\r\n     *\r\n     * The payload of the event is currently selected `NgbDate`.\r\n     *\r\n     * @since 1.1.1\r\n     */\n\n    this.dateSelect = new EventEmitter();\n    /**\r\n     * Event emitted right after the navigation happens and displayed month changes.\r\n     *\r\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\r\n     */\n\n    this.navigate = new EventEmitter();\n    /**\r\n     * An event fired after closing datepicker window.\r\n     *\r\n     * @since 4.2.0\r\n     */\n\n    this.closed = new EventEmitter();\n\n    this._onChange = function (_) {};\n\n    this._onTouched = function () {};\n\n    this._validatorChange = function () {};\n\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(function (input) {\n      return _this19[input] = config[input];\n    });\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      return _this19._updatePopupPosition();\n    });\n  }\n  /**\r\n   * If `true`, weekdays will be displayed.\r\n   *\r\n   * @deprecated 9.1.0, please use 'weekdays' instead\r\n   */\n\n\n  _createClass(NgbInputDatepicker, [{\n    key: \"showWeekdays\",\n    get: function get() {\n      return this._showWeekdays;\n    },\n    set: function set(weekdays) {\n      this.weekdays = weekdays;\n      this._showWeekdays = weekdays;\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = value === '' || value && value !== 'false';\n\n      if (this.isOpen()) {\n        this._cRef.instance.setDisabledState(this._disabled);\n      }\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n  }, {\n    key: \"registerOnValidatorChange\",\n    value: function registerOnValidatorChange(fn) {\n      this._validatorChange = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(c) {\n      var value = c.value;\n\n      if (value != null) {\n        var ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n        if (!ngbDate) {\n          return {\n            'ngbDate': {\n              invalid: value\n            }\n          };\n        }\n\n        if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n          return {\n            'ngbDate': {\n              minDate: {\n                minDate: this.minDate,\n                actual: value\n              }\n            }\n          };\n        }\n\n        if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n          return {\n            'ngbDate': {\n              maxDate: {\n                maxDate: this.maxDate,\n                actual: value\n              }\n            }\n          };\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n      this._writeModelValue(this._model);\n    }\n  }, {\n    key: \"manualDateChange\",\n    value: function manualDateChange(value) {\n      var updateView = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var inputValueChanged = value !== this._inputValue;\n\n      if (inputValueChanged) {\n        this._inputValue = value;\n        this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n      }\n\n      if (inputValueChanged || !updateView) {\n        this._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);\n      }\n\n      if (updateView && this._model) {\n        this._writeModelValue(this._model);\n      }\n    }\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return !!this._cRef;\n    }\n    /**\r\n     * Opens the datepicker popup.\r\n     *\r\n     * If the related form control contains a valid date, the corresponding month will be opened.\r\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this20 = this;\n\n      if (!this.isOpen()) {\n        var cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n\n        this._cRef = this._vcRef.createComponent(cf);\n\n        this._applyPopupStyling(this._cRef.location.nativeElement);\n\n        this._applyDatepickerInputs(this._cRef.instance);\n\n        this._subscribeForDatepickerOutputs(this._cRef.instance);\n\n        this._cRef.instance.ngOnInit();\n\n        this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model)); // date selection event handling\n\n\n        this._cRef.instance.registerOnChange(function (selectedDate) {\n          _this20.writeValue(selectedDate);\n\n          _this20._onChange(selectedDate);\n\n          _this20._onTouched();\n        });\n\n        this._cRef.changeDetectorRef.detectChanges();\n\n        this._cRef.instance.setDisabledState(this.disabled);\n\n        if (this.container === 'body') {\n          this._document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n        } // focus handling\n\n\n        this._elWithFocus = this._document.activeElement;\n        ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n\n        this._cRef.instance.focus();\n\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, function () {\n          return _this20.close();\n        }, this.closed, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n      }\n    }\n    /**\r\n     * Closes the datepicker popup.\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.isOpen()) {\n        this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n\n        this._cRef = null;\n        this.closed.emit();\n\n        this._changeDetector.markForCheck(); // restore focus\n\n\n        var elementToFocus = this._elWithFocus;\n\n        if (isString(this.restoreFocus)) {\n          elementToFocus = this._document.querySelector(this.restoreFocus);\n        } else if (this.restoreFocus !== undefined) {\n          elementToFocus = this.restoreFocus;\n        } // in IE document.activeElement can contain an object without 'focus()' sometimes\n\n\n        if (elementToFocus && elementToFocus['focus']) {\n          elementToFocus.focus();\n        } else {\n          this._document.body.focus();\n        }\n      }\n    }\n    /**\r\n     * Toggles the datepicker popup.\r\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isOpen()) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\r\n     * Navigates to the provided date.\r\n     *\r\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n     * If nothing or invalid date provided calendar will open current month.\r\n     *\r\n     * Use the `[startDate]` input as an alternative.\r\n     */\n\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(date) {\n      if (this.isOpen()) {\n        this._cRef.instance.navigateTo(date);\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this._onTouched();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this._elWithFocus = this._elRef.nativeElement;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['minDate'] || changes['maxDate']) {\n        this._validatorChange();\n\n        if (this.isOpen()) {\n          if (changes['minDate']) {\n            this._cRef.instance.minDate = this.minDate;\n          }\n\n          if (changes['maxDate']) {\n            this._cRef.instance.maxDate = this.maxDate;\n          }\n\n          this._cRef.instance.ngOnChanges(changes);\n        }\n      }\n\n      if (changes['datepickerClass']) {\n        var _changes$datepickerCl = changes['datepickerClass'],\n            currentValue = _changes$datepickerCl.currentValue,\n            previousValue = _changes$datepickerCl.previousValue;\n\n        this._applyPopupClass(currentValue, previousValue);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close();\n\n      this._zoneSubscription.unsubscribe();\n    }\n  }, {\n    key: \"_applyDatepickerInputs\",\n    value: function _applyDatepickerInputs(datepickerInstance) {\n      var _this21 = this;\n\n      ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekNumbers', 'weekdays'].forEach(function (optionName) {\n        if (_this21[optionName] !== undefined) {\n          datepickerInstance[optionName] = _this21[optionName];\n        }\n      });\n      datepickerInstance.startDate = this.startDate || this._model;\n    }\n  }, {\n    key: \"_applyPopupClass\",\n    value: function _applyPopupClass(newClass, oldClass) {\n      var _a;\n\n      var popupEl = (_a = this._cRef) === null || _a === void 0 ? void 0 : _a.location.nativeElement;\n\n      if (popupEl) {\n        if (newClass) {\n          this._renderer.addClass(popupEl, newClass);\n        }\n\n        if (oldClass) {\n          this._renderer.removeClass(popupEl, oldClass);\n        }\n      }\n    }\n  }, {\n    key: \"_applyPopupStyling\",\n    value: function _applyPopupStyling(nativeElement) {\n      this._renderer.addClass(nativeElement, 'dropdown-menu');\n\n      this._renderer.addClass(nativeElement, 'show');\n\n      if (this.container === 'body') {\n        this._renderer.addClass(nativeElement, 'ngb-dp-body');\n      }\n\n      this._applyPopupClass(this.datepickerClass);\n    }\n  }, {\n    key: \"_subscribeForDatepickerOutputs\",\n    value: function _subscribeForDatepickerOutputs(datepickerInstance) {\n      var _this22 = this;\n\n      datepickerInstance.navigate.subscribe(function (navigateEvent) {\n        return _this22.navigate.emit(navigateEvent);\n      });\n      datepickerInstance.dateSelect.subscribe(function (date) {\n        _this22.dateSelect.emit(date);\n\n        if (_this22.autoClose === true || _this22.autoClose === 'inside') {\n          _this22.close();\n        }\n      });\n    }\n  }, {\n    key: \"_writeModelValue\",\n    value: function _writeModelValue(model) {\n      var value = this._parserFormatter.format(model);\n\n      this._inputValue = value;\n\n      this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n\n      if (this.isOpen()) {\n        this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n\n        this._onTouched();\n      }\n    }\n  }, {\n    key: \"_fromDateStruct\",\n    value: function _fromDateStruct(date) {\n      var ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n      return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    }\n  }, {\n    key: \"_updatePopupPosition\",\n    value: function _updatePopupPosition() {\n      if (!this._cRef) {\n        return;\n      }\n\n      var hostElement;\n\n      if (isString(this.positionTarget)) {\n        hostElement = this._document.querySelector(this.positionTarget);\n      } else if (this.positionTarget instanceof HTMLElement) {\n        hostElement = this.positionTarget;\n      } else {\n        hostElement = this._elRef.nativeElement;\n      }\n\n      if (this.positionTarget && !hostElement) {\n        throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n      }\n\n      positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n    }\n  }]);\n\n  return NgbInputDatepicker;\n}();\n\nNgbInputDatepicker.ɵfac = function NgbInputDatepicker_Factory(t) {\n  return new (t || NgbInputDatepicker)(ɵngcc0.ɵɵdirectiveInject(NgbDateParserFormatter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NgbCalendar), ɵngcc0.ɵɵdirectiveInject(NgbDateAdapter), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbInputDatepickerConfig));\n};\n\nNgbInputDatepicker.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbInputDatepicker,\n  selectors: [[\"input\", \"ngbDatepicker\", \"\"]],\n  hostVars: 1,\n  hostBindings: function NgbInputDatepicker_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function NgbInputDatepicker_input_HostBindingHandler($event) {\n        return ctx.manualDateChange($event.target.value);\n      })(\"change\", function NgbInputDatepicker_change_HostBindingHandler($event) {\n        return ctx.manualDateChange($event.target.value, true);\n      })(\"focus\", function NgbInputDatepicker_focus_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function NgbInputDatepicker_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    showWeekdays: \"showWeekdays\",\n    weekdays: \"weekdays\",\n    disabled: \"disabled\",\n    autoClose: \"autoClose\",\n    datepickerClass: \"datepickerClass\",\n    dayTemplate: \"dayTemplate\",\n    dayTemplateData: \"dayTemplateData\",\n    displayMonths: \"displayMonths\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    footerTemplate: \"footerTemplate\",\n    markDisabled: \"markDisabled\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    navigation: \"navigation\",\n    outsideDays: \"outsideDays\",\n    placement: \"placement\",\n    restoreFocus: \"restoreFocus\",\n    showWeekNumbers: \"showWeekNumbers\",\n    startDate: \"startDate\",\n    container: \"container\",\n    positionTarget: \"positionTarget\"\n  },\n  outputs: {\n    dateSelect: \"dateSelect\",\n    navigate: \"navigate\",\n    closed: \"closed\"\n  },\n  exportAs: [\"ngbDatepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NgbInputDatepicker;\n    }),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () {\n      return NgbInputDatepicker;\n    }),\n    multi: true\n  }, {\n    provide: NgbDatepickerConfig,\n    useExisting: NgbInputDatepickerConfig\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbInputDatepicker.ctorParameters = function () {\n  return [{\n    type: NgbDateParserFormatter\n  }, {\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: NgZone\n  }, {\n    type: NgbCalendar\n  }, {\n    type: NgbDateAdapter\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgbInputDatepickerConfig\n  }];\n};\n\nNgbInputDatepicker.propDecorators = {\n  autoClose: [{\n    type: Input\n  }],\n  datepickerClass: [{\n    type: Input\n  }],\n  dayTemplate: [{\n    type: Input\n  }],\n  dayTemplateData: [{\n    type: Input\n  }],\n  displayMonths: [{\n    type: Input\n  }],\n  firstDayOfWeek: [{\n    type: Input\n  }],\n  footerTemplate: [{\n    type: Input\n  }],\n  markDisabled: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  navigation: [{\n    type: Input\n  }],\n  outsideDays: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  restoreFocus: [{\n    type: Input\n  }],\n  showWeekdays: [{\n    type: Input\n  }],\n  showWeekNumbers: [{\n    type: Input\n  }],\n  startDate: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  positionTarget: [{\n    type: Input\n  }],\n  weekdays: [{\n    type: Input\n  }],\n  dateSelect: [{\n    type: Output\n  }],\n  navigate: [{\n    type: Output\n  }],\n  closed: [{\n    type: Output\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbInputDatepicker, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbDatepicker]',\n      exportAs: 'ngbDatepicker',\n      host: {\n        '(input)': 'manualDateChange($event.target.value)',\n        '(change)': 'manualDateChange($event.target.value, true)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '[disabled]': 'disabled'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NgbInputDatepicker;\n        }),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(function () {\n          return NgbInputDatepicker;\n        }),\n        multi: true\n      }, {\n        provide: NgbDatepickerConfig,\n        useExisting: NgbInputDatepickerConfig\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbDateParserFormatter\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbInputDatepickerConfig\n    }];\n  }, {\n    dateSelect: [{\n      type: Output\n    }],\n    navigate: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    showWeekdays: [{\n      type: Input\n    }],\n    weekdays: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    datepickerClass: [{\n      type: Input\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    restoreFocus: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    positionTarget: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbDatepickerDayView = /*#__PURE__*/function () {\n  function NgbDatepickerDayView(i18n) {\n    _classCallCheck(this, NgbDatepickerDayView);\n\n    this.i18n = i18n;\n  }\n\n  _createClass(NgbDatepickerDayView, [{\n    key: \"isMuted\",\n    value: function isMuted() {\n      return !this.selected && (this.date.month !== this.currentMonth || this.disabled);\n    }\n  }]);\n\n  return NgbDatepickerDayView;\n}();\n\nNgbDatepickerDayView.ɵfac = function NgbDatepickerDayView_Factory(t) {\n  return new (t || NgbDatepickerDayView)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n));\n};\n\nNgbDatepickerDayView.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerDayView,\n  selectors: [[\"\", \"ngbDatepickerDayView\", \"\"]],\n  hostAttrs: [1, \"btn-light\"],\n  hostVars: 10,\n  hostBindings: function NgbDatepickerDayView_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"bg-primary\", ctx.selected)(\"text-white\", ctx.selected)(\"text-muted\", ctx.isMuted())(\"outside\", ctx.isMuted())(\"active\", ctx.focused);\n    }\n  },\n  inputs: {\n    currentMonth: \"currentMonth\",\n    date: \"date\",\n    disabled: \"disabled\",\n    focused: \"focused\",\n    selected: \"selected\"\n  },\n  attrs: _c20,\n  decls: 1,\n  vars: 1,\n  template: function NgbDatepickerDayView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtext(0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵtextInterpolate(ctx.i18n.getDayNumerals(ctx.date));\n    }\n  },\n  styles: [\"[ngbDatepickerDayView]{background:transparent;border-radius:.25rem;height:2rem;line-height:2rem;text-align:center;width:2rem}[ngbDatepickerDayView].outside{opacity:.5}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepickerDayView.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }];\n};\n\nNgbDatepickerDayView.propDecorators = {\n  currentMonth: [{\n    type: Input\n  }],\n  date: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  focused: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerDayView, [{\n    type: Component,\n    args: [{\n      selector: '[ngbDatepickerDayView]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'btn-light',\n        '[class.bg-primary]': 'selected',\n        '[class.text-white]': 'selected',\n        '[class.text-muted]': 'isMuted()',\n        '[class.outside]': 'isMuted()',\n        '[class.active]': 'focused'\n      },\n      template: \"{{ i18n.getDayNumerals(date) }}\",\n      styles: [\"[ngbDatepickerDayView]{background:transparent;border-radius:.25rem;height:2rem;line-height:2rem;text-align:center;width:2rem}[ngbDatepickerDayView].outside{opacity:.5}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    currentMonth: [{\n      type: Input\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbDatepickerNavigationSelect = /*#__PURE__*/function () {\n  function NgbDatepickerNavigationSelect(i18n, _renderer) {\n    _classCallCheck(this, NgbDatepickerNavigationSelect);\n\n    this.i18n = i18n;\n    this._renderer = _renderer;\n    this.select = new EventEmitter();\n    this._month = -1;\n    this._year = -1;\n  }\n\n  _createClass(NgbDatepickerNavigationSelect, [{\n    key: \"changeMonth\",\n    value: function changeMonth(month) {\n      this.select.emit(new NgbDate(this.date.year, toInteger(month), 1));\n    }\n  }, {\n    key: \"changeYear\",\n    value: function changeYear(year) {\n      this.select.emit(new NgbDate(toInteger(year), this.date.month, 1));\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      if (this.date) {\n        if (this.date.month !== this._month) {\n          this._month = this.date.month;\n\n          this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n        }\n\n        if (this.date.year !== this._year) {\n          this._year = this.date.year;\n\n          this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n        }\n      }\n    }\n  }]);\n\n  return NgbDatepickerNavigationSelect;\n}();\n\nNgbDatepickerNavigationSelect.ɵfac = function NgbDatepickerNavigationSelect_Factory(t) {\n  return new (t || NgbDatepickerNavigationSelect)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNgbDatepickerNavigationSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerNavigationSelect,\n  selectors: [[\"ngb-datepicker-navigation-select\"]],\n  viewQuery: function NgbDatepickerNavigationSelect_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c21, 3, ElementRef);\n      ɵngcc0.ɵɵviewQuery(_c22, 3, ElementRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthSelect = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearSelect = _t.first);\n    }\n  },\n  inputs: {\n    date: \"date\",\n    disabled: \"disabled\",\n    months: \"months\",\n    years: \"years\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  decls: 6,\n  vars: 4,\n  consts: function consts() {\n    var i18n_23;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_24 = goog.getMsg(\"Select month\");\n      i18n_23 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_24;\n    } else {\n      i18n_23 = $localize(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\":@@ngb.datepicker.select-month\\u241F1dbc84807f35518112f62e5775d1daebd3d8462b\\u241F2253869508135064750:Select month\"])));\n    }\n\n    var i18n_25;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_26 = goog.getMsg(\"Select month\");\n      i18n_25 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_26;\n    } else {\n      i18n_25 = $localize(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\":@@ngb.datepicker.select-month\\u241F1dbc84807f35518112f62e5775d1daebd3d8462b\\u241F2253869508135064750:Select month\"])));\n    }\n\n    var i18n_27;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_28 = goog.getMsg(\"Select year\");\n      i18n_27 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_28;\n    } else {\n      i18n_27 = $localize(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral([\":@@ngb.datepicker.select-year\\u241F8ceb09d002bf0c5d1cac171dfbffe1805d2b3962\\u241F8852264961585484321:Select year\"])));\n    }\n\n    var i18n_29;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_30 = goog.getMsg(\"Select year\");\n      i18n_29 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_30;\n    } else {\n      i18n_29 = $localize(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral([\":@@ngb.datepicker.select-year\\u241F8ceb09d002bf0c5d1cac171dfbffe1805d2b3962\\u241F8852264961585484321:Select year\"])));\n    }\n\n    return [[\"aria-label\", i18n_23, \"title\", i18n_25, 1, \"custom-select\", 3, \"disabled\", \"change\"], [\"month\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", i18n_27, \"title\", i18n_29, 1, \"custom-select\", 3, \"disabled\", \"change\"], [\"year\", \"\"], [3, \"value\"]];\n  },\n  template: function NgbDatepickerNavigationSelect_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"select\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_0_listener($event) {\n        return ctx.changeMonth($event.target.value);\n      });\n      ɵngcc0.ɵɵtemplate(2, NgbDatepickerNavigationSelect_option_2_Template, 2, 3, \"option\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"select\", 3, 4);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_3_listener($event) {\n        return ctx.changeYear($event.target.value);\n      });\n      ɵngcc0.ɵɵtemplate(5, NgbDatepickerNavigationSelect_option_5_Template, 2, 2, \"option\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.months);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.years);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc2.NgSelectOption, ɵngcc2.ɵangular_packages_forms_forms_x],\n  styles: [\"ngb-datepicker-navigation-select>.custom-select{flex:1 1 auto;font-size:.875rem;height:1.85rem;padding:0 .5rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepickerNavigationSelect.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }, {\n    type: Renderer2\n  }];\n};\n\nNgbDatepickerNavigationSelect.propDecorators = {\n  date: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  months: [{\n    type: Input\n  }],\n  years: [{\n    type: Input\n  }],\n  select: [{\n    type: Output\n  }],\n  monthSelect: [{\n    type: ViewChild,\n    args: ['month', {\n      static: true,\n      read: ElementRef\n    }]\n  }],\n  yearSelect: [{\n    type: ViewChild,\n    args: ['year', {\n      static: true,\n      read: ElementRef\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerNavigationSelect, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation-select',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <select #month\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      i18n-aria-label=\\\"@@ngb.datepicker.select-month\\\" aria-label=\\\"Select month\\\"\\n      i18n-title=\\\"@@ngb.datepicker.select-month\\\" title=\\\"Select month\\\"\\n      (change)=\\\"changeMonth($any($event).target.value)\\\">\\n        <option *ngFor=\\\"let m of months\\\" [attr.aria-label]=\\\"i18n.getMonthFullName(m, date?.year)\\\"\\n                [value]=\\\"m\\\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\\n    </select><select #year\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      i18n-aria-label=\\\"@@ngb.datepicker.select-year\\\" aria-label=\\\"Select year\\\"\\n      i18n-title=\\\"@@ngb.datepicker.select-year\\\" title=\\\"Select year\\\"\\n      (change)=\\\"changeYear($any($event).target.value)\\\">\\n        <option *ngFor=\\\"let y of years\\\" [value]=\\\"y\\\">{{ i18n.getYearNumerals(y) }}</option>\\n    </select>\\n  \",\n      styles: [\"ngb-datepicker-navigation-select>.custom-select{flex:1 1 auto;font-size:.875rem;height:1.85rem;padding:0 .5rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    select: [{\n      type: Output\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    months: [{\n      type: Input\n    }],\n    years: [{\n      type: Input\n    }],\n    monthSelect: [{\n      type: ViewChild,\n      args: ['month', {\n        static: true,\n        read: ElementRef\n      }]\n    }],\n    yearSelect: [{\n      type: ViewChild,\n      args: ['year', {\n        static: true,\n        read: ElementRef\n      }]\n    }]\n  });\n})();\n\nvar NgbCalendarHijri = /*#__PURE__*/function (_NgbCalendar2) {\n  _inherits(NgbCalendarHijri, _NgbCalendar2);\n\n  var _super6 = _createSuper(NgbCalendarHijri);\n\n  function NgbCalendarHijri() {\n    _classCallCheck(this, NgbCalendarHijri);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarHijri, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      date = new NgbDate(date.year, date.month, date.day);\n\n      switch (period) {\n        case 'y':\n          date = this._setYear(date, date.year + number);\n          date.month = 1;\n          date.day = 1;\n          return date;\n\n        case 'm':\n          date = this._setMonth(date, date.month + number);\n          date.day = 1;\n          return date;\n\n        case 'd':\n          return this._setDay(date, date.day + number);\n\n        default:\n          return date;\n      }\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var day = this.toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n\n      var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      var date = week[thursdayIndex];\n      var jsDate = this.toGregorian(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n      var time = jsDate.getTime();\n      var MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n\n      return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return this.fromGregorian(new Date());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return date != null && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) && !isNaN(this.toGregorian(date).getTime());\n    }\n  }, {\n    key: \"_setDay\",\n    value: function _setDay(date, day) {\n      day = +day;\n      var mDays = this.getDaysPerMonth(date.month, date.year);\n\n      if (day <= 0) {\n        while (day <= 0) {\n          date = this._setMonth(date, date.month - 1);\n          mDays = this.getDaysPerMonth(date.month, date.year);\n          day += mDays;\n        }\n      } else if (day > mDays) {\n        while (day > mDays) {\n          day -= mDays;\n          date = this._setMonth(date, date.month + 1);\n          mDays = this.getDaysPerMonth(date.month, date.year);\n        }\n      }\n\n      date.day = day;\n      return date;\n    }\n  }, {\n    key: \"_setMonth\",\n    value: function _setMonth(date, month) {\n      month = +month;\n      date.year = date.year + Math.floor((month - 1) / 12);\n      date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n      return date;\n    }\n  }, {\n    key: \"_setYear\",\n    value: function _setYear(date, year) {\n      date.year = +year;\n      return date;\n    }\n  }]);\n\n  return NgbCalendarHijri;\n}(NgbCalendar);\n\nNgbCalendarHijri.ɵfac = function NgbCalendarHijri_Factory(t) {\n  return ɵNgbCalendarHijri_BaseFactory(t || NgbCalendarHijri);\n};\n\nNgbCalendarHijri.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarHijri,\n  factory: NgbCalendarHijri.ɵfac\n});\nvar ɵNgbCalendarHijri_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarHijri);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarHijri, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Checks if islamic year is a leap year\r\n */\n\n\nfunction isIslamicLeapYear(hYear) {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n/**\r\n * Checks if gregorian years is a leap year\r\n */\n\n\nfunction isGregorianLeapYear(gDate) {\n  var year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\r\n * Returns the start of Hijri Month.\r\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\r\n * `hYear` is any Hijri hYear.\r\n */\n\n\nfunction getIslamicMonthStart(hYear, hMonth) {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\r\n * Returns the start of Hijri year.\r\n * `year` is any Hijri year.\r\n */\n\n\nfunction getIslamicYearStart(year) {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a, b) {\n  return a - b * Math.floor(a / b);\n}\n/**\r\n * The civil calendar is one type of Hijri calendars used in islamic countries.\r\n * Uses a fixed cycle of alternating 29- and 30-day months,\r\n * with a leap day added to the last month of 11 out of every 30 years.\r\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\r\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\r\n * Dershowitz.\r\n */\n\n\nvar GREGORIAN_EPOCH = 1721425.5;\nvar ISLAMIC_EPOCH = 1948439.5;\n\nvar NgbCalendarIslamicCivil = /*#__PURE__*/function (_NgbCalendarHijri) {\n  _inherits(NgbCalendarIslamicCivil, _NgbCalendarHijri);\n\n  var _super7 = _createSuper(NgbCalendarIslamicCivil);\n\n  function NgbCalendarIslamicCivil() {\n    _classCallCheck(this, NgbCalendarIslamicCivil);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarIslamicCivil, [{\n    key: \"fromGregorian\",\n    value:\n    /**\r\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\r\n     * `gDate` is a JS Date to be converted to Hijri.\r\n     */\n    function fromGregorian(gDate) {\n      var gYear = gDate.getFullYear(),\n          gMonth = gDate.getMonth(),\n          gDay = gDate.getDate();\n      var julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) + -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n      julianDay = Math.floor(julianDay) + 0.5;\n      var days = julianDay - ISLAMIC_EPOCH;\n      var hYear = Math.floor((30 * days + 10646) / 10631.0);\n      var hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n      hMonth = Math.min(hMonth, 11);\n      var hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n      return new NgbDate(hYear, hMonth + 1, hDay);\n    }\n    /**\r\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\r\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\r\n     */\n\n  }, {\n    key: \"toGregorian\",\n    value: function toGregorian(hDate) {\n      var hYear = hDate.year;\n      var hMonth = hDate.month - 1;\n      var hDay = hDate.day;\n      var julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n      var wjd = Math.floor(julianDay - 0.5) + 0.5,\n          depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097),\n          dqc = mod(depoch, 146097),\n          cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524),\n          quad = Math.floor(dcent / 1461),\n          dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n      var year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n\n      if (!(cent === 4 || yindex === 4)) {\n        year++;\n      }\n\n      var gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400);\n      var yearday = wjd - gYearStart;\n      var tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n      var leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n      var month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n      var tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) + 1);\n      var day = wjd - tjd2 + 1;\n      return new Date(year, month - 1, day);\n    }\n    /**\r\n     * Returns the number of days in a specific Hijri month.\r\n     * `month` is 1 for Muharram, 2 for Safar, etc.\r\n     * `year` is any Hijri year.\r\n     */\n\n  }, {\n    key: \"getDaysPerMonth\",\n    value: function getDaysPerMonth(month, year) {\n      year = year + Math.floor(month / 13);\n      month = (month - 1) % 12 + 1;\n      var length = 29 + month % 2;\n\n      if (month === 12 && isIslamicLeapYear(year)) {\n        length++;\n      }\n\n      return length;\n    }\n  }]);\n\n  return NgbCalendarIslamicCivil;\n}(NgbCalendarHijri);\n\nNgbCalendarIslamicCivil.ɵfac = function NgbCalendarIslamicCivil_Factory(t) {\n  return ɵNgbCalendarIslamicCivil_BaseFactory(t || NgbCalendarIslamicCivil);\n};\n\nNgbCalendarIslamicCivil.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarIslamicCivil,\n  factory: NgbCalendarIslamicCivil.ɵfac\n});\nvar ɵNgbCalendarIslamicCivil_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarIslamicCivil);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarIslamicCivil, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\r\n * This Calendar is used by Saudi Arabia for administrative purpose.\r\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\r\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\r\n */\n\n\nvar GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nvar GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nvar HIJRI_BEGIN = 1300;\nvar HIJRI_END = 1600;\nvar ONE_DAY = 1000 * 60 * 60 * 24;\nvar MONTH_LENGTH = [// 1300-1304\n'101010101010', '110101010100', '111011001001', '011011010100', '011011101010', // 1305-1309\n'001101101100', '101010101101', '010101010101', '011010101001', '011110010010', // 1310-1314\n'101110101001', '010111010100', '101011011010', '010101011100', '110100101101', // 1315-1319\n'011010010101', '011101001010', '101101010100', '101101101010', '010110101101', // 1320-1324\n'010010101110', '101001001111', '010100010111', '011010001011', '011010100101', // 1325-1329\n'101011010101', '001011010110', '100101011011', '010010011101', '101001001101', // 1330-1334\n'110100100110', '110110010101', '010110101100', '100110110110', '001010111010', // 1335-1339\n'101001011011', '010100101011', '101010010101', '011011001010', '101011101001', // 1340-1344\n'001011110100', '100101110110', '001010110110', '100101010110', '101011001010', // 1345-1349\n'101110100100', '101111010010', '010111011001', '001011011100', '100101101101', // 1350-1354\n'010101001101', '101010100101', '101101010010', '101110100101', '010110110100', // 1355-1359\n'100110110110', '010101010111', '001010010111', '010101001011', '011010100011', // 1360-1364\n'011101010010', '101101100101', '010101101010', '101010101011', '010100101011', // 1365-1369\n'110010010101', '110101001010', '110110100101', '010111001010', '101011010110', // 1370-1374\n'100101010111', '010010101011', '100101001011', '101010100101', '101101010010', // 1375-1379\n'101101101010', '010101110101', '001001110110', '100010110111', '010001011011', // 1380-1384\n'010101010101', '010110101001', '010110110100', '100111011010', '010011011101', // 1385-1389\n'001001101110', '100100110110', '101010101010', '110101010100', '110110110010', // 1390-1394\n'010111010101', '001011011010', '100101011011', '010010101011', '101001010101', // 1395-1399\n'101101001001', '101101100100', '101101110001', '010110110100', '101010110101', // 1400-1404\n'101001010101', '110100100101', '111010010010', '111011001001', '011011010100', // 1405-1409\n'101011101001', '100101101011', '010010101011', '101010010011', '110101001001', // 1410-1414\n'110110100100', '110110110010', '101010111001', '010010111010', '101001011011', // 1415-1419\n'010100101011', '101010010101', '101100101010', '101101010101', '010101011100', // 1420-1424\n'010010111101', '001000111101', '100100011101', '101010010101', '101101001010', // 1425-1429\n'101101011010', '010101101101', '001010110110', '100100111011', '010010011011', // 1430-1434\n'011001010101', '011010101001', '011101010100', '101101101010', '010101101100', // 1435-1439\n'101010101101', '010101010101', '101100101001', '101110010010', '101110101001', // 1440-1444\n'010111010100', '101011011010', '010101011010', '101010101011', '010110010101', // 1445-1449\n'011101001001', '011101100100', '101110101010', '010110110101', '001010110110', // 1450-1454\n'101001010110', '111001001101', '101100100101', '101101010010', '101101101010', // 1455-1459\n'010110101101', '001010101110', '100100101111', '010010010111', '011001001011', // 1460-1464\n'011010100101', '011010101100', '101011010110', '010101011101', '010010011101', // 1465-1469\n'101001001101', '110100010110', '110110010101', '010110101010', '010110110101', // 1470-1474\n'001011011010', '100101011011', '010010101101', '010110010101', '011011001010', // 1475-1479\n'011011100100', '101011101010', '010011110101', '001010110110', '100101010110', // 1480-1484\n'101010101010', '101101010100', '101111010010', '010111011001', '001011101010', // 1485-1489\n'100101101101', '010010101101', '101010010101', '101101001010', '101110100101', // 1490-1494\n'010110110010', '100110110101', '010011010110', '101010010111', '010101000111', // 1495-1499\n'011010010011', '011101001001', '101101010101', '010101101010', '101001101011', // 1500-1504\n'010100101011', '101010001011', '110101000110', '110110100011', '010111001010', // 1505-1509\n'101011010110', '010011011011', '001001101011', '100101001011', '101010100101', // 1510-1514\n'101101010010', '101101101001', '010101110101', '000101110110', '100010110111', // 1515-1519\n'001001011011', '010100101011', '010101100101', '010110110100', '100111011010', // 1520-1524\n'010011101101', '000101101101', '100010110110', '101010100110', '110101010010', // 1525-1529\n'110110101001', '010111010100', '101011011010', '100101011011', '010010101011', // 1530-1534\n'011001010011', '011100101001', '011101100010', '101110101001', '010110110010', // 1535-1539\n'101010110101', '010101010101', '101100100101', '110110010010', '111011001001', // 1540-1544\n'011011010010', '101011101001', '010101101011', '010010101011', '101001010101', // 1545-1549\n'110100101001', '110101010100', '110110101010', '100110110101', '010010111010', // 1550-1554\n'101000111011', '010010011011', '101001001101', '101010101010', '101011010101', // 1555-1559\n'001011011010', '100101011101', '010001011110', '101000101110', '110010011010', // 1560-1564\n'110101010101', '011010110010', '011010111001', '010010111010', '101001011101', // 1565-1569\n'010100101101', '101010010101', '101101010010', '101110101000', '101110110100', // 1570-1574\n'010110111001', '001011011010', '100101011010', '101101001010', '110110100100', // 1575-1579\n'111011010001', '011011101000', '101101101010', '010101101101', '010100110101', // 1580-1584\n'011010010101', '110101001010', '110110101000', '110111010100', '011011011010', // 1585-1589\n'010101011011', '001010011101', '011000101011', '101100010101', '101101001010', // 1590-1594\n'101110010101', '010110101010', '101010101110', '100100101110', '110010001111', // 1595-1599\n'010100100111', '011010010101', '011010101010', '101011010110', '010101011101', // 1600\n'001010011101'];\n\nfunction getDaysDiff(date1, date2) {\n  // Ignores the time part in date1 and date2:\n  var time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  var time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  var diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\nvar NgbCalendarIslamicUmalqura = /*#__PURE__*/function (_NgbCalendarIslamicCi) {\n  _inherits(NgbCalendarIslamicUmalqura, _NgbCalendarIslamicCi);\n\n  var _super8 = _createSuper(NgbCalendarIslamicUmalqura);\n\n  function NgbCalendarIslamicUmalqura() {\n    _classCallCheck(this, NgbCalendarIslamicUmalqura);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarIslamicUmalqura, [{\n    key: \"fromGregorian\",\n    value:\n    /**\r\n    * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\r\n    * `gdate` is s JS Date to be converted to Hijri.\r\n    */\n    function fromGregorian(gDate) {\n      var hDay = 1,\n          hMonth = 0,\n          hYear = 1300;\n      var daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n\n      if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n        var year = 1300;\n\n        for (var i = 0; i < MONTH_LENGTH.length; i++, year++) {\n          for (var j = 0; j < 12; j++) {\n            var numOfDays = +MONTH_LENGTH[i][j] + 29;\n\n            if (daysDiff <= numOfDays) {\n              hDay = daysDiff + 1;\n\n              if (hDay > numOfDays) {\n                hDay = 1;\n                j++;\n              }\n\n              if (j > 11) {\n                j = 0;\n                year++;\n              }\n\n              hMonth = j;\n              hYear = year;\n              return new NgbDate(hYear, hMonth + 1, hDay);\n            }\n\n            daysDiff = daysDiff - numOfDays;\n          }\n        }\n\n        return null;\n      } else {\n        return _get(_getPrototypeOf(NgbCalendarIslamicUmalqura.prototype), \"fromGregorian\", this).call(this, gDate);\n      }\n    }\n    /**\r\n    * Converts the current Hijri date to Gregorian.\r\n    */\n\n  }, {\n    key: \"toGregorian\",\n    value: function toGregorian(hDate) {\n      var hYear = hDate.year;\n      var hMonth = hDate.month - 1;\n      var hDay = hDate.day;\n      var gDate = new Date(GREGORIAN_FIRST_DATE);\n      var dayDiff = hDay - 1;\n\n      if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n        for (var y = 0; y < hYear - HIJRI_BEGIN; y++) {\n          for (var m = 0; m < 12; m++) {\n            dayDiff += +MONTH_LENGTH[y][m] + 29;\n          }\n        }\n\n        for (var _m = 0; _m < hMonth; _m++) {\n          dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][_m] + 29;\n        }\n\n        gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n      } else {\n        gDate = _get(_getPrototypeOf(NgbCalendarIslamicUmalqura.prototype), \"toGregorian\", this).call(this, hDate);\n      }\n\n      return gDate;\n    }\n    /**\r\n    * Returns the number of days in a specific Hijri hMonth.\r\n    * `hMonth` is 1 for Muharram, 2 for Safar, etc.\r\n    * `hYear` is any Hijri hYear.\r\n    */\n\n  }, {\n    key: \"getDaysPerMonth\",\n    value: function getDaysPerMonth(hMonth, hYear) {\n      if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n        var pos = hYear - HIJRI_BEGIN;\n        return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n      }\n\n      return _get(_getPrototypeOf(NgbCalendarIslamicUmalqura.prototype), \"getDaysPerMonth\", this).call(this, hMonth, hYear);\n    }\n  }]);\n\n  return NgbCalendarIslamicUmalqura;\n}(NgbCalendarIslamicCivil);\n\nNgbCalendarIslamicUmalqura.ɵfac = function NgbCalendarIslamicUmalqura_Factory(t) {\n  return ɵNgbCalendarIslamicUmalqura_BaseFactory(t || NgbCalendarIslamicUmalqura);\n};\n\nNgbCalendarIslamicUmalqura.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarIslamicUmalqura,\n  factory: NgbCalendarIslamicUmalqura.ɵfac\n});\nvar ɵNgbCalendarIslamicUmalqura_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarIslamicUmalqura);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarIslamicUmalqura, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Returns the equivalent JS date value for a give input Jalali date.\r\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\r\n */\n\n\nfunction toGregorian(jalaliDate) {\n  var jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  var date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n/**\r\n * Returns the equivalent jalali date value for a give input Gregorian date.\r\n * `gdate` is a JS Date to be converted to jalali.\r\n * utc to local\r\n */\n\n\nfunction fromGregorian(gdate) {\n  var g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nfunction setJalaliYear(date, yearValue) {\n  date.year = +yearValue;\n  return date;\n}\n\nfunction setJalaliMonth(date, month) {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nfunction setJalaliDay(date, day) {\n  var mDays = getDaysPerMonth(date.month, date.year);\n\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n\n  date.day = day;\n  return date;\n}\n\nfunction mod$1(a, b) {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a, b) {\n  return Math.trunc(a / b);\n}\n/*\r\n This function determines if the Jalali (Persian) year is\r\n leap (366-day long) or is the common year (365 days), and\r\n finds the day in March (Gregorian calendar) of the first\r\n day of the Jalali year (jalaliYear).\r\n @param jalaliYear Jalali calendar year (-61 to 3177)\r\n @return\r\n leap: number of years since the last leap year (0 to 4)\r\n gYear: Gregorian year of the beginning of Jalali year\r\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\r\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\r\n @see: http://www.fourmilab.ch/documents/calendar/\r\n */\n\n\nfunction jalCal(jalaliYear) {\n  // Jalali years starting the 33-year rule.\n  var breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  var breaksLength = breaks.length;\n  var gYear = jalaliYear + 621;\n  var leapJ = -14;\n  var jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  } // Find the limiting years for the Jalali year jalaliYear.\n\n\n  var jump;\n\n  for (var i = 1; i < breaksLength; i += 1) {\n    var jm = breaks[i];\n    jump = jm - jp;\n\n    if (jalaliYear < jm) {\n      break;\n    }\n\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod$1(jump, 33), 4);\n    jp = jm;\n  }\n\n  var n = jalaliYear - jp; // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n\n  leapJ = leapJ + div(n, 33) * 8 + div(mod$1(n, 33) + 3, 4);\n\n  if (mod$1(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  } // And the same in the Gregorian calendar (until the year gYear).\n\n\n  var leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150; // Determine the Gregorian date of Farvardin the 1st.\n\n  var march = 20 + leapJ - leapG; // Find how many years have passed since the last leap year.\n\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n\n  var leap = mod$1(mod$1(n + 1, 33) - 1, 4);\n\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {\n    leap: leap,\n    gy: gYear,\n    march: march\n  };\n}\n/*\r\n Calculates Gregorian and Julian calendar dates from the Julian Day number\r\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\r\n calendars) to some millions years ahead of the present.\r\n @param jdn Julian Day number\r\n @return\r\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\r\n gMonth: Calendar month (1 to 12)\r\n gDay: Calendar day of the month M (1 to 28/29/30/31)\r\n */\n\n\nfunction julianToGregorian(julianDayNumber) {\n  var j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  var i = div(mod$1(j, 1461), 4) * 5 + 308;\n  var gDay = div(mod$1(i, 153), 5) + 1;\n  var gMonth = mod$1(div(i, 153), 12) + 1;\n  var gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n  return new Date(gYear, gMonth - 1, gDay);\n}\n/*\r\n Converts a date of the Jalali calendar to the Julian Day number.\r\n @param jy Jalali year (1 to 3100)\r\n @param jm Jalali month (1 to 12)\r\n @param jd Jalali day (1 to 29/31)\r\n @return Julian Day number\r\n */\n\n\nfunction gregorianToJulian(gy, gm, gd) {\n  var d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod$1(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n/*\r\n Converts the Julian Day number to a date in the Jalali calendar.\r\n @param julianDayNumber Julian Day number\r\n @return\r\n jalaliYear: Jalali year (1 to 3100)\r\n jalaliMonth: Jalali month (1 to 12)\r\n jalaliDay: Jalali day (1 to 29/31)\r\n */\n\n\nfunction julianToJalali(julianDayNumber) {\n  var gy = julianToGregorian(julianDayNumber).getFullYear() // Calculate Gregorian year (gy).\n  ,\n      jalaliYear = gy - 621,\n      r = jalCal(jalaliYear),\n      gregorianDay = gregorianToJulian(gy, 3, r.march),\n      jalaliDay,\n      jalaliMonth,\n      numberOfDays; // Find number of days that passed since 1 Farvardin.\n\n  numberOfDays = julianDayNumber - gregorianDay;\n\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod$1(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod$1(numberOfDays, 30) + 1;\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\r\n Converts a date of the Jalali calendar to the Julian Day number.\r\n @param jYear Jalali year (1 to 3100)\r\n @param jMonth Jalali month (1 to 12)\r\n @param jDay Jalali day (1 to 29/31)\r\n @return Julian Day number\r\n */\n\n\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n  var r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\r\n * Returns the number of days in a specific jalali month.\r\n */\n\n\nfunction getDaysPerMonth(month, year) {\n  if (month <= 6) {\n    return 31;\n  }\n\n  if (month <= 11) {\n    return 30;\n  }\n\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n\n  return 29;\n}\n\nvar NgbCalendarPersian = /*#__PURE__*/function (_NgbCalendar3) {\n  _inherits(NgbCalendarPersian, _NgbCalendar3);\n\n  var _super9 = _createSuper(NgbCalendarPersian);\n\n  function NgbCalendarPersian() {\n    _classCallCheck(this, NgbCalendarPersian);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarPersian, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      date = new NgbDate(date.year, date.month, date.day);\n\n      switch (period) {\n        case 'y':\n          date = setJalaliYear(date, date.year + number);\n          date.month = 1;\n          date.day = 1;\n          return date;\n\n        case 'm':\n          date = setJalaliMonth(date, date.month + number);\n          date.day = 1;\n          return date;\n\n        case 'd':\n          return setJalaliDay(date, date.day + number);\n\n        default:\n          return date;\n      }\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var day = toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n\n      var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      var date = week[thursdayIndex];\n      var jsDate = toGregorian(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n      var time = jsDate.getTime();\n      var startDate = toGregorian(new NgbDate(date.year, 1, 1));\n      return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return fromGregorian(new Date());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return date != null && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) && !isNaN(toGregorian(date).getTime());\n    }\n  }]);\n\n  return NgbCalendarPersian;\n}(NgbCalendar);\n\nNgbCalendarPersian.ɵfac = function NgbCalendarPersian_Factory(t) {\n  return ɵNgbCalendarPersian_BaseFactory(t || NgbCalendarPersian);\n};\n\nNgbCalendarPersian.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarPersian,\n  factory: NgbCalendarPersian.ɵfac\n});\nvar ɵNgbCalendarPersian_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarPersian);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarPersian, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar PARTS_PER_HOUR = 1080;\nvar PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nvar PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nvar PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nvar BAHARAD = 11 * PARTS_PER_HOUR + 204;\nvar HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nvar GREGORIAN_EPOCH$1 = 1721425.5;\n\nfunction isGregorianLeapYear$1(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year) {\n  var monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  var fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  var dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  var timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n  var dayOfWeek = dayNumber % 7; // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month, year) {\n  var days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  if (isGregorianLeapYear$1(year)) {\n    days[1]++;\n  }\n\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year) {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\r\n * Returns the number of days in a specific Hebrew year.\r\n * `year` is any Hebrew year.\r\n */\n\n\nfunction getDaysInHebrewYear(year) {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nfunction isHebrewLeapYear(year) {\n  if (year != null) {\n    var b = (year * 12 + 17) % 19;\n    return b >= (b < 0 ? -7 : 12);\n  }\n\n  return false;\n}\n/**\r\n * Returns the number of days in a specific Hebrew month.\r\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\r\n * `year` is any Hebrew year.\r\n */\n\n\nfunction getDaysInHebrewMonth(month, year) {\n  var yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  var yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;\n  var leapYear = isHebrewLeapYear(year);\n  var daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n\n  if (yearType > 0) {\n    daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n  }\n\n  if (yearType > 1) {\n    daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n  }\n\n  return daysInMonth[month - 1];\n}\n\nfunction getDayNumberInHebrewYear(date) {\n  var numberOfDay = 0;\n\n  for (var i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n\n  return numberOfDay + date.day;\n}\n\nfunction setHebrewMonth(date, val) {\n  var after = val >= 0;\n\n  if (!after) {\n    val = -val;\n  }\n\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n\n  return date;\n}\n\nfunction setHebrewDay(date, val) {\n  var after = val >= 0;\n\n  if (!after) {\n    val = -val;\n  }\n\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n\n  return date;\n}\n/**\r\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\r\n * `gdate` is a JS Date to be converted to Hebrew date.\r\n */\n\n\nfunction fromGregorian$1(gdate) {\n  var date = new Date(gdate);\n  var gYear = date.getFullYear(),\n      gMonth = date.getMonth(),\n      gDay = date.getDate();\n  var julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) - Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  var daysSinceHebEpoch = julianDay - 347997;\n  var monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  var hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  var firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  var dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n\n  var hMonth = 1;\n  var hDay = dayOfYear;\n\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n\n  return new NgbDate(hYear, hMonth, hDay);\n}\n/**\r\n * Returns the equivalent JS date value for a given Hebrew date.\r\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\r\n */\n\n\nfunction toGregorian$1(hebrewDate) {\n  var hYear = hebrewDate.year;\n  var hMonth = hebrewDate.month;\n  var hDay = hebrewDate.day;\n  var days = numberOfFirstDayInYear(hYear);\n\n  for (var i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n\n  days += hDay;\n  var diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  var after = diffDays >= 0;\n\n  if (!after) {\n    diffDays = -diffDays;\n  }\n\n  var gYear = 1970;\n  var gMonth = 1;\n  var gDay = 1;\n\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear$1(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear$1(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear$1(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear$1(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nfunction hebrewNumerals(numerals) {\n  if (!numerals) {\n    return '';\n  }\n\n  var hArray0_9 = ['', \"\\u05D0\", \"\\u05D1\", \"\\u05D2\", \"\\u05D3\", \"\\u05D4\", \"\\u05D5\", \"\\u05D6\", \"\\u05D7\", \"\\u05D8\"];\n  var hArray10_19 = [\"\\u05D9\", \"\\u05D9\\u05D0\", \"\\u05D9\\u05D1\", \"\\u05D9\\u05D2\", \"\\u05D9\\u05D3\", \"\\u05D8\\u05D5\", \"\\u05D8\\u05D6\", \"\\u05D9\\u05D6\", \"\\u05D9\\u05D7\", \"\\u05D9\\u05D8\"];\n  var hArray20_90 = ['', '', \"\\u05DB\", \"\\u05DC\", \"\\u05DE\", \"\\u05E0\", \"\\u05E1\", \"\\u05E2\", \"\\u05E4\", \"\\u05E6\"];\n  var hArray100_900 = ['', \"\\u05E7\", \"\\u05E8\", \"\\u05E9\", \"\\u05EA\", \"\\u05EA\\u05E7\", \"\\u05EA\\u05E8\", \"\\u05EA\\u05E9\", \"\\u05EA\\u05EA\", \"\\u05EA\\u05EA\\u05E7\"];\n  var hArray1000_9000 = ['', \"\\u05D0\", \"\\u05D1\", \"\\u05D1\\u05D0\", \"\\u05D1\\u05D1\", \"\\u05D4\", \"\\u05D4\\u05D0\", \"\\u05D4\\u05D1\", \"\\u05D4\\u05D1\\u05D0\", \"\\u05D4\\u05D1\\u05D1\"];\n  var geresh = \"\\u05F3\",\n      gershaim = \"\\u05F4\";\n  var mem = 0;\n  var result = [];\n  var step = 0;\n\n  while (numerals > 0) {\n    var m = numerals % 10;\n\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n\n      break;\n    }\n\n    numerals = Math.floor(numerals / 10);\n\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n\n    step++;\n  }\n\n  result = result.join('').split('');\n\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n\n  return result.join('');\n}\n/**\r\n * @since 3.2.0\r\n */\n\n\nvar NgbCalendarHebrew = /*#__PURE__*/function (_NgbCalendar4) {\n  _inherits(NgbCalendarHebrew, _NgbCalendar4);\n\n  var _super10 = _createSuper(NgbCalendarHebrew);\n\n  function NgbCalendarHebrew() {\n    _classCallCheck(this, NgbCalendarHebrew);\n\n    return _super10.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarHebrew, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths(year) {\n      if (year && isHebrewLeapYear(year)) {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n      } else {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n      }\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      if (date != null) {\n        var b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n        b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n        b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n        return b && !isNaN(toGregorian$1(date).getTime());\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      date = new NgbDate(date.year, date.month, date.day);\n\n      switch (period) {\n        case 'y':\n          date.year += number;\n          date.month = 1;\n          date.day = 1;\n          return date;\n\n        case 'm':\n          date = setHebrewMonth(date, number);\n          date.day = 1;\n          return date;\n\n        case 'd':\n          return setHebrewDay(date, number);\n\n        default:\n          return date;\n      }\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var day = toGregorian$1(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      var date = week[week.length - 1];\n      return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return fromGregorian$1(new Date());\n    }\n    /**\r\n     * @since 3.4.0\r\n     */\n\n  }, {\n    key: \"toGregorian\",\n    value: function toGregorian(date) {\n      return fromJSDate(toGregorian$1(date));\n    }\n    /**\r\n     * @since 3.4.0\r\n     */\n\n  }, {\n    key: \"fromGregorian\",\n    value: function fromGregorian(date) {\n      return fromGregorian$1(toJSDate(date));\n    }\n  }]);\n\n  return NgbCalendarHebrew;\n}(NgbCalendar);\n\nNgbCalendarHebrew.ɵfac = function NgbCalendarHebrew_Factory(t) {\n  return ɵNgbCalendarHebrew_BaseFactory(t || NgbCalendarHebrew);\n};\n\nNgbCalendarHebrew.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarHebrew,\n  factory: NgbCalendarHebrew.ɵfac\n});\nvar ɵNgbCalendarHebrew_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarHebrew);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nvar MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nvar MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/**\r\n * @since 3.2.0\r\n */\n\nvar NgbDatepickerI18nHebrew = /*#__PURE__*/function (_NgbDatepickerI18n2) {\n  _inherits(NgbDatepickerI18nHebrew, _NgbDatepickerI18n2);\n\n  var _super11 = _createSuper(NgbDatepickerI18nHebrew);\n\n  function NgbDatepickerI18nHebrew() {\n    _classCallCheck(this, NgbDatepickerI18nHebrew);\n\n    return _super11.apply(this, arguments);\n  }\n\n  _createClass(NgbDatepickerI18nHebrew, [{\n    key: \"getMonthShortName\",\n    value: function getMonthShortName(month, year) {\n      return this.getMonthFullName(month, year);\n    }\n  }, {\n    key: \"getMonthFullName\",\n    value: function getMonthFullName(month, year) {\n      return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS[month - 1] || '';\n    }\n  }, {\n    key: \"getWeekdayShortName\",\n    value: function getWeekdayShortName(weekday) {\n      return WEEKDAYS[weekday - 1] || '';\n    }\n  }, {\n    key: \"getDayAriaLabel\",\n    value: function getDayAriaLabel(date) {\n      return \"\".concat(hebrewNumerals(date.day), \" \").concat(this.getMonthFullName(date.month, date.year), \" \").concat(hebrewNumerals(date.year));\n    }\n  }, {\n    key: \"getDayNumerals\",\n    value: function getDayNumerals(date) {\n      return hebrewNumerals(date.day);\n    }\n  }, {\n    key: \"getWeekNumerals\",\n    value: function getWeekNumerals(weekNumber) {\n      return hebrewNumerals(weekNumber);\n    }\n  }, {\n    key: \"getYearNumerals\",\n    value: function getYearNumerals(year) {\n      return hebrewNumerals(year);\n    }\n  }]);\n\n  return NgbDatepickerI18nHebrew;\n}(NgbDatepickerI18n);\n\nNgbDatepickerI18nHebrew.ɵfac = function NgbDatepickerI18nHebrew_Factory(t) {\n  return ɵNgbDatepickerI18nHebrew_BaseFactory(t || NgbDatepickerI18nHebrew);\n};\n\nNgbDatepickerI18nHebrew.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerI18nHebrew,\n  factory: NgbDatepickerI18nHebrew.ɵfac\n});\nvar ɵNgbDatepickerI18nHebrew_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDatepickerI18nHebrew);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18nHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Returns the equivalent JS date value for a give input Buddhist date.\r\n * `date` is an Buddhist date to be converted to Gregorian.\r\n */\n\n\nfunction toGregorian$2(date) {\n  return new Date(date.year - 543, date.month - 1, date.day);\n}\n/**\r\n * Returns the equivalent Buddhist date value for a give input Gregorian date.\r\n * `gdate` is a JS Date to be converted to Buddhist.\r\n * utc to local\r\n */\n\n\nfunction fromGregorian$2(gdate) {\n  return new NgbDate(gdate.getFullYear() + 543, gdate.getMonth() + 1, gdate.getDate());\n}\n/**\r\n * @since 9.1.0\r\n */\n\n\nvar NgbCalendarBuddhist = /*#__PURE__*/function (_NgbCalendarGregorian) {\n  _inherits(NgbCalendarBuddhist, _NgbCalendarGregorian);\n\n  var _super12 = _createSuper(NgbCalendarBuddhist);\n\n  function NgbCalendarBuddhist() {\n    _classCallCheck(this, NgbCalendarBuddhist);\n\n    return _super12.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarBuddhist, [{\n    key: \"getToday\",\n    value: function getToday() {\n      return fromGregorian$2(new Date());\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var jsDate = toGregorian$2(date);\n      var checkMonth = true;\n      var expectedMonth = jsDate.getMonth();\n\n      switch (period) {\n        case 'y':\n          jsDate.setFullYear(jsDate.getFullYear() + number);\n          break;\n\n        case 'm':\n          expectedMonth += number;\n          jsDate.setMonth(expectedMonth);\n          expectedMonth = expectedMonth % 12;\n\n          if (expectedMonth < 0) {\n            expectedMonth = expectedMonth + 12;\n          }\n\n          break;\n\n        case 'd':\n          jsDate.setDate(jsDate.getDate() + number);\n          checkMonth = false;\n          break;\n\n        default:\n          return date;\n      }\n\n      if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n        // this means the destination month has less days than the initial month\n        // let's go back to the end of the previous month:\n        jsDate.setDate(0);\n      }\n\n      return fromGregorian$2(jsDate);\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var jsDate = toGregorian$2(date);\n      var day = jsDate.getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n\n      var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      var date = week[thursdayIndex];\n      var jsDate = toGregorian$2(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n      var time = jsDate.getTime();\n      jsDate.setMonth(0); // Compare with Jan 1\n\n      jsDate.setDate(1);\n      return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n        return false;\n      } // year 0 doesn't exist in Gregorian calendar\n\n\n      if (date.year === 0) {\n        return false;\n      }\n\n      var jsDate = toGregorian$2(date);\n      return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year - 543 && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n    }\n  }]);\n\n  return NgbCalendarBuddhist;\n}(NgbCalendarGregorian);\n\nNgbCalendarBuddhist.ɵfac = function NgbCalendarBuddhist_Factory(t) {\n  return ɵNgbCalendarBuddhist_BaseFactory(t || NgbCalendarBuddhist);\n};\n\nNgbCalendarBuddhist.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarBuddhist,\n  factory: NgbCalendarBuddhist.ɵfac\n});\nvar ɵNgbCalendarBuddhist_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarBuddhist);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbCalendarBuddhist, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\r\n * native javascript dates as a user date model.\r\n */\n\n\nvar NgbDateNativeAdapter = /*#__PURE__*/function (_NgbDateAdapter2) {\n  _inherits(NgbDateNativeAdapter, _NgbDateAdapter2);\n\n  var _super13 = _createSuper(NgbDateNativeAdapter);\n\n  function NgbDateNativeAdapter() {\n    _classCallCheck(this, NgbDateNativeAdapter);\n\n    return _super13.apply(this, arguments);\n  }\n\n  _createClass(NgbDateNativeAdapter, [{\n    key: \"fromModel\",\n    value:\n    /**\r\n     * Converts a native `Date` to a `NgbDateStruct`.\r\n     */\n    function fromModel(date) {\n      return date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;\n    }\n    /**\r\n     * Converts a `NgbDateStruct` to a native `Date`.\r\n     */\n\n  }, {\n    key: \"toModel\",\n    value: function toModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) : null;\n    }\n  }, {\n    key: \"_fromNativeDate\",\n    value: function _fromNativeDate(date) {\n      return {\n        year: date.getFullYear(),\n        month: date.getMonth() + 1,\n        day: date.getDate()\n      };\n    }\n  }, {\n    key: \"_toNativeDate\",\n    value: function _toNativeDate(date) {\n      var jsDate = new Date(date.year, date.month - 1, date.day, 12); // avoid 30 -> 1930 conversion\n\n      jsDate.setFullYear(date.year);\n      return jsDate;\n    }\n  }]);\n\n  return NgbDateNativeAdapter;\n}(NgbDateAdapter);\n\nNgbDateNativeAdapter.ɵfac = function NgbDateNativeAdapter_Factory(t) {\n  return ɵNgbDateNativeAdapter_BaseFactory(t || NgbDateNativeAdapter);\n};\n\nNgbDateNativeAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateNativeAdapter,\n  factory: NgbDateNativeAdapter.ɵfac\n});\nvar ɵNgbDateNativeAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateNativeAdapter);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateNativeAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\r\n *\r\n * @since 3.2.0\r\n */\n\n\nvar NgbDateNativeUTCAdapter = /*#__PURE__*/function (_NgbDateNativeAdapter) {\n  _inherits(NgbDateNativeUTCAdapter, _NgbDateNativeAdapter);\n\n  var _super14 = _createSuper(NgbDateNativeUTCAdapter);\n\n  function NgbDateNativeUTCAdapter() {\n    _classCallCheck(this, NgbDateNativeUTCAdapter);\n\n    return _super14.apply(this, arguments);\n  }\n\n  _createClass(NgbDateNativeUTCAdapter, [{\n    key: \"_fromNativeDate\",\n    value: function _fromNativeDate(date) {\n      return {\n        year: date.getUTCFullYear(),\n        month: date.getUTCMonth() + 1,\n        day: date.getUTCDate()\n      };\n    }\n  }, {\n    key: \"_toNativeDate\",\n    value: function _toNativeDate(date) {\n      var jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day)); // avoid 30 -> 1930 conversion\n\n      jsDate.setUTCFullYear(date.year);\n      return jsDate;\n    }\n  }]);\n\n  return NgbDateNativeUTCAdapter;\n}(NgbDateNativeAdapter);\n\nNgbDateNativeUTCAdapter.ɵfac = function NgbDateNativeUTCAdapter_Factory(t) {\n  return ɵNgbDateNativeUTCAdapter_BaseFactory(t || NgbDateNativeUTCAdapter);\n};\n\nNgbDateNativeUTCAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateNativeUTCAdapter,\n  factory: NgbDateNativeUTCAdapter.ɵfac\n});\nvar ɵNgbDateNativeUTCAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateNativeUTCAdapter);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDateNativeUTCAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar NgbDatepickerModule = /*#__PURE__*/_createClass(function NgbDatepickerModule() {\n  _classCallCheck(this, NgbDatepickerModule);\n});\n\nNgbDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbDatepickerModule\n});\nNgbDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbDatepickerModule_Factory(t) {\n    return new (t || NgbDatepickerModule)();\n  },\n  imports: [[CommonModule, FormsModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbDatepickerModule, {\n    declarations: function declarations() {\n      return [NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView, NgbInputDatepicker];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule];\n    },\n    exports: function exports() {\n      return [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDatepickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView, NgbInputDatepicker],\n      exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n      imports: [CommonModule, FormsModule],\n      entryComponents: [NgbDatepicker]\n    }]\n  }], null, null);\n})();\n/**\r\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the dropdowns used in the application.\r\n */\n\n\nvar NgbDropdownConfig = /*#__PURE__*/_createClass(function NgbDropdownConfig() {\n  _classCallCheck(this, NgbDropdownConfig);\n\n  this.autoClose = true;\n  this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n});\n\nNgbDropdownConfig.ɵfac = function NgbDropdownConfig_Factory(t) {\n  return new (t || NgbDropdownConfig)();\n};\n\nNgbDropdownConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDropdownConfig_Factory() {\n    return new NgbDropdownConfig();\n  },\n  token: NgbDropdownConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar NgbNavbar = /*#__PURE__*/_createClass(function NgbNavbar() {\n  _classCallCheck(this, NgbNavbar);\n});\n\nNgbNavbar.ɵfac = function NgbNavbar_Factory(t) {\n  return new (t || NgbNavbar)();\n};\n\nNgbNavbar.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavbar,\n  selectors: [[\"\", 8, \"navbar\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavbar, [{\n    type: Directive,\n    args: [{\n      selector: '.navbar'\n    }]\n  }], null, null);\n})();\n/**\r\n * A directive you should put on a dropdown item to enable keyboard navigation.\r\n * Arrow keys will move focus between items marked with this directive.\r\n *\r\n * @since 4.1.0\r\n */\n\n\nvar NgbDropdownItem = /*#__PURE__*/function () {\n  function NgbDropdownItem(elementRef) {\n    _classCallCheck(this, NgbDropdownItem);\n\n    this.elementRef = elementRef;\n    this._disabled = false;\n  }\n\n  _createClass(NgbDropdownItem, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = value === '' || value === true; // accept an empty attribute as true\n    }\n  }]);\n\n  return NgbDropdownItem;\n}();\n\nNgbDropdownItem.ɵfac = function NgbDropdownItem_Factory(t) {\n  return new (t || NgbDropdownItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbDropdownItem.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownItem,\n  selectors: [[\"\", \"ngbDropdownItem\", \"\"]],\n  hostAttrs: [1, \"dropdown-item\"],\n  hostVars: 2,\n  hostBindings: function NgbDropdownItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  }\n});\n\nNgbDropdownItem.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nNgbDropdownItem.propDecorators = {\n  disabled: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownItem]',\n      host: {\n        'class': 'dropdown-item',\n        '[class.disabled]': 'disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * A directive that wraps dropdown menu content and dropdown items.\r\n */\n\n\nvar NgbDropdownMenu = /*#__PURE__*/_createClass(function NgbDropdownMenu(dropdown, _elementRef) {\n  _classCallCheck(this, NgbDropdownMenu);\n\n  this.dropdown = dropdown;\n  this.placement = 'bottom';\n  this.isOpen = false;\n  this.nativeElement = _elementRef.nativeElement;\n});\n\nNgbDropdownMenu.ɵfac = function NgbDropdownMenu_Factory(t) {\n  return new (t || NgbDropdownMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbDropdown;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbDropdownMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownMenu,\n  selectors: [[\"\", \"ngbDropdownMenu\", \"\"]],\n  contentQueries: function NgbDropdownMenu_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownItem, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menuItems = _t);\n    }\n  },\n  hostVars: 5,\n  hostBindings: function NgbDropdownMenu_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown.ArrowUp\", function NgbDropdownMenu_keydown_ArrowUp_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.ArrowDown\", function NgbDropdownMenu_keydown_ArrowDown_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Home\", function NgbDropdownMenu_keydown_Home_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.End\", function NgbDropdownMenu_keydown_End_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Enter\", function NgbDropdownMenu_keydown_Enter_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Space\", function NgbDropdownMenu_keydown_Space_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Tab\", function NgbDropdownMenu_keydown_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Shift.Tab\", function NgbDropdownMenu_keydown_Shift_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"x-placement\", ctx.placement);\n      ɵngcc0.ɵɵclassProp(\"dropdown-menu\", true)(\"show\", ctx.dropdown.isOpen());\n    }\n  }\n});\n\nNgbDropdownMenu.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbDropdown;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }];\n};\n\nNgbDropdownMenu.propDecorators = {\n  menuItems: [{\n    type: ContentChildren,\n    args: [NgbDropdownItem]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownMenu, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownMenu]',\n      host: {\n        '[class.dropdown-menu]': 'true',\n        '[class.show]': 'dropdown.isOpen()',\n        '[attr.x-placement]': 'placement',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)',\n        '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n        '(keydown.Space)': 'dropdown.onKeyDown($event)',\n        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbDropdown;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    menuItems: [{\n      type: ContentChildren,\n      args: [NgbDropdownItem]\n    }]\n  });\n})();\n/**\r\n * A directive to mark an element to which dropdown menu will be anchored.\r\n *\r\n * This is a simple version of the `NgbDropdownToggle` directive.\r\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\r\n * for events other than click.\r\n *\r\n * @since 1.1.0\r\n */\n\n\nvar NgbDropdownAnchor = /*#__PURE__*/_createClass(function NgbDropdownAnchor(dropdown, _elementRef) {\n  _classCallCheck(this, NgbDropdownAnchor);\n\n  this.dropdown = dropdown;\n  this.nativeElement = _elementRef.nativeElement;\n});\n\nNgbDropdownAnchor.ɵfac = function NgbDropdownAnchor_Factory(t) {\n  return new (t || NgbDropdownAnchor)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbDropdown;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbDropdownAnchor.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownAnchor,\n  selectors: [[\"\", \"ngbDropdownAnchor\", \"\"]],\n  hostAttrs: [1, \"dropdown-toggle\"],\n  hostVars: 1,\n  hostBindings: function NgbDropdownAnchor_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    }\n  }\n});\n\nNgbDropdownAnchor.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbDropdown;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownAnchor, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownAnchor]',\n      host: {\n        'class': 'dropdown-toggle',\n        '[attr.aria-expanded]': 'dropdown.isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbDropdown;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\r\n * A directive to mark an element that will toggle dropdown via the `click` event.\r\n *\r\n * You can also use `NgbDropdownAnchor` as an alternative.\r\n */\n\n\nvar NgbDropdownToggle = /*#__PURE__*/function (_NgbDropdownAnchor) {\n  _inherits(NgbDropdownToggle, _NgbDropdownAnchor);\n\n  var _super15 = _createSuper(NgbDropdownToggle);\n\n  function NgbDropdownToggle(dropdown, elementRef) {\n    _classCallCheck(this, NgbDropdownToggle);\n\n    return _super15.call(this, dropdown, elementRef);\n  }\n\n  return _createClass(NgbDropdownToggle);\n}(NgbDropdownAnchor);\n\nNgbDropdownToggle.ɵfac = function NgbDropdownToggle_Factory(t) {\n  return new (t || NgbDropdownToggle)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbDropdown;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbDropdownToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownToggle,\n  selectors: [[\"\", \"ngbDropdownToggle\", \"\"]],\n  hostAttrs: [1, \"dropdown-toggle\"],\n  hostVars: 1,\n  hostBindings: function NgbDropdownToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDropdownToggle_click_HostBindingHandler() {\n        return ctx.dropdown.toggle();\n      })(\"keydown.ArrowUp\", function NgbDropdownToggle_keydown_ArrowUp_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.ArrowDown\", function NgbDropdownToggle_keydown_ArrowDown_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Home\", function NgbDropdownToggle_keydown_Home_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.End\", function NgbDropdownToggle_keydown_End_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Tab\", function NgbDropdownToggle_keydown_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Shift.Tab\", function NgbDropdownToggle_keydown_Shift_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    }\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NgbDropdownAnchor,\n    useExisting: forwardRef(function () {\n      return NgbDropdownToggle;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nNgbDropdownToggle.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbDropdown;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownToggle, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownToggle]',\n      host: {\n        'class': 'dropdown-toggle',\n        '[attr.aria-expanded]': 'dropdown.isOpen()',\n        '(click)': 'dropdown.toggle()',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)',\n        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n      },\n      providers: [{\n        provide: NgbDropdownAnchor,\n        useExisting: forwardRef(function () {\n          return NgbDropdownToggle;\n        })\n      }]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbDropdown;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\r\n * A directive that provides contextual overlays for displaying lists of links and more.\r\n */\n\n\nvar NgbDropdown = /*#__PURE__*/function () {\n  function NgbDropdown(_changeDetector, config, _document, _ngZone, _elementRef, _renderer, ngbNavbar) {\n    var _this23 = this;\n\n    _classCallCheck(this, NgbDropdown);\n\n    this._changeDetector = _changeDetector;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._closed$ = new Subject();\n    this._bodyContainer = null;\n    /**\r\n     * Defines whether or not the dropdown menu is opened initially.\r\n     */\n\n    this._open = false;\n    /**\r\n     * An event fired when the dropdown is opened or closed.\r\n     *\r\n     * The event payload is a `boolean`:\r\n     * * `true` - the dropdown was opened\r\n     * * `false` - the dropdown was closed\r\n     */\n\n    this.openChange = new EventEmitter();\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      _this23._positionMenu();\n    });\n  }\n\n  _createClass(NgbDropdown, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this24 = this;\n\n      this._ngZone.onStable.pipe(take(1)).subscribe(function () {\n        _this24._applyPlacementClasses();\n\n        if (_this24._open) {\n          _this24._setCloseHandlers();\n        }\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.container && this._open) {\n        this._applyContainer(this.container);\n      }\n\n      if (changes.placement && !changes.placement.isFirstChange) {\n        this._applyPlacementClasses();\n      }\n\n      if (changes.dropdownClass) {\n        var _changes$dropdownClas = changes.dropdownClass,\n            currentValue = _changes$dropdownClas.currentValue,\n            previousValue = _changes$dropdownClas.previousValue;\n\n        this._applyCustomDropdownClass(currentValue, previousValue);\n      }\n    }\n    /**\r\n     * Checks if the dropdown menu is open.\r\n     */\n\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this._open;\n    }\n    /**\r\n     * Opens the dropdown menu.\r\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (!this._open) {\n        this._open = true;\n\n        this._applyContainer(this.container);\n\n        this.openChange.emit(true);\n\n        this._setCloseHandlers();\n\n        if (this._anchor) {\n          this._anchor.nativeElement.focus();\n        }\n      }\n    }\n  }, {\n    key: \"_setCloseHandlers\",\n    value: function _setCloseHandlers() {\n      var _this25 = this;\n\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, function (source) {\n        _this25.close();\n\n        if (source === 0\n        /* ESCAPE */\n        ) {\n          _this25._anchor.nativeElement.focus();\n        }\n      }, this._closed$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [], '.dropdown-item,.dropdown-divider');\n    }\n    /**\r\n     * Closes the dropdown menu.\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._open) {\n        this._open = false;\n\n        this._resetContainer();\n\n        this._closed$.next();\n\n        this.openChange.emit(false);\n\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\r\n     * Toggles the dropdown menu.\r\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isOpen()) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._resetContainer();\n\n      this._closed$.next();\n\n      this._zoneSubscription.unsubscribe();\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      var _this26 = this;\n\n      // tslint:disable-next-line:deprecation\n      var key = event.which;\n\n      var itemElements = this._getMenuElements();\n\n      var position = -1;\n      var itemElement = null;\n\n      var isEventFromToggle = this._isEventFromToggle(event);\n\n      if (!isEventFromToggle && itemElements.length) {\n        itemElements.forEach(function (item, index) {\n          if (item.contains(event.target)) {\n            itemElement = item;\n          }\n\n          if (item === _this26._document.activeElement) {\n            position = index;\n          }\n        });\n      } // closing on Enter / Space\n\n\n      if (key === Key.Space || key === Key.Enter) {\n        if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n          // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n          // So we have to register a one-time click handler that will fire after any user defined click handlers\n          // to close the dropdown\n          fromEvent(itemElement, 'click').pipe(take(1)).subscribe(function () {\n            return _this26.close();\n          });\n        }\n\n        return;\n      }\n\n      if (key === Key.Tab) {\n        if (event.target && this.isOpen() && this.autoClose) {\n          if (this._anchor.nativeElement === event.target) {\n            if (this.container === 'body' && !event.shiftKey) {\n              /* This case is special: user is using [Tab] from the anchor/toggle.\r\n                 User expects the next focusable element in the dropdown menu to get focus.\r\n                 But the menu is not a sibling to anchor/toggle, it is at the end of the body.\r\n                 Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\r\n                 so that browser will focus the proper element (first one focusable in the menu) */\n              this._renderer.setAttribute(this._menu.nativeElement, 'tabindex', '0');\n\n              this._menu.nativeElement.focus();\n\n              this._renderer.removeAttribute(this._menu.nativeElement, 'tabindex');\n            } else if (event.shiftKey) {\n              this.close();\n            }\n\n            return;\n          } else if (this.container === 'body') {\n            var focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n\n            if (event.shiftKey && event.target === focusableElements[0]) {\n              this._anchor.nativeElement.focus();\n\n              event.preventDefault();\n            } else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n              this._anchor.nativeElement.focus();\n\n              this.close();\n            }\n          } else {\n            fromEvent(event.target, 'focusout').pipe(take(1)).subscribe(function (_ref17) {\n              var relatedTarget = _ref17.relatedTarget;\n\n              if (!_this26._elementRef.nativeElement.contains(relatedTarget)) {\n                _this26.close();\n              }\n            });\n          }\n        }\n\n        return;\n      } // opening / navigating\n\n\n      if (isEventFromToggle || itemElement) {\n        this.open();\n\n        if (itemElements.length) {\n          switch (key) {\n            case Key.ArrowDown:\n              position = Math.min(position + 1, itemElements.length - 1);\n              break;\n\n            case Key.ArrowUp:\n              if (this._isDropup() && position === -1) {\n                position = itemElements.length - 1;\n                break;\n              }\n\n              position = Math.max(position - 1, 0);\n              break;\n\n            case Key.Home:\n              position = 0;\n              break;\n\n            case Key.End:\n              position = itemElements.length - 1;\n              break;\n          }\n\n          itemElements[position].focus();\n        }\n\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"_isDropup\",\n    value: function _isDropup() {\n      return this._elementRef.nativeElement.classList.contains('dropup');\n    }\n  }, {\n    key: \"_isEventFromToggle\",\n    value: function _isEventFromToggle(event) {\n      return this._anchor.nativeElement.contains(event.target);\n    }\n  }, {\n    key: \"_getMenuElements\",\n    value: function _getMenuElements() {\n      var menu = this._menu;\n\n      if (menu == null) {\n        return [];\n      }\n\n      return menu.menuItems.filter(function (item) {\n        return !item.disabled;\n      }).map(function (item) {\n        return item.elementRef.nativeElement;\n      });\n    }\n  }, {\n    key: \"_positionMenu\",\n    value: function _positionMenu() {\n      var menu = this._menu;\n\n      if (this.isOpen() && menu) {\n        this._applyPlacementClasses(this.display === 'dynamic' ? positionElements(this._anchor.nativeElement, this._bodyContainer || this._menu.nativeElement, this.placement, this.container === 'body') : this._getFirstPlacement(this.placement));\n      }\n    }\n  }, {\n    key: \"_getFirstPlacement\",\n    value: function _getFirstPlacement(placement) {\n      return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n    }\n  }, {\n    key: \"_resetContainer\",\n    value: function _resetContainer() {\n      var renderer = this._renderer;\n\n      if (this._menu) {\n        var dropdownElement = this._elementRef.nativeElement;\n        var dropdownMenuElement = this._menu.nativeElement;\n        renderer.appendChild(dropdownElement, dropdownMenuElement);\n        renderer.removeStyle(dropdownMenuElement, 'position');\n        renderer.removeStyle(dropdownMenuElement, 'transform');\n      }\n\n      if (this._bodyContainer) {\n        renderer.removeChild(this._document.body, this._bodyContainer);\n        this._bodyContainer = null;\n      }\n    }\n  }, {\n    key: \"_applyContainer\",\n    value: function _applyContainer() {\n      var container = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      this._resetContainer();\n\n      if (container === 'body') {\n        var renderer = this._renderer;\n        var dropdownMenuElement = this._menu.nativeElement;\n        var bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div'); // Override some styles to have the positioning working\n\n        renderer.setStyle(bodyContainer, 'position', 'absolute');\n        renderer.setStyle(dropdownMenuElement, 'position', 'static');\n        renderer.setStyle(bodyContainer, 'z-index', '1050');\n        renderer.appendChild(bodyContainer, dropdownMenuElement);\n        renderer.appendChild(this._document.body, bodyContainer);\n      }\n\n      this._applyCustomDropdownClass(this.dropdownClass);\n    }\n  }, {\n    key: \"_applyCustomDropdownClass\",\n    value: function _applyCustomDropdownClass(newClass, oldClass) {\n      var targetElement = this.container === 'body' ? this._bodyContainer : this._elementRef.nativeElement;\n\n      if (targetElement) {\n        if (oldClass) {\n          this._renderer.removeClass(targetElement, oldClass);\n        }\n\n        if (newClass) {\n          this._renderer.addClass(targetElement, newClass);\n        }\n      }\n    }\n  }, {\n    key: \"_applyPlacementClasses\",\n    value: function _applyPlacementClasses(placement) {\n      var menu = this._menu;\n\n      if (menu) {\n        if (!placement) {\n          placement = this._getFirstPlacement(this.placement);\n        }\n\n        var renderer = this._renderer;\n        var dropdownElement = this._elementRef.nativeElement; // remove the current placement classes\n\n        renderer.removeClass(dropdownElement, 'dropup');\n        renderer.removeClass(dropdownElement, 'dropdown');\n        menu.placement = this.display === 'static' ? null : placement;\n        /*\r\n        * apply the new placement\r\n        * in case of top use up-arrow or down-arrow otherwise\r\n        */\n\n        var dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n        renderer.addClass(dropdownElement, dropdownClass);\n        var bodyContainer = this._bodyContainer;\n\n        if (bodyContainer) {\n          renderer.removeClass(bodyContainer, 'dropup');\n          renderer.removeClass(bodyContainer, 'dropdown');\n          renderer.addClass(bodyContainer, dropdownClass);\n        }\n      }\n    }\n  }]);\n\n  return NgbDropdown;\n}();\n\nNgbDropdown.ɵfac = function NgbDropdown_Factory(t) {\n  return new (t || NgbDropdown)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbDropdownConfig), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NgbNavbar, 8));\n};\n\nNgbDropdown.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdown,\n  selectors: [[\"\", \"ngbDropdown\", \"\"]],\n  contentQueries: function NgbDropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownMenu, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownAnchor, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._menu = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._anchor = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbDropdown_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"show\", ctx.isOpen());\n    }\n  },\n  inputs: {\n    _open: [\"open\", \"_open\"],\n    placement: \"placement\",\n    container: \"container\",\n    autoClose: \"autoClose\",\n    display: \"display\",\n    dropdownClass: \"dropdownClass\"\n  },\n  outputs: {\n    openChange: \"openChange\"\n  },\n  exportAs: [\"ngbDropdown\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbDropdown.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NgbDropdownConfig\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NgbNavbar,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nNgbDropdown.propDecorators = {\n  _menu: [{\n    type: ContentChild,\n    args: [NgbDropdownMenu, {\n      static: false\n    }]\n  }],\n  _anchor: [{\n    type: ContentChild,\n    args: [NgbDropdownAnchor, {\n      static: false\n    }]\n  }],\n  autoClose: [{\n    type: Input\n  }],\n  dropdownClass: [{\n    type: Input\n  }],\n  _open: [{\n    type: Input,\n    args: ['open']\n  }],\n  placement: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  display: [{\n    type: Input\n  }],\n  openChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdown, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdown]',\n      exportAs: 'ngbDropdown',\n      host: {\n        '[class.show]': 'isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbDropdownConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: NgbNavbar,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    _open: [{\n      type: Input,\n      args: ['open']\n    }],\n    openChange: [{\n      type: Output\n    }],\n    placement: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    display: [{\n      type: Input\n    }],\n    _menu: [{\n      type: ContentChild,\n      args: [NgbDropdownMenu, {\n        static: false\n      }]\n    }],\n    _anchor: [{\n      type: ContentChild,\n      args: [NgbDropdownAnchor, {\n        static: false\n      }]\n    }],\n    dropdownClass: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\nvar NgbDropdownModule = /*#__PURE__*/_createClass(function NgbDropdownModule() {\n  _classCallCheck(this, NgbDropdownModule);\n});\n\nNgbDropdownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbDropdownModule\n});\nNgbDropdownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbDropdownModule_Factory(t) {\n    return new (t || NgbDropdownModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbDropdownModule, {\n    declarations: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar],\n    exports: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbDropdownModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_DROPDOWN_DIRECTIVES,\n      exports: NGB_DROPDOWN_DIRECTIVES\n    }]\n  }], null, null);\n})();\n/**\r\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all modals used in the application.\r\n*\r\n* @since 3.1.0\r\n*/\n\n\nvar NgbModalConfig = /*#__PURE__*/function () {\n  function NgbModalConfig(_ngbConfig) {\n    _classCallCheck(this, NgbModalConfig);\n\n    this._ngbConfig = _ngbConfig;\n    this.backdrop = true;\n    this.keyboard = true;\n  }\n\n  _createClass(NgbModalConfig, [{\n    key: \"animation\",\n    get: function get() {\n      return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    },\n    set: function set(animation) {\n      this._animation = animation;\n    }\n  }]);\n\n  return NgbModalConfig;\n}();\n\nNgbModalConfig.ɵfac = function NgbModalConfig_Factory(t) {\n  return new (t || NgbModalConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbModalConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModalConfig_Factory() {\n    return new NgbModalConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbModalConfig,\n  providedIn: \"root\"\n});\n\nNgbModalConfig.ctorParameters = function () {\n  return [{\n    type: NgbConfig\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModalConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nvar ContentRef = /*#__PURE__*/_createClass(function ContentRef(nodes, viewRef, componentRef) {\n  _classCallCheck(this, ContentRef);\n\n  this.nodes = nodes;\n  this.viewRef = viewRef;\n  this.componentRef = componentRef;\n});\n\nvar PopupService = /*#__PURE__*/function () {\n  function PopupService(_type, _injector, _viewContainerRef, _renderer, _ngZone, _componentFactoryResolver, _applicationRef) {\n    _classCallCheck(this, PopupService);\n\n    this._type = _type;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._applicationRef = _applicationRef;\n    this._windowRef = null;\n    this._contentRef = null;\n  }\n\n  _createClass(PopupService, [{\n    key: \"open\",\n    value: function open(content, context) {\n      var _this27 = this;\n\n      var animation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (!this._windowRef) {\n        this._contentRef = this._getContentRef(content, context);\n        this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), this._viewContainerRef.length, this._injector, this._contentRef.nodes);\n      }\n\n      var nativeElement = this._windowRef.location.nativeElement;\n\n      var transition$ = this._ngZone.onStable.pipe(take(1), mergeMap(function () {\n        return ngbRunTransition(_this27._ngZone, nativeElement, function (_ref18) {\n          var classList = _ref18.classList;\n          return classList.add('show');\n        }, {\n          animation: animation,\n          runningTransition: 'continue'\n        });\n      }));\n\n      return {\n        windowRef: this._windowRef,\n        transition$: transition$\n      };\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this28 = this;\n\n      var animation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!this._windowRef) {\n        return of(undefined);\n      }\n\n      return ngbRunTransition(this._ngZone, this._windowRef.location.nativeElement, function (_ref19) {\n        var classList = _ref19.classList;\n        return classList.remove('show');\n      }, {\n        animation: animation,\n        runningTransition: 'stop'\n      }).pipe(tap(function () {\n        var _a;\n\n        if (_this28._windowRef) {\n          // this is required because of the container='body' option\n          _this28._viewContainerRef.remove(_this28._viewContainerRef.indexOf(_this28._windowRef.hostView));\n\n          _this28._windowRef = null;\n        }\n\n        if ((_a = _this28._contentRef) === null || _a === void 0 ? void 0 : _a.viewRef) {\n          _this28._applicationRef.detachView(_this28._contentRef.viewRef);\n\n          _this28._contentRef.viewRef.destroy();\n\n          _this28._contentRef = null;\n        }\n      }));\n    }\n  }, {\n    key: \"_getContentRef\",\n    value: function _getContentRef(content, context) {\n      if (!content) {\n        return new ContentRef([]);\n      } else if (content instanceof TemplateRef) {\n        var viewRef = content.createEmbeddedView(context);\n\n        this._applicationRef.attachView(viewRef);\n\n        return new ContentRef([viewRef.rootNodes], viewRef);\n      } else {\n        return new ContentRef([[this._renderer.createText(\"\".concat(content))]]);\n      }\n    }\n  }]);\n\n  return PopupService;\n}();\n\nvar noop = function noop() {};\n\nvar ɵ0$3 = noop;\n/**\r\n * Utility to handle the scrollbar.\r\n *\r\n * It allows to compensate the lack of a vertical scrollbar by adding an\r\n * equivalent padding on the right of the body, and to remove this compensation.\r\n */\n\nvar ScrollBar = /*#__PURE__*/function () {\n  function ScrollBar(_document) {\n    _classCallCheck(this, ScrollBar);\n\n    this._document = _document;\n  }\n  /**\r\n   * To be called right before a potential vertical scrollbar would be removed:\r\n   *\r\n   * - if there was a scrollbar, adds some compensation padding to the body\r\n   * to keep the same layout as when the scrollbar is there\r\n   * - if there was none, there is nothing to do\r\n   *\r\n   * @return a callback used to revert the compensation (noop if there was none,\r\n   * otherwise a function removing the padding)\r\n   */\n\n\n  _createClass(ScrollBar, [{\n    key: \"compensate\",\n    value: function compensate() {\n      var width = this._getWidth();\n\n      return !this._isPresent(width) ? noop : this._adjustBody(width);\n    }\n    /**\r\n     * Adds a padding of the given width on the right of the body.\r\n     *\r\n     * @return a callback used to revert the padding to its previous value\r\n     */\n\n  }, {\n    key: \"_adjustBody\",\n    value: function _adjustBody(scrollbarWidth) {\n      var body = this._document.body;\n      var userSetPaddingStyle = body.style.paddingRight;\n      var actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n      body.style['padding-right'] = \"\".concat(actualPadding + scrollbarWidth, \"px\");\n      return function () {\n        return body.style['padding-right'] = userSetPaddingStyle;\n      };\n    }\n    /**\r\n     * Tells whether a scrollbar is currently present on the body.\r\n     *\r\n     * @return true if scrollbar is present, false otherwise\r\n     */\n\n  }, {\n    key: \"_isPresent\",\n    value: function _isPresent(scrollbarWidth) {\n      var rect = this._document.body.getBoundingClientRect();\n\n      var bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n      var uncertainty = 0.1 * scrollbarWidth;\n      return bodyToViewportGap >= scrollbarWidth - uncertainty;\n    }\n    /**\r\n     * Calculates and returns the width of a scrollbar.\r\n     *\r\n     * @return the width of a scrollbar on this page\r\n     */\n\n  }, {\n    key: \"_getWidth\",\n    value: function _getWidth() {\n      var measurer = this._document.createElement('div');\n\n      measurer.className = 'modal-scrollbar-measure';\n      var body = this._document.body;\n      body.appendChild(measurer);\n      var width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n      body.removeChild(measurer);\n      return width;\n    }\n  }]);\n\n  return ScrollBar;\n}();\n\nScrollBar.ɵfac = function ScrollBar_Factory(t) {\n  return new (t || ScrollBar)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nScrollBar.ɵprov = ɵɵdefineInjectable({\n  factory: function ScrollBar_Factory() {\n    return new ScrollBar(ɵɵinject(DOCUMENT));\n  },\n  token: ScrollBar,\n  providedIn: \"root\"\n});\n\nScrollBar.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScrollBar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nvar NgbModalBackdrop = /*#__PURE__*/function () {\n  function NgbModalBackdrop(_el, _zone) {\n    _classCallCheck(this, NgbModalBackdrop);\n\n    this._el = _el;\n    this._zone = _zone;\n  }\n\n  _createClass(NgbModalBackdrop, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this29 = this;\n\n      this._zone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n        ngbRunTransition(_this29._zone, _this29._el.nativeElement, function (element, animation) {\n          if (animation) {\n            reflow(element);\n          }\n\n          element.classList.add('show');\n        }, {\n          animation: _this29.animation,\n          runningTransition: 'continue'\n        });\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      return ngbRunTransition(this._zone, this._el.nativeElement, function (_ref20) {\n        var classList = _ref20.classList;\n        return classList.remove('show');\n      }, {\n        animation: this.animation,\n        runningTransition: 'stop'\n      });\n    }\n  }]);\n\n  return NgbModalBackdrop;\n}();\n\nNgbModalBackdrop.ɵfac = function NgbModalBackdrop_Factory(t) {\n  return new (t || NgbModalBackdrop)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNgbModalBackdrop.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbModalBackdrop,\n  selectors: [[\"ngb-modal-backdrop\"]],\n  hostAttrs: [2, \"z-index\", \"1050\"],\n  hostVars: 6,\n  hostBindings: function NgbModalBackdrop_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"modal-backdrop\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n      ɵngcc0.ɵɵclassProp(\"show\", !ctx.animation)(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    backdropClass: \"backdropClass\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function NgbModalBackdrop_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\nNgbModalBackdrop.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nNgbModalBackdrop.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  backdropClass: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModalBackdrop, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-backdrop',\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      host: {\n        '[class]': '\"modal-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n        '[class.show]': '!animation',\n        '[class.fade]': 'animation',\n        'style': 'z-index: 1050'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    backdropClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * A reference to the currently opened (active) modal.\r\n *\r\n * Instances of this class can be injected into your component passed as modal content.\r\n * So you can `.close()` or `.dismiss()` the modal window from your component.\r\n */\n\n\nvar NgbActiveModal = /*#__PURE__*/function () {\n  function NgbActiveModal() {\n    _classCallCheck(this, NgbActiveModal);\n  }\n\n  _createClass(NgbActiveModal, [{\n    key: \"close\",\n    value:\n    /**\r\n     * Closes the modal with an optional `result` value.\r\n     *\r\n     * The `NgbModalRef.result` promise will be resolved with the provided value.\r\n     */\n    function close(result) {}\n    /**\r\n     * Dismisses the modal with an optional `reason` value.\r\n     *\r\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\r\n     */\n\n  }, {\n    key: \"dismiss\",\n    value: function dismiss(reason) {}\n  }]);\n\n  return NgbActiveModal;\n}();\n/**\r\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\r\n */\n\n\nvar NgbModalRef = /*#__PURE__*/function () {\n  function NgbModalRef(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n    var _this30 = this;\n\n    _classCallCheck(this, NgbModalRef);\n\n    this._windowCmptRef = _windowCmptRef;\n    this._contentRef = _contentRef;\n    this._backdropCmptRef = _backdropCmptRef;\n    this._beforeDismiss = _beforeDismiss;\n    this._closed = new Subject();\n    this._dismissed = new Subject();\n    this._hidden = new Subject();\n\n    _windowCmptRef.instance.dismissEvent.subscribe(function (reason) {\n      _this30.dismiss(reason);\n    });\n\n    this.result = new Promise(function (resolve, reject) {\n      _this30._resolve = resolve;\n      _this30._reject = reject;\n    });\n    this.result.then(null, function () {});\n  }\n  /**\r\n   * The instance of a component used for the modal content.\r\n   *\r\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\r\n   */\n\n\n  _createClass(NgbModalRef, [{\n    key: \"componentInstance\",\n    get: function get() {\n      if (this._contentRef && this._contentRef.componentRef) {\n        return this._contentRef.componentRef.instance;\n      }\n    }\n    /**\r\n     * The observable that emits when the modal is closed via the `.close()` method.\r\n     *\r\n     * It will emit the result passed to the `.close()` method.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n  }, {\n    key: \"closed\",\n    get: function get() {\n      return this._closed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\r\n     * The observable that emits when the modal is dismissed via the `.dismiss()` method.\r\n     *\r\n     * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\r\n     * reasons like backdrop click or ESC key press.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n  }, {\n    key: \"dismissed\",\n    get: function get() {\n      return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\r\n     * The observable that emits when both modal window and backdrop are closed and animations were finished.\r\n     * At this point modal and backdrop elements will be removed from the DOM tree.\r\n     *\r\n     * This observable will be completed after emitting.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n  }, {\n    key: \"hidden\",\n    get: function get() {\n      return this._hidden.asObservable();\n    }\n    /**\r\n     * The observable that emits when modal is fully visible and animation was finished.\r\n     * Modal DOM element is always available synchronously after calling 'modal.open()' service.\r\n     *\r\n     * This observable will be completed after emitting.\r\n     * It will not emit, if modal is closed before open animation is finished.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n  }, {\n    key: \"shown\",\n    get: function get() {\n      return this._windowCmptRef.instance.shown.asObservable();\n    }\n    /**\r\n     * Closes the modal with an optional `result` value.\r\n     *\r\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(result) {\n      if (this._windowCmptRef) {\n        this._closed.next(result);\n\n        this._resolve(result);\n\n        this._removeModalElements();\n      }\n    }\n  }, {\n    key: \"_dismiss\",\n    value: function _dismiss(reason) {\n      this._dismissed.next(reason);\n\n      this._reject(reason);\n\n      this._removeModalElements();\n    }\n    /**\r\n     * Dismisses the modal with an optional `reason` value.\r\n     *\r\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\r\n     */\n\n  }, {\n    key: \"dismiss\",\n    value: function dismiss(reason) {\n      var _this31 = this;\n\n      if (this._windowCmptRef) {\n        if (!this._beforeDismiss) {\n          this._dismiss(reason);\n        } else {\n          var dismiss = this._beforeDismiss();\n\n          if (dismiss && dismiss.then) {\n            dismiss.then(function (result) {\n              if (result !== false) {\n                _this31._dismiss(reason);\n              }\n            }, function () {});\n          } else if (dismiss !== false) {\n            this._dismiss(reason);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_removeModalElements\",\n    value: function _removeModalElements() {\n      var _this32 = this;\n\n      var windowTransition$ = this._windowCmptRef.instance.hide();\n\n      var backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined); // hiding window\n\n      windowTransition$.subscribe(function () {\n        var nativeElement = _this32._windowCmptRef.location.nativeElement;\n        nativeElement.parentNode.removeChild(nativeElement);\n\n        _this32._windowCmptRef.destroy();\n\n        if (_this32._contentRef && _this32._contentRef.viewRef) {\n          _this32._contentRef.viewRef.destroy();\n        }\n\n        _this32._windowCmptRef = null;\n        _this32._contentRef = null;\n      }); // hiding backdrop\n\n      backdropTransition$.subscribe(function () {\n        if (_this32._backdropCmptRef) {\n          var nativeElement = _this32._backdropCmptRef.location.nativeElement;\n          nativeElement.parentNode.removeChild(nativeElement);\n\n          _this32._backdropCmptRef.destroy();\n\n          _this32._backdropCmptRef = null;\n        }\n      }); // all done\n\n      zip(windowTransition$, backdropTransition$).subscribe(function () {\n        _this32._hidden.next();\n\n        _this32._hidden.complete();\n      });\n    }\n  }]);\n\n  return NgbModalRef;\n}();\n\nvar ModalDismissReasons;\n\n(function (ModalDismissReasons) {\n  ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n  ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n\nvar NgbModalWindow = /*#__PURE__*/function () {\n  function NgbModalWindow(_document, _elRef, _zone) {\n    _classCallCheck(this, NgbModalWindow);\n\n    this._document = _document;\n    this._elRef = _elRef;\n    this._zone = _zone;\n    this._closed$ = new Subject();\n    this._elWithFocus = null; // element that is focused prior to modal opening\n\n    this.backdrop = true;\n    this.keyboard = true;\n    this.dismissEvent = new EventEmitter();\n    this.shown = new Subject();\n    this.hidden = new Subject();\n  }\n\n  _createClass(NgbModalWindow, [{\n    key: \"dismiss\",\n    value: function dismiss(reason) {\n      this.dismissEvent.emit(reason);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this33 = this;\n\n      this._elWithFocus = this._document.activeElement;\n\n      this._zone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n        _this33._show();\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._disableEventHandling();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this34 = this;\n\n      var nativeElement = this._elRef.nativeElement;\n      var context = {\n        animation: this.animation,\n        runningTransition: 'stop'\n      };\n      var windowTransition$ = ngbRunTransition(this._zone, nativeElement, function () {\n        return nativeElement.classList.remove('show');\n      }, context);\n      var dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, function () {}, context);\n      var transitions$ = zip(windowTransition$, dialogTransition$);\n      transitions$.subscribe(function () {\n        _this34.hidden.next();\n\n        _this34.hidden.complete();\n      });\n\n      this._disableEventHandling();\n\n      this._restoreFocus();\n\n      return transitions$;\n    }\n  }, {\n    key: \"_show\",\n    value: function _show() {\n      var _this35 = this;\n\n      var context = {\n        animation: this.animation,\n        runningTransition: 'continue'\n      };\n      var windowTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, function (element, animation) {\n        if (animation) {\n          reflow(element);\n        }\n\n        element.classList.add('show');\n      }, context);\n      var dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, function () {}, context);\n      zip(windowTransition$, dialogTransition$).subscribe(function () {\n        _this35.shown.next();\n\n        _this35.shown.complete();\n      });\n\n      this._enableEventHandling();\n\n      this._setFocus();\n    }\n  }, {\n    key: \"_enableEventHandling\",\n    value: function _enableEventHandling() {\n      var _this36 = this;\n\n      var nativeElement = this._elRef.nativeElement;\n\n      this._zone.runOutsideAngular(function () {\n        fromEvent(nativeElement, 'keydown').pipe(takeUntil(_this36._closed$), // tslint:disable-next-line:deprecation\n        filter(function (e) {\n          return e.which === Key.Escape;\n        })).subscribe(function (event) {\n          if (_this36.keyboard) {\n            requestAnimationFrame(function () {\n              if (!event.defaultPrevented) {\n                _this36._zone.run(function () {\n                  return _this36.dismiss(ModalDismissReasons.ESC);\n                });\n              }\n            });\n          } else if (_this36.backdrop === 'static') {\n            _this36._bumpBackdrop();\n          }\n        }); // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n        // inside the modal dialog and releasing it outside\n\n        var preventClose = false;\n        fromEvent(_this36._dialogEl.nativeElement, 'mousedown').pipe(takeUntil(_this36._closed$), tap(function () {\n          return preventClose = false;\n        }), switchMap(function () {\n          return fromEvent(nativeElement, 'mouseup').pipe(takeUntil(_this36._closed$), take(1));\n        }), filter(function (_ref21) {\n          var target = _ref21.target;\n          return nativeElement === target;\n        })).subscribe(function () {\n          preventClose = true;\n        }); // We're listening to 'click' to dismiss modal on modal window click, except when:\n        // 1. clicking on modal dialog itself\n        // 2. closing was prevented by mousedown/up handlers\n        // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n\n        fromEvent(nativeElement, 'click').pipe(takeUntil(_this36._closed$)).subscribe(function (_ref22) {\n          var target = _ref22.target;\n\n          if (nativeElement === target) {\n            if (_this36.backdrop === 'static') {\n              _this36._bumpBackdrop();\n            } else if (_this36.backdrop === true && !preventClose) {\n              _this36._zone.run(function () {\n                return _this36.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n              });\n            }\n          }\n\n          preventClose = false;\n        });\n      });\n    }\n  }, {\n    key: \"_disableEventHandling\",\n    value: function _disableEventHandling() {\n      this._closed$.next();\n    }\n  }, {\n    key: \"_setFocus\",\n    value: function _setFocus() {\n      var nativeElement = this._elRef.nativeElement;\n\n      if (!nativeElement.contains(document.activeElement)) {\n        var autoFocusable = nativeElement.querySelector(\"[ngbAutofocus]\");\n        var firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n        var elementToFocus = autoFocusable || firstFocusable || nativeElement;\n        elementToFocus.focus();\n      }\n    }\n  }, {\n    key: \"_restoreFocus\",\n    value: function _restoreFocus() {\n      var _this37 = this;\n\n      var body = this._document.body;\n      var elWithFocus = this._elWithFocus;\n      var elementToFocus;\n\n      if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n        elementToFocus = elWithFocus;\n      } else {\n        elementToFocus = body;\n      }\n\n      this._zone.runOutsideAngular(function () {\n        setTimeout(function () {\n          return elementToFocus.focus();\n        });\n        _this37._elWithFocus = null;\n      });\n    }\n  }, {\n    key: \"_bumpBackdrop\",\n    value: function _bumpBackdrop() {\n      if (this.backdrop === 'static') {\n        ngbRunTransition(this._zone, this._elRef.nativeElement, function (_ref23) {\n          var classList = _ref23.classList;\n          classList.add('modal-static');\n          return function () {\n            return classList.remove('modal-static');\n          };\n        }, {\n          animation: this.animation,\n          runningTransition: 'continue'\n        });\n      }\n    }\n  }]);\n\n  return NgbModalWindow;\n}();\n\nNgbModalWindow.ɵfac = function NgbModalWindow_Factory(t) {\n  return new (t || NgbModalWindow)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNgbModalWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbModalWindow,\n  selectors: [[\"ngb-modal-window\"]],\n  viewQuery: function NgbModalWindow_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c31, 3);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._dialogEl = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\"],\n  hostVars: 7,\n  hostBindings: function NgbModalWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-describedby\", ctx.ariaDescribedBy);\n      ɵngcc0.ɵɵclassMap(\"modal d-block\" + (ctx.windowClass ? \" \" + ctx.windowClass : \"\"));\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    backdrop: \"backdrop\",\n    keyboard: \"keyboard\",\n    animation: \"animation\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    ariaDescribedBy: \"ariaDescribedBy\",\n    centered: \"centered\",\n    scrollable: \"scrollable\",\n    size: \"size\",\n    windowClass: \"windowClass\",\n    modalDialogClass: \"modalDialogClass\"\n  },\n  outputs: {\n    dismissEvent: \"dismiss\"\n  },\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 2,\n  consts: [[\"role\", \"document\"], [\"dialog\", \"\"], [1, \"modal-content\"]],\n  template: function NgbModalWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"modal-dialog\" + (ctx.size ? \" modal-\" + ctx.size : \"\") + (ctx.centered ? \" modal-dialog-centered\" : \"\") + (ctx.scrollable ? \" modal-dialog-scrollable\" : \"\") + (ctx.modalDialogClass ? \" \" + ctx.modalDialogClass : \"\"));\n    }\n  },\n  styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\"],\n  encapsulation: 2\n});\n\nNgbModalWindow.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nNgbModalWindow.propDecorators = {\n  _dialogEl: [{\n    type: ViewChild,\n    args: ['dialog', {\n      static: true\n    }]\n  }],\n  animation: [{\n    type: Input\n  }],\n  ariaLabelledBy: [{\n    type: Input\n  }],\n  ariaDescribedBy: [{\n    type: Input\n  }],\n  backdrop: [{\n    type: Input\n  }],\n  centered: [{\n    type: Input\n  }],\n  keyboard: [{\n    type: Input\n  }],\n  scrollable: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  windowClass: [{\n    type: Input\n  }],\n  modalDialogClass: [{\n    type: Input\n  }],\n  dismissEvent: [{\n    type: Output,\n    args: ['dismiss']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModalWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-window',\n      host: {\n        '[class]': '\"modal d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n        '[class.fade]': 'animation',\n        'role': 'dialog',\n        'tabindex': '-1',\n        '[attr.aria-modal]': 'true',\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.aria-describedby]': 'ariaDescribedBy'\n      },\n      template: \"\\n    <div #dialog [class]=\\\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\\n     (scrollable ? ' modal-dialog-scrollable' : '') + (modalDialogClass ? ' ' + modalDialogClass : '')\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\"><ng-content></ng-content></div>\\n    </div>\\n    \",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    backdrop: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    dismissEvent: [{\n      type: Output,\n      args: ['dismiss']\n    }],\n    _dialogEl: [{\n      type: ViewChild,\n      args: ['dialog', {\n        static: true\n      }]\n    }],\n    animation: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaDescribedBy: [{\n      type: Input\n    }],\n    centered: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    windowClass: [{\n      type: Input\n    }],\n    modalDialogClass: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbModalStack = /*#__PURE__*/function () {\n  function NgbModalStack(_applicationRef, _injector, _document, _scrollBar, _rendererFactory, _ngZone) {\n    var _this38 = this;\n\n    _classCallCheck(this, NgbModalStack);\n\n    this._applicationRef = _applicationRef;\n    this._injector = _injector;\n    this._document = _document;\n    this._scrollBar = _scrollBar;\n    this._rendererFactory = _rendererFactory;\n    this._ngZone = _ngZone;\n    this._activeWindowCmptHasChanged = new Subject();\n    this._ariaHiddenValues = new Map();\n    this._backdropAttributes = ['animation', 'backdropClass'];\n    this._modalRefs = [];\n    this._windowAttributes = ['animation', 'ariaLabelledBy', 'ariaDescribedBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass', 'modalDialogClass'];\n    this._windowCmpts = [];\n    this._activeInstances = new EventEmitter(); // Trap focus on active WindowCmpt\n\n    this._activeWindowCmptHasChanged.subscribe(function () {\n      if (_this38._windowCmpts.length) {\n        var activeWindowCmpt = _this38._windowCmpts[_this38._windowCmpts.length - 1];\n        ngbFocusTrap(_this38._ngZone, activeWindowCmpt.location.nativeElement, _this38._activeWindowCmptHasChanged);\n\n        _this38._revertAriaHidden();\n\n        _this38._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  _createClass(NgbModalStack, [{\n    key: \"open\",\n    value: function open(moduleCFR, contentInjector, content, options) {\n      var _this39 = this;\n\n      var containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n\n      var renderer = this._rendererFactory.createRenderer(null, null);\n\n      var revertPaddingForScrollBar = this._scrollBar.compensate();\n\n      var removeBodyClass = function removeBodyClass() {\n        if (!_this39._modalRefs.length) {\n          renderer.removeClass(_this39._document.body, 'modal-open');\n\n          _this39._revertAriaHidden();\n        }\n      };\n\n      if (!containerEl) {\n        throw new Error(\"The specified modal container \\\"\".concat(options.container || 'body', \"\\\" was not found in the DOM.\"));\n      }\n\n      var activeModal = new NgbActiveModal();\n\n      var contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n      var backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : undefined;\n\n      var windowCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n\n      var ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n      this._registerModalRef(ngbModalRef);\n\n      this._registerWindowCmpt(windowCmptRef);\n\n      ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n      ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n\n      activeModal.close = function (result) {\n        ngbModalRef.close(result);\n      };\n\n      activeModal.dismiss = function (reason) {\n        ngbModalRef.dismiss(reason);\n      };\n\n      this._applyWindowOptions(windowCmptRef.instance, options);\n\n      if (this._modalRefs.length === 1) {\n        renderer.addClass(this._document.body, 'modal-open');\n      }\n\n      if (backdropCmptRef && backdropCmptRef.instance) {\n        this._applyBackdropOptions(backdropCmptRef.instance, options);\n\n        backdropCmptRef.changeDetectorRef.detectChanges();\n      }\n\n      windowCmptRef.changeDetectorRef.detectChanges();\n      return ngbModalRef;\n    }\n  }, {\n    key: \"activeInstances\",\n    get: function get() {\n      return this._activeInstances;\n    }\n  }, {\n    key: \"dismissAll\",\n    value: function dismissAll(reason) {\n      this._modalRefs.forEach(function (ngbModalRef) {\n        return ngbModalRef.dismiss(reason);\n      });\n    }\n  }, {\n    key: \"hasOpenModals\",\n    value: function hasOpenModals() {\n      return this._modalRefs.length > 0;\n    }\n  }, {\n    key: \"_attachBackdrop\",\n    value: function _attachBackdrop(moduleCFR, containerEl) {\n      var backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n      var backdropCmptRef = backdropFactory.create(this._injector);\n\n      this._applicationRef.attachView(backdropCmptRef.hostView);\n\n      containerEl.appendChild(backdropCmptRef.location.nativeElement);\n      return backdropCmptRef;\n    }\n  }, {\n    key: \"_attachWindowComponent\",\n    value: function _attachWindowComponent(moduleCFR, containerEl, contentRef) {\n      var windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n      var windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n\n      this._applicationRef.attachView(windowCmptRef.hostView);\n\n      containerEl.appendChild(windowCmptRef.location.nativeElement);\n      return windowCmptRef;\n    }\n  }, {\n    key: \"_applyWindowOptions\",\n    value: function _applyWindowOptions(windowInstance, options) {\n      this._windowAttributes.forEach(function (optionName) {\n        if (isDefined(options[optionName])) {\n          windowInstance[optionName] = options[optionName];\n        }\n      });\n    }\n  }, {\n    key: \"_applyBackdropOptions\",\n    value: function _applyBackdropOptions(backdropInstance, options) {\n      this._backdropAttributes.forEach(function (optionName) {\n        if (isDefined(options[optionName])) {\n          backdropInstance[optionName] = options[optionName];\n        }\n      });\n    }\n  }, {\n    key: \"_getContentRef\",\n    value: function _getContentRef(moduleCFR, contentInjector, content, activeModal, options) {\n      if (!content) {\n        return new ContentRef([]);\n      } else if (content instanceof TemplateRef) {\n        return this._createFromTemplateRef(content, activeModal);\n      } else if (isString(content)) {\n        return this._createFromString(content);\n      } else {\n        return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n      }\n    }\n  }, {\n    key: \"_createFromTemplateRef\",\n    value: function _createFromTemplateRef(content, activeModal) {\n      var context = {\n        $implicit: activeModal,\n        close: function close(result) {\n          activeModal.close(result);\n        },\n        dismiss: function dismiss(reason) {\n          activeModal.dismiss(reason);\n        }\n      };\n      var viewRef = content.createEmbeddedView(context);\n\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n  }, {\n    key: \"_createFromString\",\n    value: function _createFromString(content) {\n      var component = this._document.createTextNode(\"\".concat(content));\n\n      return new ContentRef([[component]]);\n    }\n  }, {\n    key: \"_createFromComponent\",\n    value: function _createFromComponent(moduleCFR, contentInjector, content, context, options) {\n      var contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n      var modalContentInjector = Injector.create({\n        providers: [{\n          provide: NgbActiveModal,\n          useValue: context\n        }],\n        parent: contentInjector\n      });\n      var componentRef = contentCmptFactory.create(modalContentInjector);\n      var componentNativeEl = componentRef.location.nativeElement;\n\n      if (options.scrollable) {\n        componentNativeEl.classList.add('component-host-scrollable');\n      }\n\n      this._applicationRef.attachView(componentRef.hostView); // FIXME: we should here get rid of the component nativeElement\n      // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n\n\n      return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n  }, {\n    key: \"_setAriaHidden\",\n    value: function _setAriaHidden(element) {\n      var _this40 = this;\n\n      var parent = element.parentElement;\n\n      if (parent && element !== this._document.body) {\n        Array.from(parent.children).forEach(function (sibling) {\n          if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n            _this40._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n\n            sibling.setAttribute('aria-hidden', 'true');\n          }\n        });\n\n        this._setAriaHidden(parent);\n      }\n    }\n  }, {\n    key: \"_revertAriaHidden\",\n    value: function _revertAriaHidden() {\n      this._ariaHiddenValues.forEach(function (value, element) {\n        if (value) {\n          element.setAttribute('aria-hidden', value);\n        } else {\n          element.removeAttribute('aria-hidden');\n        }\n      });\n\n      this._ariaHiddenValues.clear();\n    }\n  }, {\n    key: \"_registerModalRef\",\n    value: function _registerModalRef(ngbModalRef) {\n      var _this41 = this;\n\n      var unregisterModalRef = function unregisterModalRef() {\n        var index = _this41._modalRefs.indexOf(ngbModalRef);\n\n        if (index > -1) {\n          _this41._modalRefs.splice(index, 1);\n\n          _this41._activeInstances.emit(_this41._modalRefs);\n        }\n      };\n\n      this._modalRefs.push(ngbModalRef);\n\n      this._activeInstances.emit(this._modalRefs);\n\n      ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n    }\n  }, {\n    key: \"_registerWindowCmpt\",\n    value: function _registerWindowCmpt(ngbWindowCmpt) {\n      var _this42 = this;\n\n      this._windowCmpts.push(ngbWindowCmpt);\n\n      this._activeWindowCmptHasChanged.next();\n\n      ngbWindowCmpt.onDestroy(function () {\n        var index = _this42._windowCmpts.indexOf(ngbWindowCmpt);\n\n        if (index > -1) {\n          _this42._windowCmpts.splice(index, 1);\n\n          _this42._activeWindowCmptHasChanged.next();\n        }\n      });\n    }\n  }]);\n\n  return NgbModalStack;\n}();\n\nNgbModalStack.ɵfac = function NgbModalStack_Factory(t) {\n  return new (t || NgbModalStack)(ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ScrollBar), ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nNgbModalStack.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModalStack_Factory() {\n    return new NgbModalStack(ɵɵinject(ApplicationRef), ɵɵinject(INJECTOR), ɵɵinject(DOCUMENT), ɵɵinject(ScrollBar), ɵɵinject(RendererFactory2), ɵɵinject(NgZone));\n  },\n  token: NgbModalStack,\n  providedIn: \"root\"\n});\n\nNgbModalStack.ctorParameters = function () {\n  return [{\n    type: ApplicationRef\n  }, {\n    type: Injector\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ScrollBar\n  }, {\n    type: RendererFactory2\n  }, {\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModalStack, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ScrollBar\n    }, {\n      type: ɵngcc0.RendererFactory2\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\r\n * A service for opening modal windows.\r\n *\r\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\r\n * the `.open()` method.\r\n */\n\n\nvar NgbModal = /*#__PURE__*/function () {\n  function NgbModal(_moduleCFR, _injector, _modalStack, _config) {\n    _classCallCheck(this, NgbModal);\n\n    this._moduleCFR = _moduleCFR;\n    this._injector = _injector;\n    this._modalStack = _modalStack;\n    this._config = _config;\n  }\n  /**\r\n   * Opens a new modal window with the specified content and supplied options.\r\n   *\r\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\r\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\r\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\r\n   *\r\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\r\n   */\n\n\n  _createClass(NgbModal, [{\n    key: \"open\",\n    value: function open(content) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var combinedOptions = Object.assign(Object.assign(Object.assign({}, this._config), {\n        animation: this._config.animation\n      }), options);\n      return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n    }\n    /**\r\n     * Returns an observable that holds the active modal instances.\r\n     */\n\n  }, {\n    key: \"activeInstances\",\n    get: function get() {\n      return this._modalStack.activeInstances;\n    }\n    /**\r\n     * Dismisses all currently displayed modal windows with the supplied reason.\r\n     *\r\n     * @since 3.1.0\r\n     */\n\n  }, {\n    key: \"dismissAll\",\n    value: function dismissAll(reason) {\n      this._modalStack.dismissAll(reason);\n    }\n    /**\r\n     * Indicates if there are currently any open modal windows in the application.\r\n     *\r\n     * @since 3.3.0\r\n     */\n\n  }, {\n    key: \"hasOpenModals\",\n    value: function hasOpenModals() {\n      return this._modalStack.hasOpenModals();\n    }\n  }]);\n\n  return NgbModal;\n}();\n\nNgbModal.ɵfac = function NgbModal_Factory(t) {\n  return new (t || NgbModal)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(NgbModalStack), ɵngcc0.ɵɵinject(NgbModalConfig));\n};\n\nNgbModal.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModal_Factory() {\n    return new NgbModal(ɵɵinject(ComponentFactoryResolver), ɵɵinject(INJECTOR), ɵɵinject(NgbModalStack), ɵɵinject(NgbModalConfig));\n  },\n  token: NgbModal,\n  providedIn: \"root\"\n});\n\nNgbModal.ctorParameters = function () {\n  return [{\n    type: ComponentFactoryResolver\n  }, {\n    type: Injector\n  }, {\n    type: NgbModalStack\n  }, {\n    type: NgbModalConfig\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModal, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: NgbModalStack\n    }, {\n      type: NgbModalConfig\n    }];\n  }, null);\n})();\n\nvar NgbModalModule = /*#__PURE__*/_createClass(function NgbModalModule() {\n  _classCallCheck(this, NgbModalModule);\n});\n\nNgbModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbModalModule\n});\nNgbModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbModalModule_Factory(t) {\n    return new (t || NgbModalModule)();\n  },\n  providers: [NgbModal]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbModalModule, {\n    declarations: [NgbModalBackdrop, NgbModalWindow]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModalModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbModalBackdrop, NgbModalWindow],\n      entryComponents: [NgbModalBackdrop, NgbModalWindow],\n      providers: [NgbModal]\n    }]\n  }], null, null);\n})();\n/**\r\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the navs used in the application.\r\n *\r\n * @since 5.2.0\r\n */\n\n\nvar NgbNavConfig = /*#__PURE__*/function () {\n  function NgbNavConfig(_ngbConfig) {\n    _classCallCheck(this, NgbNavConfig);\n\n    this._ngbConfig = _ngbConfig;\n    this.destroyOnHide = true;\n    this.orientation = 'horizontal';\n    this.roles = 'tablist';\n    this.keyboard = false;\n  }\n\n  _createClass(NgbNavConfig, [{\n    key: \"animation\",\n    get: function get() {\n      return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    },\n    set: function set(animation) {\n      this._animation = animation;\n    }\n  }]);\n\n  return NgbNavConfig;\n}();\n\nNgbNavConfig.ɵfac = function NgbNavConfig_Factory(t) {\n  return new (t || NgbNavConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbNavConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbNavConfig_Factory() {\n    return new NgbNavConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbNavConfig,\n  providedIn: \"root\"\n});\n\nNgbNavConfig.ctorParameters = function () {\n  return [{\n    type: NgbConfig\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nvar isValidNavId = function isValidNavId(id) {\n  return isDefined(id) && id !== '';\n};\n\nvar ɵ0$4 = isValidNavId;\nvar navCounter = 0;\n/**\r\n * This directive must be used to wrap content to be displayed in the nav.\r\n *\r\n * @since 5.2.0\r\n */\n\nvar NgbNavContent = /*#__PURE__*/_createClass(function NgbNavContent(templateRef) {\n  _classCallCheck(this, NgbNavContent);\n\n  this.templateRef = templateRef;\n});\n\nNgbNavContent.ɵfac = function NgbNavContent_Factory(t) {\n  return new (t || NgbNavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbNavContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavContent,\n  selectors: [[\"ng-template\", \"ngbNavContent\", \"\"]]\n});\n\nNgbNavContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbNavContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\r\n *\r\n * @since 5.2.0\r\n */\n\n\nvar NgbNavItem = /*#__PURE__*/function () {\n  function NgbNavItem(nav, elementRef) {\n    _classCallCheck(this, NgbNavItem);\n\n    this.elementRef = elementRef;\n    /**\r\n     * If `true`, the current nav item is disabled and can't be toggled by user.\r\n     *\r\n     * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\r\n     */\n\n    this.disabled = false;\n    /**\r\n     * An event emitted when the fade in transition is finished on the related nav content\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.shown = new EventEmitter();\n    /**\r\n     * An event emitted when the fade out transition is finished on the related nav content\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.hidden = new EventEmitter(); // TODO: cf https://github.com/angular/angular/issues/30106\n\n    this._nav = nav;\n  }\n\n  _createClass(NgbNavItem, [{\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n      // only @ContentChildren allows us to specify the {descendants: false} option.\n      // Without {descendants: false} we are hitting bugs described in:\n      // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n      this.contentTpl = this.contentTpls.first;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (!isDefined(this.domId)) {\n        this.domId = \"ngb-nav-\".concat(navCounter++);\n      }\n    }\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._nav.activeId === this.id;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return isValidNavId(this._id) ? this._id : this.domId;\n    }\n  }, {\n    key: \"panelDomId\",\n    get: function get() {\n      return \"\".concat(this.domId, \"-panel\");\n    }\n  }, {\n    key: \"isPanelInDom\",\n    value: function isPanelInDom() {\n      return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n    }\n  }]);\n\n  return NgbNavItem;\n}();\n\nNgbNavItem.ɵfac = function NgbNavItem_Factory(t) {\n  return new (t || NgbNavItem)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbNav;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbNavItem.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavItem,\n  selectors: [[\"\", \"ngbNavItem\", \"\"]],\n  contentQueries: function NgbNavItem_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbNavContent, 0);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbNavItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"nav-item\", true);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    domId: \"domId\",\n    destroyOnHide: \"destroyOnHide\",\n    _id: [\"ngbNavItem\", \"_id\"]\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbNavItem\"]\n});\n\nNgbNavItem.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbNav;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }];\n};\n\nNgbNavItem.propDecorators = {\n  destroyOnHide: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  domId: [{\n    type: Input\n  }],\n  _id: [{\n    type: Input,\n    args: ['ngbNavItem']\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }],\n  contentTpls: [{\n    type: ContentChildren,\n    args: [NgbNavContent, {\n      descendants: false\n    }]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavItem]',\n      exportAs: 'ngbNavItem',\n      host: {\n        '[class.nav-item]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbNav;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    domId: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    _id: [{\n      type: Input,\n      args: ['ngbNavItem']\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbNavContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/**\r\n * A nav directive that helps with implementing tabbed navigation components.\r\n *\r\n * @since 5.2.0\r\n */\n\n\nvar NgbNav = /*#__PURE__*/function () {\n  function NgbNav(role, config, _cd, _document) {\n    _classCallCheck(this, NgbNav);\n\n    this.role = role;\n    this._cd = _cd;\n    this._document = _document;\n    /**\r\n     * The event emitted after the active nav changes\r\n     * The payload of the event is the newly active nav id\r\n     *\r\n     * If you want to prevent nav change, you should use `(navChange)` event\r\n     */\n\n    this.activeIdChange = new EventEmitter();\n    /**\r\n     * An event emitted when the fade in transition is finished for one of the items.\r\n     *\r\n     * Payload of the event is the nav id that was just shown.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.shown = new EventEmitter();\n    /**\r\n     * An event emitted when the fade out transition is finished for one of the items.\r\n     *\r\n     * Payload of the event is the nav id that was just hidden.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.hidden = new EventEmitter();\n    this.destroy$ = new Subject();\n    this.navItemChange$ = new Subject();\n    /**\r\n     * The nav change event emitted right before the nav change happens on user click.\r\n     *\r\n     * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\r\n     *\r\n     * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\r\n     */\n\n    this.navChange = new EventEmitter();\n    this.animation = config.animation;\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n    this.keyboard = config.keyboard;\n  }\n\n  _createClass(NgbNav, [{\n    key: \"click\",\n    value: function click(item) {\n      if (!item.disabled) {\n        this._updateActiveId(item.id);\n      }\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      var _this43 = this;\n\n      if (this.roles !== 'tablist' || !this.keyboard) {\n        return;\n      } // tslint:disable-next-line: deprecation\n\n\n      var key = event.which;\n      var enabledLinks = this.links.filter(function (link) {\n        return !link.navItem.disabled;\n      });\n      var length = enabledLinks.length;\n      var position = -1;\n      enabledLinks.forEach(function (link, index) {\n        if (link.elRef.nativeElement === _this43._document.activeElement) {\n          position = index;\n        }\n      });\n\n      if (length) {\n        switch (key) {\n          case Key.ArrowLeft:\n            if (this.orientation === 'vertical') {\n              return;\n            }\n\n            position = (position - 1 + length) % length;\n            break;\n\n          case Key.ArrowRight:\n            if (this.orientation === 'vertical') {\n              return;\n            }\n\n            position = (position + 1) % length;\n            break;\n\n          case Key.ArrowDown:\n            if (this.orientation === 'horizontal') {\n              return;\n            }\n\n            position = (position + 1) % length;\n            break;\n\n          case Key.ArrowUp:\n            if (this.orientation === 'horizontal') {\n              return;\n            }\n\n            position = (position - 1 + length) % length;\n            break;\n\n          case Key.Home:\n            position = 0;\n            break;\n\n          case Key.End:\n            position = length - 1;\n            break;\n        }\n\n        if (this.keyboard === 'changeWithArrows') {\n          this.select(enabledLinks[position].navItem.id);\n        }\n\n        enabledLinks[position].elRef.nativeElement.focus();\n        event.preventDefault();\n      }\n    }\n    /**\r\n     * Selects the nav with the given id and shows its associated pane.\r\n     * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\r\n     */\n\n  }, {\n    key: \"select\",\n    value: function select(id) {\n      this._updateActiveId(id, false);\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this44 = this;\n\n      if (!isDefined(this.activeId)) {\n        var _nextId = this.items.first ? this.items.first.id : null;\n\n        if (isValidNavId(_nextId)) {\n          this._updateActiveId(_nextId, false);\n\n          this._cd.detectChanges();\n        }\n      }\n\n      this.items.changes.pipe(takeUntil(this.destroy$)).subscribe(function () {\n        return _this44._notifyItemChanged(_this44.activeId);\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_ref24) {\n      var activeId = _ref24.activeId;\n\n      if (activeId && !activeId.firstChange) {\n        this._notifyItemChanged(activeId.currentValue);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n    }\n  }, {\n    key: \"_updateActiveId\",\n    value: function _updateActiveId(nextId) {\n      var emitNavChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (this.activeId !== nextId) {\n        var defaultPrevented = false;\n\n        if (emitNavChange) {\n          this.navChange.emit({\n            activeId: this.activeId,\n            nextId: nextId,\n            preventDefault: function preventDefault() {\n              defaultPrevented = true;\n            }\n          });\n        }\n\n        if (!defaultPrevented) {\n          this.activeId = nextId;\n          this.activeIdChange.emit(nextId);\n\n          this._notifyItemChanged(nextId);\n        }\n      }\n    }\n  }, {\n    key: \"_notifyItemChanged\",\n    value: function _notifyItemChanged(nextItemId) {\n      this.navItemChange$.next(this._getItemById(nextItemId));\n    }\n  }, {\n    key: \"_getItemById\",\n    value: function _getItemById(itemId) {\n      return this.items && this.items.find(function (item) {\n        return item.id === itemId;\n      }) || null;\n    }\n  }]);\n\n  return NgbNav;\n}();\n\nNgbNav.ɵfac = function NgbNav_Factory(t) {\n  return new (t || NgbNav)(ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(NgbNavConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nNgbNav.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNav,\n  selectors: [[\"\", \"ngbNav\", \"\"]],\n  contentQueries: function NgbNav_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbNavItem, 0);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbNavLink, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.links = _t);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function NgbNav_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown.arrowLeft\", function NgbNav_keydown_arrowLeft_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.arrowRight\", function NgbNav_keydown_arrowRight_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.arrowDown\", function NgbNav_keydown_arrowDown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.arrowUp\", function NgbNav_keydown_arrowUp_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.Home\", function NgbNav_keydown_Home_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.End\", function NgbNav_keydown_End_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.orientation === \"vertical\" && ctx.roles === \"tablist\" ? \"vertical\" : undefined)(\"role\", ctx.role ? ctx.role : ctx.roles ? \"tablist\" : undefined);\n      ɵngcc0.ɵɵclassProp(\"nav\", true)(\"flex-column\", ctx.orientation === \"vertical\");\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    destroyOnHide: \"destroyOnHide\",\n    orientation: \"orientation\",\n    roles: \"roles\",\n    keyboard: \"keyboard\",\n    activeId: \"activeId\"\n  },\n  outputs: {\n    activeIdChange: \"activeIdChange\",\n    shown: \"shown\",\n    hidden: \"hidden\",\n    navChange: \"navChange\"\n  },\n  exportAs: [\"ngbNav\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbNav.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['role']\n    }]\n  }, {\n    type: NgbNavConfig\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nNgbNav.propDecorators = {\n  activeId: [{\n    type: Input\n  }],\n  activeIdChange: [{\n    type: Output\n  }],\n  animation: [{\n    type: Input\n  }],\n  destroyOnHide: [{\n    type: Input\n  }],\n  orientation: [{\n    type: Input\n  }],\n  roles: [{\n    type: Input\n  }],\n  keyboard: [{\n    type: Input\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }],\n  items: [{\n    type: ContentChildren,\n    args: [NgbNavItem]\n  }],\n  links: [{\n    type: ContentChildren,\n    args: [forwardRef(function () {\n      return NgbNavLink;\n    }), {\n      descendants: true\n    }]\n  }],\n  navChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNav, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNav]',\n      exportAs: 'ngbNav',\n      host: {\n        '[class.nav]': 'true',\n        '[class.flex-column]': \"orientation === 'vertical'\",\n        '[attr.aria-orientation]': \"orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined\",\n        '[attr.role]': \"role ? role : roles ? 'tablist' : undefined\",\n        '(keydown.arrowLeft)': 'onKeyDown($event)',\n        '(keydown.arrowRight)': 'onKeyDown($event)',\n        '(keydown.arrowDown)': 'onKeyDown($event)',\n        '(keydown.arrowUp)': 'onKeyDown($event)',\n        '(keydown.Home)': 'onKeyDown($event)',\n        '(keydown.End)': 'onKeyDown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    activeIdChange: [{\n      type: Output\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    navChange: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roles: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    activeId: [{\n      type: Input\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [NgbNavItem]\n    }],\n    links: [{\n      type: ContentChildren,\n      args: [forwardRef(function () {\n        return NgbNavLink;\n      }), {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\r\n * A directive to put on the nav link.\r\n *\r\n * @since 5.2.0\r\n */\n\n\nvar NgbNavLink = /*#__PURE__*/function () {\n  function NgbNavLink(role, navItem, nav, elRef) {\n    _classCallCheck(this, NgbNavLink);\n\n    this.role = role;\n    this.navItem = navItem;\n    this.nav = nav;\n    this.elRef = elRef;\n  }\n\n  _createClass(NgbNavLink, [{\n    key: \"hasNavItemClass\",\n    value: function hasNavItemClass() {\n      // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n      return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n    }\n  }]);\n\n  return NgbNavLink;\n}();\n\nNgbNavLink.ɵfac = function NgbNavLink_Factory(t) {\n  return new (t || NgbNavLink)(ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(NgbNavItem), ɵngcc0.ɵɵdirectiveInject(NgbNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbNavLink.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavLink,\n  selectors: [[\"a\", \"ngbNavLink\", \"\"]],\n  hostAttrs: [\"href\", \"\"],\n  hostVars: 14,\n  hostBindings: function NgbNavLink_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbNavLink_click_HostBindingHandler($event) {\n        ctx.nav.click(ctx.navItem);\n        return $event.preventDefault();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.navItem.domId);\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tab\" : undefined)(\"tabindex\", ctx.navItem.disabled ? -1 : undefined)(\"aria-controls\", ctx.navItem.isPanelInDom() ? ctx.navItem.panelDomId : null)(\"aria-selected\", ctx.navItem.active)(\"aria-disabled\", ctx.navItem.disabled);\n      ɵngcc0.ɵɵclassProp(\"nav-link\", true)(\"nav-item\", ctx.hasNavItemClass())(\"active\", ctx.navItem.active)(\"disabled\", ctx.navItem.disabled);\n    }\n  }\n});\n\nNgbNavLink.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['role']\n    }]\n  }, {\n    type: NgbNavItem\n  }, {\n    type: NgbNav\n  }, {\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavLink, [{\n    type: Directive,\n    args: [{\n      selector: 'a[ngbNavLink]',\n      host: {\n        '[id]': 'navItem.domId',\n        '[class.nav-link]': 'true',\n        '[class.nav-item]': 'hasNavItemClass()',\n        '[attr.role]': \"role ? role : nav.roles ? 'tab' : undefined\",\n        'href': '',\n        '[class.active]': 'navItem.active',\n        '[class.disabled]': 'navItem.disabled',\n        '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n        '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n        '[attr.aria-selected]': 'navItem.active',\n        '[attr.aria-disabled]': 'navItem.disabled',\n        '(click)': 'nav.click(navItem); $event.preventDefault()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavItem\n    }, {\n      type: NgbNav\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n\nvar ngbNavFadeOutTransition = function ngbNavFadeOutTransition(_ref25) {\n  var classList = _ref25.classList;\n  classList.remove('show');\n  return function () {\n    return classList.remove('active');\n  };\n};\n\nvar ngbNavFadeInTransition = function ngbNavFadeInTransition(element, animation) {\n  if (animation) {\n    reflow(element);\n  }\n\n  element.classList.add('show');\n};\n\nvar NgbNavPane = /*#__PURE__*/_createClass(function NgbNavPane(elRef) {\n  _classCallCheck(this, NgbNavPane);\n\n  this.elRef = elRef;\n});\n\nNgbNavPane.ɵfac = function NgbNavPane_Factory(t) {\n  return new (t || NgbNavPane)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbNavPane.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavPane,\n  selectors: [[\"\", \"ngbNavPane\", \"\"]],\n  hostAttrs: [1, \"tab-pane\"],\n  hostVars: 5,\n  hostBindings: function NgbNavPane_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.item.panelDomId);\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tabpanel\" : undefined)(\"aria-labelledby\", ctx.item.domId);\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.nav.animation);\n    }\n  },\n  inputs: {\n    item: \"item\",\n    nav: \"nav\",\n    role: \"role\"\n  }\n});\n\nNgbNavPane.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nNgbNavPane.propDecorators = {\n  item: [{\n    type: Input\n  }],\n  nav: [{\n    type: Input\n  }],\n  role: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavPane, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavPane]',\n      host: {\n        '[id]': 'item.panelDomId',\n        'class': 'tab-pane',\n        '[class.fade]': 'nav.animation',\n        '[attr.role]': 'role ? role : nav.roles ? \"tabpanel\" : undefined',\n        '[attr.aria-labelledby]': 'item.domId'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    item: [{\n      type: Input\n    }],\n    nav: [{\n      type: Input\n    }],\n    role: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * The outlet where currently active nav content will be displayed.\r\n *\r\n * @since 5.2.0\r\n */\n\n\nvar NgbNavOutlet = /*#__PURE__*/function () {\n  function NgbNavOutlet(_cd, _ngZone) {\n    _classCallCheck(this, NgbNavOutlet);\n\n    this._cd = _cd;\n    this._ngZone = _ngZone;\n    this._activePane = null;\n  }\n\n  _createClass(NgbNavOutlet, [{\n    key: \"isPanelTransitioning\",\n    value: function isPanelTransitioning(item) {\n      var _a;\n\n      return ((_a = this._activePane) === null || _a === void 0 ? void 0 : _a.item) === item;\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this45 = this;\n\n      var _a; // initial display\n\n\n      this._updateActivePane(); // this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\n\n\n      this.nav.navItemChange$.pipe(takeUntil(this.nav.destroy$), startWith(((_a = this._activePane) === null || _a === void 0 ? void 0 : _a.item) || null), distinctUntilChanged(), skip(1)).subscribe(function (nextItem) {\n        var options = {\n          animation: _this45.nav.animation,\n          runningTransition: 'stop'\n        }; // next panel we're switching to will only appear in DOM after the change detection is done\n        // and `this._panes` will be updated\n\n        _this45._cd.detectChanges(); // fading out\n\n\n        if (_this45._activePane) {\n          ngbRunTransition(_this45._ngZone, _this45._activePane.elRef.nativeElement, ngbNavFadeOutTransition, options).subscribe(function () {\n            var _a;\n\n            var activeItem = (_a = _this45._activePane) === null || _a === void 0 ? void 0 : _a.item;\n            _this45._activePane = _this45._getPaneForItem(nextItem); // mark for check when transition finishes as outlet or parent containers might be OnPush\n            // without this the panes that have \"faded out\" will stay in DOM\n\n            _this45._cd.markForCheck(); // fading in\n\n\n            if (_this45._activePane) {\n              // we have to add the '.active' class before running the transition,\n              // because it should be in place before `ngbRunTransition` does `reflow()`\n              _this45._activePane.elRef.nativeElement.classList.add('active');\n\n              ngbRunTransition(_this45._ngZone, _this45._activePane.elRef.nativeElement, ngbNavFadeInTransition, options).subscribe(function () {\n                if (nextItem) {\n                  nextItem.shown.emit();\n\n                  _this45.nav.shown.emit(nextItem.id);\n                }\n              });\n            }\n\n            if (activeItem) {\n              activeItem.hidden.emit();\n\n              _this45.nav.hidden.emit(activeItem.id);\n            }\n          });\n        } else {\n          _this45._updateActivePane();\n        }\n      });\n    }\n  }, {\n    key: \"_updateActivePane\",\n    value: function _updateActivePane() {\n      var _a, _b;\n\n      this._activePane = this._getActivePane();\n      (_a = this._activePane) === null || _a === void 0 ? void 0 : _a.elRef.nativeElement.classList.add('show');\n      (_b = this._activePane) === null || _b === void 0 ? void 0 : _b.elRef.nativeElement.classList.add('active');\n    }\n  }, {\n    key: \"_getPaneForItem\",\n    value: function _getPaneForItem(item) {\n      return this._panes && this._panes.find(function (pane) {\n        return pane.item === item;\n      }) || null;\n    }\n  }, {\n    key: \"_getActivePane\",\n    value: function _getActivePane() {\n      return this._panes && this._panes.find(function (pane) {\n        return pane.item.active;\n      }) || null;\n    }\n  }]);\n\n  return NgbNavOutlet;\n}();\n\nNgbNavOutlet.ɵfac = function NgbNavOutlet_Factory(t) {\n  return new (t || NgbNavOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNgbNavOutlet.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbNavOutlet,\n  selectors: [[\"\", \"ngbNavOutlet\", \"\"]],\n  viewQuery: function NgbNavOutlet_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(NgbNavPane, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._panes = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbNavOutlet_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"tab-content\", true);\n    }\n  },\n  inputs: {\n    paneRole: \"paneRole\",\n    nav: [\"ngbNavOutlet\", \"nav\"]\n  },\n  attrs: _c32,\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [\"ngbNavPane\", \"\", 3, \"item\", \"nav\", \"role\", 4, \"ngIf\"], [\"ngbNavPane\", \"\", 3, \"item\", \"nav\", \"role\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbNavOutlet_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_Template, 1, 1, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.nav.items);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, NgbNavPane, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbNavOutlet.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NgZone\n  }];\n};\n\nNgbNavOutlet.propDecorators = {\n  _panes: [{\n    type: ViewChildren,\n    args: [NgbNavPane]\n  }],\n  paneRole: [{\n    type: Input\n  }],\n  nav: [{\n    type: Input,\n    args: ['ngbNavOutlet']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavOutlet, [{\n    type: Component,\n    args: [{\n      selector: '[ngbNavOutlet]',\n      host: {\n        '[class.tab-content]': 'true'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <ng-template ngFor let-item [ngForOf]=\\\"nav.items\\\">\\n      <div ngbNavPane *ngIf=\\\"item.isPanelInDom() || isPanelTransitioning(item)\\\" [item]=\\\"item\\\" [nav]=\\\"nav\\\" [role]=\\\"paneRole\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"item.contentTpl?.templateRef || null\\\"\\n                     [ngTemplateOutletContext]=\\\"{$implicit: item.active || isPanelTransitioning(item)}\\\"></ng-template>\\n      </div>\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    _panes: [{\n      type: ViewChildren,\n      args: [NgbNavPane]\n    }],\n    paneRole: [{\n      type: Input\n    }],\n    nav: [{\n      type: Input,\n      args: ['ngbNavOutlet']\n    }]\n  });\n})();\n\nvar NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane];\n\nvar NgbNavModule = /*#__PURE__*/_createClass(function NgbNavModule() {\n  _classCallCheck(this, NgbNavModule);\n});\n\nNgbNavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbNavModule\n});\nNgbNavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbNavModule_Factory(t) {\n    return new (t || NgbNavModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbNavModule, {\n    declarations: function declarations() {\n      return [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbNavModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_NAV_DIRECTIVES,\n      exports: NGB_NAV_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the paginations used in the application.\r\n */\n\n\nvar NgbPaginationConfig = /*#__PURE__*/_createClass(function NgbPaginationConfig() {\n  _classCallCheck(this, NgbPaginationConfig);\n\n  this.disabled = false;\n  this.boundaryLinks = false;\n  this.directionLinks = true;\n  this.ellipses = true;\n  this.maxSize = 0;\n  this.pageSize = 10;\n  this.rotate = false;\n});\n\nNgbPaginationConfig.ɵfac = function NgbPaginationConfig_Factory(t) {\n  return new (t || NgbPaginationConfig)();\n};\n\nNgbPaginationConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbPaginationConfig_Factory() {\n    return new NgbPaginationConfig();\n  },\n  token: NgbPaginationConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\r\n * A directive to match the 'ellipsis' link template\r\n *\r\n * @since 4.1.0\r\n */\n\n\nvar NgbPaginationEllipsis = /*#__PURE__*/_createClass(function NgbPaginationEllipsis(templateRef) {\n  _classCallCheck(this, NgbPaginationEllipsis);\n\n  this.templateRef = templateRef;\n});\n\nNgbPaginationEllipsis.ɵfac = function NgbPaginationEllipsis_Factory(t) {\n  return new (t || NgbPaginationEllipsis)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationEllipsis.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationEllipsis,\n  selectors: [[\"ng-template\", \"ngbPaginationEllipsis\", \"\"]]\n});\n\nNgbPaginationEllipsis.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationEllipsis, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationEllipsis]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * A directive to match the 'first' link template\r\n *\r\n * @since 4.1.0\r\n */\n\n\nvar NgbPaginationFirst = /*#__PURE__*/_createClass(function NgbPaginationFirst(templateRef) {\n  _classCallCheck(this, NgbPaginationFirst);\n\n  this.templateRef = templateRef;\n});\n\nNgbPaginationFirst.ɵfac = function NgbPaginationFirst_Factory(t) {\n  return new (t || NgbPaginationFirst)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationFirst.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationFirst,\n  selectors: [[\"ng-template\", \"ngbPaginationFirst\", \"\"]]\n});\n\nNgbPaginationFirst.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationFirst, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationFirst]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * A directive to match the 'last' link template\r\n *\r\n * @since 4.1.0\r\n */\n\n\nvar NgbPaginationLast = /*#__PURE__*/_createClass(function NgbPaginationLast(templateRef) {\n  _classCallCheck(this, NgbPaginationLast);\n\n  this.templateRef = templateRef;\n});\n\nNgbPaginationLast.ɵfac = function NgbPaginationLast_Factory(t) {\n  return new (t || NgbPaginationLast)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationLast.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationLast,\n  selectors: [[\"ng-template\", \"ngbPaginationLast\", \"\"]]\n});\n\nNgbPaginationLast.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationLast, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationLast]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * A directive to match the 'next' link template\r\n *\r\n * @since 4.1.0\r\n */\n\n\nvar NgbPaginationNext = /*#__PURE__*/_createClass(function NgbPaginationNext(templateRef) {\n  _classCallCheck(this, NgbPaginationNext);\n\n  this.templateRef = templateRef;\n});\n\nNgbPaginationNext.ɵfac = function NgbPaginationNext_Factory(t) {\n  return new (t || NgbPaginationNext)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationNext.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationNext,\n  selectors: [[\"ng-template\", \"ngbPaginationNext\", \"\"]]\n});\n\nNgbPaginationNext.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationNext, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNext]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * A directive to match the page 'number' link template\r\n *\r\n * @since 4.1.0\r\n */\n\n\nvar NgbPaginationNumber = /*#__PURE__*/_createClass(function NgbPaginationNumber(templateRef) {\n  _classCallCheck(this, NgbPaginationNumber);\n\n  this.templateRef = templateRef;\n});\n\nNgbPaginationNumber.ɵfac = function NgbPaginationNumber_Factory(t) {\n  return new (t || NgbPaginationNumber)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationNumber.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationNumber,\n  selectors: [[\"ng-template\", \"ngbPaginationNumber\", \"\"]]\n});\n\nNgbPaginationNumber.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationNumber, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNumber]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * A directive to match the 'previous' link template\r\n *\r\n * @since 4.1.0\r\n */\n\n\nvar NgbPaginationPrevious = /*#__PURE__*/_createClass(function NgbPaginationPrevious(templateRef) {\n  _classCallCheck(this, NgbPaginationPrevious);\n\n  this.templateRef = templateRef;\n});\n\nNgbPaginationPrevious.ɵfac = function NgbPaginationPrevious_Factory(t) {\n  return new (t || NgbPaginationPrevious)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationPrevious,\n  selectors: [[\"ng-template\", \"ngbPaginationPrevious\", \"\"]]\n});\n\nNgbPaginationPrevious.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationPrevious]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * A directive to match the 'pages' whole content\r\n *\r\n * @since 9.1.0\r\n */\n\n\nvar NgbPaginationPages = /*#__PURE__*/_createClass(function NgbPaginationPages(templateRef) {\n  _classCallCheck(this, NgbPaginationPages);\n\n  this.templateRef = templateRef;\n});\n\nNgbPaginationPages.ɵfac = function NgbPaginationPages_Factory(t) {\n  return new (t || NgbPaginationPages)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationPages.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationPages,\n  selectors: [[\"ng-template\", \"ngbPaginationPages\", \"\"]]\n});\n\nNgbPaginationPages.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationPages, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationPages]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\r\n * A component that displays page numbers and allows to customize them in several ways.\r\n */\n\n\nvar NgbPagination = /*#__PURE__*/function () {\n  function NgbPagination(config) {\n    _classCallCheck(this, NgbPagination);\n\n    this.pageCount = 0;\n    this.pages = [];\n    /**\r\n     *  The current page.\r\n     *\r\n     *  Page numbers start with `1`.\r\n     */\n\n    this.page = 1;\n    /**\r\n     *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\r\n     *\r\n     *  Event payload is the number of the newly selected page.\r\n     *\r\n     *  Page numbers start with `1`.\r\n     */\n\n    this.pageChange = new EventEmitter(true);\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  _createClass(NgbPagination, [{\n    key: \"hasPrevious\",\n    value: function hasPrevious() {\n      return this.page > 1;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.page < this.pageCount;\n    }\n  }, {\n    key: \"nextDisabled\",\n    value: function nextDisabled() {\n      return !this.hasNext() || this.disabled;\n    }\n  }, {\n    key: \"previousDisabled\",\n    value: function previousDisabled() {\n      return !this.hasPrevious() || this.disabled;\n    }\n  }, {\n    key: \"selectPage\",\n    value: function selectPage(pageNumber) {\n      this._updatePages(pageNumber);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this._updatePages(this.page);\n    }\n  }, {\n    key: \"isEllipsis\",\n    value: function isEllipsis(pageNumber) {\n      return pageNumber === -1;\n    }\n    /**\r\n     * Appends ellipses and first/last page number to the displayed pages\r\n     */\n\n  }, {\n    key: \"_applyEllipses\",\n    value: function _applyEllipses(start, end) {\n      if (this.ellipses) {\n        if (start > 0) {\n          // The first page will always be included. If the displayed range\n          // starts after the third page, then add ellipsis. But if the range\n          // starts on the third page, then add the second page instead of\n          // an ellipsis, because the ellipsis would only hide a single page.\n          if (start > 2) {\n            this.pages.unshift(-1);\n          } else if (start === 2) {\n            this.pages.unshift(2);\n          }\n\n          this.pages.unshift(1);\n        }\n\n        if (end < this.pageCount) {\n          // The last page will always be included. If the displayed range\n          // ends before the third-last page, then add ellipsis. But if the range\n          // ends on third-last page, then add the second-last page instead of\n          // an ellipsis, because the ellipsis would only hide a single page.\n          if (end < this.pageCount - 2) {\n            this.pages.push(-1);\n          } else if (end === this.pageCount - 2) {\n            this.pages.push(this.pageCount - 1);\n          }\n\n          this.pages.push(this.pageCount);\n        }\n      }\n    }\n    /**\r\n     * Rotates page numbers based on maxSize items visible.\r\n     * Currently selected page stays in the middle:\r\n     *\r\n     * Ex. for selected page = 6:\r\n     * [5,*6*,7] for maxSize = 3\r\n     * [4,5,*6*,7] for maxSize = 4\r\n     */\n\n  }, {\n    key: \"_applyRotation\",\n    value: function _applyRotation() {\n      var start = 0;\n      var end = this.pageCount;\n      var leftOffset = Math.floor(this.maxSize / 2);\n      var rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n      if (this.page <= leftOffset) {\n        // very beginning, no rotation -> [0..maxSize]\n        end = this.maxSize;\n      } else if (this.pageCount - this.page < leftOffset) {\n        // very end, no rotation -> [len-maxSize..len]\n        start = this.pageCount - this.maxSize;\n      } else {\n        // rotate\n        start = this.page - leftOffset - 1;\n        end = this.page + rightOffset;\n      }\n\n      return [start, end];\n    }\n    /**\r\n     * Paginates page numbers based on maxSize items per page.\r\n     */\n\n  }, {\n    key: \"_applyPagination\",\n    value: function _applyPagination() {\n      var page = Math.ceil(this.page / this.maxSize) - 1;\n      var start = page * this.maxSize;\n      var end = start + this.maxSize;\n      return [start, end];\n    }\n  }, {\n    key: \"_setPageInRange\",\n    value: function _setPageInRange(newPageNo) {\n      var prevPageNo = this.page;\n      this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n      if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n        this.pageChange.emit(this.page);\n      }\n    }\n  }, {\n    key: \"_updatePages\",\n    value: function _updatePages(newPage) {\n      this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n      if (!isNumber(this.pageCount)) {\n        this.pageCount = 0;\n      } // fill-in model needed to render pages\n\n\n      this.pages.length = 0;\n\n      for (var i = 1; i <= this.pageCount; i++) {\n        this.pages.push(i);\n      } // set page within 1..max range\n\n\n      this._setPageInRange(newPage); // apply maxSize if necessary\n\n\n      if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n        var start = 0;\n        var end = this.pageCount; // either paginating or rotating page numbers\n\n        if (this.rotate) {\n          var _this$_applyRotation = this._applyRotation();\n\n          var _this$_applyRotation2 = _slicedToArray(_this$_applyRotation, 2);\n\n          start = _this$_applyRotation2[0];\n          end = _this$_applyRotation2[1];\n        } else {\n          var _this$_applyPaginatio = this._applyPagination();\n\n          var _this$_applyPaginatio2 = _slicedToArray(_this$_applyPaginatio, 2);\n\n          start = _this$_applyPaginatio2[0];\n          end = _this$_applyPaginatio2[1];\n        }\n\n        this.pages = this.pages.slice(start, end); // adding ellipses\n\n        this._applyEllipses(start, end);\n      }\n    }\n  }]);\n\n  return NgbPagination;\n}();\n\nNgbPagination.ɵfac = function NgbPagination_Factory(t) {\n  return new (t || NgbPagination)(ɵngcc0.ɵɵdirectiveInject(NgbPaginationConfig));\n};\n\nNgbPagination.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbPagination,\n  selectors: [[\"ngb-pagination\"]],\n  contentQueries: function NgbPagination_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationEllipsis, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationFirst, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationLast, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationNext, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationNumber, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationPrevious, 1);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationPages, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplEllipsis = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplFirst = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplLast = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplNext = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplNumber = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplPrevious = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplPages = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"navigation\"],\n  inputs: {\n    page: \"page\",\n    disabled: \"disabled\",\n    boundaryLinks: \"boundaryLinks\",\n    directionLinks: \"directionLinks\",\n    ellipses: \"ellipses\",\n    maxSize: \"maxSize\",\n    pageSize: \"pageSize\",\n    rotate: \"rotate\",\n    size: \"size\",\n    collectionSize: \"collectionSize\"\n  },\n  outputs: {\n    pageChange: \"pageChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 20,\n  vars: 12,\n  consts: function consts() {\n    var i18n_34;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__35 = goog.getMsg(\"\\xAB\\xAB\");\n      i18n_34 = MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__35;\n    } else {\n      i18n_34 = $localize(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral([\":@@ngb.pagination.first\\u241F656506dfd46380956a655f919f1498d018f75ca0\\u241F6867721956102594380:\\xAB\\xAB\"])));\n    }\n\n    var i18n_36;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__37 = goog.getMsg(\"\\xAB\");\n      i18n_36 = MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__37;\n    } else {\n      i18n_36 = $localize(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral([\":@@ngb.pagination.previous\\u241F6e52b6ee77a4848d899dd21b591c6fd499e3aef3\\u241F6479320895410098858:\\xAB\"])));\n    }\n\n    var i18n_38;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__39 = goog.getMsg(\"\\xBB\");\n      i18n_38 = MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__39;\n    } else {\n      i18n_38 = $localize(_templateObject15 || (_templateObject15 = _taggedTemplateLiteral([\":@@ngb.pagination.next\\u241Fba9cbb4ff311464308a3627e4f1c3345d9fe6d7d\\u241F5458177150283468089:\\xBB\"])));\n    }\n\n    var i18n_40;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__41 = goog.getMsg(\"\\xBB\\xBB\");\n      i18n_40 = MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__41;\n    } else {\n      i18n_40 = $localize(_templateObject16 || (_templateObject16 = _taggedTemplateLiteral([\":@@ngb.pagination.last\\u241F49f27a460bc97e7e00be5b37098bfa79884fc7d9\\u241F5277020320267646988:\\xBB\\xBB\"])));\n    }\n\n    var i18n_44;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__45 = goog.getMsg(\"First\");\n      i18n_44 = MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__45;\n    } else {\n      i18n_44 = $localize(_templateObject17 || (_templateObject17 = _taggedTemplateLiteral([\":@@ngb.pagination.first-aria\\u241Ff2f852318759c6396b5d3d17031d53817d7b38cc\\u241F2241508602425256033:First\"])));\n    }\n\n    var i18n_47;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__48 = goog.getMsg(\"Previous\");\n      i18n_47 = MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__48;\n    } else {\n      i18n_47 = $localize(_templateObject18 || (_templateObject18 = _taggedTemplateLiteral([\":@@ngb.pagination.previous-aria\\u241F680d5c75b7fd8d37961083608b9fcdc4167b4c43\\u241F4452427314943113135:Previous\"])));\n    }\n\n    var i18n_50;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__51 = goog.getMsg(\"Next\");\n      i18n_50 = MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__51;\n    } else {\n      i18n_50 = $localize(_templateObject19 || (_templateObject19 = _taggedTemplateLiteral([\":@@ngb.pagination.next-aria\\u241Ff732c304c7433e5a83ffcd862c3dce709a0f4982\\u241F3885497195825665706:Next\"])));\n    }\n\n    var i18n_52;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__53 = goog.getMsg(\"Last\");\n      i18n_52 = MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__53;\n    } else {\n      i18n_52 = $localize(_templateObject20 || (_templateObject20 = _taggedTemplateLiteral([\":@@ngb.pagination.last-aria\\u241F5c729788ba138508aca1bec050b610f7bf81db3e\\u241F4882268002141858767:Last\"])));\n    }\n\n    return [[\"first\", \"\"], [\"previous\", \"\"], [\"next\", \"\"], [\"last\", \"\"], [\"ellipsis\", \"\"], [\"defaultNumber\", \"\"], [\"defaultPages\", \"\"], [\"class\", \"page-item\", 3, \"disabled\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-hidden\", \"true\"], i18n_34, i18n_36, i18n_38, i18n_40, [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"sr-only\"], [\"class\", \"page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [1, \"page-item\"], [\"class\", \"page-link\", \"tabindex\", \"-1\", \"aria-disabled\", \"true\", 4, \"ngIf\"], [\"class\", \"page-link\", \"href\", \"\", 3, \"click\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"aria-disabled\", \"true\", 1, \"page-link\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_44, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_47, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_50, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_52, \"href\", \"\", 1, \"page-link\", 3, \"click\"]];\n  },\n  template: function NgbPagination_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbPagination_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbPagination_ng_template_2_Template, 2, 0, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(4, NgbPagination_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(6, NgbPagination_ng_template_6_Template, 2, 0, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(8, NgbPagination_ng_template_8_Template, 1, 0, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(10, NgbPagination_ng_template_10_Template, 2, 2, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(12, NgbPagination_ng_template_12_Template, 1, 1, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementStart(14, \"ul\");\n      ɵngcc0.ɵɵtemplate(15, NgbPagination_li_15_Template, 3, 9, \"li\", 7);\n      ɵngcc0.ɵɵtemplate(16, NgbPagination_li_16_Template, 3, 8, \"li\", 7);\n      ɵngcc0.ɵɵtemplate(17, NgbPagination_ng_template_17_Template, 0, 0, \"ng-template\", 8);\n      ɵngcc0.ɵɵtemplate(18, NgbPagination_li_18_Template, 3, 9, \"li\", 7);\n      ɵngcc0.ɵɵtemplate(19, NgbPagination_li_19_Template, 3, 9, \"li\", 7);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      var _r12 = ɵngcc0.ɵɵreference(13);\n\n      ɵngcc0.ɵɵadvance(14);\n      ɵngcc0.ɵɵclassMap(\"pagination\" + (ctx.size ? \" pagination-\" + ctx.size : \"\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx.tplPages == null ? null : ctx.tplPages.templateRef) || _r12)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(8, _c54, ctx.page, ctx.pages, ctx.disabled));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbPagination.ctorParameters = function () {\n  return [{\n    type: NgbPaginationConfig\n  }];\n};\n\nNgbPagination.propDecorators = {\n  tplEllipsis: [{\n    type: ContentChild,\n    args: [NgbPaginationEllipsis, {\n      static: false\n    }]\n  }],\n  tplFirst: [{\n    type: ContentChild,\n    args: [NgbPaginationFirst, {\n      static: false\n    }]\n  }],\n  tplLast: [{\n    type: ContentChild,\n    args: [NgbPaginationLast, {\n      static: false\n    }]\n  }],\n  tplNext: [{\n    type: ContentChild,\n    args: [NgbPaginationNext, {\n      static: false\n    }]\n  }],\n  tplNumber: [{\n    type: ContentChild,\n    args: [NgbPaginationNumber, {\n      static: false\n    }]\n  }],\n  tplPrevious: [{\n    type: ContentChild,\n    args: [NgbPaginationPrevious, {\n      static: false\n    }]\n  }],\n  tplPages: [{\n    type: ContentChild,\n    args: [NgbPaginationPages, {\n      static: false\n    }]\n  }],\n  disabled: [{\n    type: Input\n  }],\n  boundaryLinks: [{\n    type: Input\n  }],\n  directionLinks: [{\n    type: Input\n  }],\n  ellipses: [{\n    type: Input\n  }],\n  rotate: [{\n    type: Input\n  }],\n  collectionSize: [{\n    type: Input\n  }],\n  maxSize: [{\n    type: Input\n  }],\n  page: [{\n    type: Input\n  }],\n  pageSize: [{\n    type: Input\n  }],\n  pageChange: [{\n    type: Output\n  }],\n  size: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPagination, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-pagination',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'role': 'navigation'\n      },\n      template: \"\\n    <ng-template #first><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.first\\\">&laquo;&laquo;</span></ng-template>\\n    <ng-template #previous><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.previous\\\">&laquo;</span></ng-template>\\n    <ng-template #next><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.next\\\">&raquo;</span></ng-template>\\n    <ng-template #last><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.last\\\">&raquo;&raquo;</span></ng-template>\\n    <ng-template #ellipsis>...</ng-template>\\n    <ng-template #defaultNumber let-page let-currentPage=\\\"currentPage\\\">\\n      {{ page }}\\n      <span *ngIf=\\\"page === currentPage\\\" class=\\\"sr-only\\\">(current)</span>\\n    </ng-template>\\n    <ng-template #defaultPages let-page let-pages=\\\"pages\\\" let-disabled=\\\"disabled\\\">\\n      <li *ngFor=\\\"let pageNumber of pages\\\" class=\\\"page-item\\\" [class.active]=\\\"pageNumber === page\\\"\\n        [class.disabled]=\\\"isEllipsis(pageNumber) || disabled\\\" [attr.aria-current]=\\\"(pageNumber === page ? 'page' : null)\\\">\\n        <a *ngIf=\\\"isEllipsis(pageNumber)\\\" class=\\\"page-link\\\" tabindex=\\\"-1\\\" aria-disabled=\\\"true\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplEllipsis?.templateRef || ellipsis\\\"\\n                      [ngTemplateOutletContext]=\\\"{disabled: true, currentPage: page}\\\"></ng-template>\\n        </a>\\n        <a *ngIf=\\\"!isEllipsis(pageNumber)\\\" class=\\\"page-link\\\" href (click)=\\\"selectPage(pageNumber); $event.preventDefault()\\\"\\n          [attr.tabindex]=\\\"disabled ? '-1' : null\\\" [attr.aria-disabled]=\\\"disabled ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplNumber?.templateRef || defaultNumber\\\"\\n                      [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n    </ng-template>\\n    <ul [class]=\\\"'pagination' + (size ? ' pagination-' + size : '')\\\">\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"previousDisabled()\\\">\\n        <a aria-label=\\\"First\\\" i18n-aria-label=\\\"@@ngb.pagination.first-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(1); $event.preventDefault()\\\" [attr.tabindex]=\\\"previousDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"previousDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplFirst?.templateRef || first\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: previousDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"previousDisabled()\\\">\\n        <a aria-label=\\\"Previous\\\" i18n-aria-label=\\\"@@ngb.pagination.previous-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(page-1); $event.preventDefault()\\\" [attr.tabindex]=\\\"previousDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"previousDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplPrevious?.templateRef || previous\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: previousDisabled()}\\\"></ng-template>\\n        </a>\\n      </li>\\n      <ng-template\\n        [ngTemplateOutlet]=\\\"tplPages?.templateRef || defaultPages\\\"\\n        [ngTemplateOutletContext]=\\\"{ $implicit: page, pages: pages, disabled: disabled }\\\"\\n      >\\n      </ng-template>\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"nextDisabled()\\\">\\n        <a aria-label=\\\"Next\\\" i18n-aria-label=\\\"@@ngb.pagination.next-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(page+1); $event.preventDefault()\\\" [attr.tabindex]=\\\"nextDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"nextDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplNext?.templateRef || next\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: nextDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"nextDisabled()\\\">\\n        <a aria-label=\\\"Last\\\" i18n-aria-label=\\\"@@ngb.pagination.last-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(pageCount); $event.preventDefault()\\\" [attr.tabindex]=\\\"nextDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"nextDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplLast?.templateRef || last\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: nextDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n    </ul>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbPaginationConfig\n    }];\n  }, {\n    page: [{\n      type: Input\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    ellipses: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    tplEllipsis: [{\n      type: ContentChild,\n      args: [NgbPaginationEllipsis, {\n        static: false\n      }]\n    }],\n    tplFirst: [{\n      type: ContentChild,\n      args: [NgbPaginationFirst, {\n        static: false\n      }]\n    }],\n    tplLast: [{\n      type: ContentChild,\n      args: [NgbPaginationLast, {\n        static: false\n      }]\n    }],\n    tplNext: [{\n      type: ContentChild,\n      args: [NgbPaginationNext, {\n        static: false\n      }]\n    }],\n    tplNumber: [{\n      type: ContentChild,\n      args: [NgbPaginationNumber, {\n        static: false\n      }]\n    }],\n    tplPrevious: [{\n      type: ContentChild,\n      args: [NgbPaginationPrevious, {\n        static: false\n      }]\n    }],\n    tplPages: [{\n      type: ContentChild,\n      args: [NgbPaginationPages, {\n        static: false\n      }]\n    }],\n    collectionSize: [{\n      type: Input\n    }]\n  });\n})();\n\nvar DIRECTIVES = [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPaginationPages];\n\nvar NgbPaginationModule = /*#__PURE__*/_createClass(function NgbPaginationModule() {\n  _classCallCheck(this, NgbPaginationModule);\n});\n\nNgbPaginationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbPaginationModule\n});\nNgbPaginationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbPaginationModule_Factory(t) {\n    return new (t || NgbPaginationModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbPaginationModule, {\n    declarations: function declarations() {\n      return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPaginationPages];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPaginationPages];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPaginationModule, [{\n    type: NgModule,\n    args: [{\n      declarations: DIRECTIVES,\n      exports: DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nvar Trigger = /*#__PURE__*/function () {\n  function Trigger(open, close) {\n    _classCallCheck(this, Trigger);\n\n    this.open = open;\n    this.close = close;\n\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  _createClass(Trigger, [{\n    key: \"isManual\",\n    value: function isManual() {\n      return this.open === 'manual' || this.close === 'manual';\n    }\n  }]);\n\n  return Trigger;\n}();\n\nvar DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout']\n};\n\nfunction parseTriggers(triggers) {\n  var aliases = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ALIASES;\n  var trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  var parsedTriggers = trimmedTriggers.split(/\\s+/).map(function (trigger) {\n    return trigger.split(':');\n  }).map(function (triggerPair) {\n    var alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n  var manualTriggers = parsedTriggers.filter(function (triggerPair) {\n    return triggerPair.isManual();\n  });\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n  return new Observable(function (subscriber) {\n    var listeners = [];\n\n    var openFn = function openFn() {\n      return subscriber.next(true);\n    };\n\n    var closeFn = function closeFn() {\n      return subscriber.next(false);\n    };\n\n    var toggleFn = function toggleFn() {\n      return subscriber.next(!isOpenedFn());\n    };\n\n    triggers.forEach(function (trigger) {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n    return function () {\n      listeners.forEach(function (unsubscribeFn) {\n        return unsubscribeFn();\n      });\n    };\n  });\n}\n\nvar delayOrNoop = function delayOrNoop(time) {\n  return time > 0 ? delay(time) : function (a) {\n    return a;\n  };\n};\n\nvar ɵ0$5 = delayOrNoop;\n\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n  return function (input$) {\n    var pending = null;\n    var filteredInput$ = input$.pipe(map(function (open) {\n      return {\n        open: open\n      };\n    }), filter(function (event) {\n      var currentlyOpen = isOpenedFn();\n\n      if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n        pending = event;\n        return true;\n      }\n\n      if (pending && pending.open !== event.open) {\n        pending = null;\n      }\n\n      return false;\n    }), share());\n    var delayedOpen$ = filteredInput$.pipe(filter(function (event) {\n      return event.open;\n    }), delayOrNoop(openDelay));\n    var delayedClose$ = filteredInput$.pipe(filter(function (event) {\n      return !event.open;\n    }), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$).pipe(filter(function (event) {\n      if (event === pending) {\n        pending = null;\n        return event.open !== isOpenedFn();\n      }\n\n      return false;\n    }), map(function (event) {\n      return event.open;\n    }));\n  };\n}\n\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn) {\n  var openDelay = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var closeDelay = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n  var parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return function () {};\n  }\n\n  var subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn).pipe(triggerDelay(openDelay, closeDelay, isOpenedFn)).subscribe(function (open) {\n    return open ? openFn() : closeFn();\n  });\n  return function () {\n    return subscription.unsubscribe();\n  };\n}\n/**\r\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the popovers used in the application.\r\n */\n\n\nvar NgbPopoverConfig = /*#__PURE__*/function () {\n  function NgbPopoverConfig(_ngbConfig) {\n    _classCallCheck(this, NgbPopoverConfig);\n\n    this._ngbConfig = _ngbConfig;\n    this.autoClose = true;\n    this.placement = 'auto';\n    this.triggers = 'click';\n    this.disablePopover = false;\n    this.openDelay = 0;\n    this.closeDelay = 0;\n  }\n\n  _createClass(NgbPopoverConfig, [{\n    key: \"animation\",\n    get: function get() {\n      return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    },\n    set: function set(animation) {\n      this._animation = animation;\n    }\n  }]);\n\n  return NgbPopoverConfig;\n}();\n\nNgbPopoverConfig.ɵfac = function NgbPopoverConfig_Factory(t) {\n  return new (t || NgbPopoverConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbPopoverConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbPopoverConfig_Factory() {\n    return new NgbPopoverConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbPopoverConfig,\n  providedIn: \"root\"\n});\n\nNgbPopoverConfig.ctorParameters = function () {\n  return [{\n    type: NgbConfig\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPopoverConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nvar nextId$3 = 0;\n\nvar NgbPopoverWindow = /*#__PURE__*/function () {\n  function NgbPopoverWindow() {\n    _classCallCheck(this, NgbPopoverWindow);\n  }\n\n  _createClass(NgbPopoverWindow, [{\n    key: \"isTitleTemplate\",\n    value: function isTitleTemplate() {\n      return this.title instanceof TemplateRef;\n    }\n  }]);\n\n  return NgbPopoverWindow;\n}();\n\nNgbPopoverWindow.ɵfac = function NgbPopoverWindow_Factory(t) {\n  return new (t || NgbPopoverWindow)();\n};\n\nNgbPopoverWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbPopoverWindow,\n  selectors: [[\"ngb-popover-window\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 5,\n  hostBindings: function NgbPopoverWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵclassMap(\"popover\" + (ctx.popoverClass ? \" \" + ctx.popoverClass : \"\"));\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    title: \"title\",\n    id: \"id\",\n    popoverClass: \"popoverClass\",\n    context: \"context\"\n  },\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"arrow\"], [\"class\", \"popover-header\", 4, \"ngIf\"], [1, \"popover-body\"], [1, \"popover-header\"], [\"simpleTitle\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbPopoverWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_Template, 4, 2, \"h3\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  styles: [\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{margin-top:-.5rem;top:50%}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{bottom:.7em;top:auto}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbPopoverWindow.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  popoverClass: [{\n    type: Input\n  }],\n  context: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPopoverWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-popover-window',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n        '[class.fade]': 'animation',\n        'role': 'tooltip',\n        '[id]': 'id'\n      },\n      template: \"\\n    <div class=\\\"arrow\\\"></div>\\n    <h3 class=\\\"popover-header\\\" *ngIf=\\\"title\\\">\\n      <ng-template #simpleTitle>{{title}}</ng-template>\\n      <ng-template [ngTemplateOutlet]=\\\"isTitleTemplate() ? $any(title) : simpleTitle\\\" [ngTemplateOutletContext]=\\\"context\\\"></ng-template>\\n    </h3>\\n    <div class=\\\"popover-body\\\"><ng-content></ng-content></div>\",\n      styles: [\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{margin-top:-.5rem;top:50%}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{bottom:.7em;top:auto}\"]\n    }]\n  }], null, {\n    animation: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * A lightweight and extensible directive for fancy popover creation.\r\n */\n\n\nvar NgbPopover = /*#__PURE__*/function () {\n  function NgbPopover(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    var _this46 = this;\n\n    _classCallCheck(this, NgbPopover);\n\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\r\n     * An event emitted when the popover opening animation has finished. Contains no payload.\r\n     */\n\n    this.shown = new EventEmitter();\n    /**\r\n     * An event emitted when the popover closing animation has finished. Contains no payload.\r\n     *\r\n     * At this point popover is not in the DOM anymore.\r\n     */\n\n    this.hidden = new EventEmitter();\n    this._ngbPopoverWindowId = \"ngb-popover-\".concat(nextId$3++);\n    this._windowRef = null;\n    this.animation = config.animation;\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      if (_this46._windowRef) {\n        positionElements(_this46._elementRef.nativeElement, _this46._windowRef.location.nativeElement, _this46.placement, _this46.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  _createClass(NgbPopover, [{\n    key: \"_isDisabled\",\n    value: function _isDisabled() {\n      if (this.disablePopover) {\n        return true;\n      }\n\n      if (!this.ngbPopover && !this.popoverTitle) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\r\n     * Opens the popover.\r\n     *\r\n     * This is considered to be a \"manual\" triggering.\r\n     * The `context` is an optional value to be injected into the popover template when it is created.\r\n     */\n\n  }, {\n    key: \"open\",\n    value: function open(context) {\n      var _this47 = this;\n\n      if (!this._windowRef && !this._isDisabled()) {\n        // this type assertion is safe because otherwise _isDisabled would return true\n        var _this$_popupService$o = this._popupService.open(this.ngbPopover, context, this.animation),\n            windowRef = _this$_popupService$o.windowRef,\n            transition$ = _this$_popupService$o.transition$;\n\n        this._windowRef = windowRef;\n        this._windowRef.instance.animation = this.animation;\n        this._windowRef.instance.title = this.popoverTitle;\n        this._windowRef.instance.context = context;\n        this._windowRef.instance.popoverClass = this.popoverClass;\n        this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n        this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n        if (this.container === 'body') {\n          this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n        } // We need to detect changes, because we don't know where .open() might be called from.\n        // Ex. opening popover from one of lifecycle hooks that run after the CD\n        // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\n\n        this._windowRef.changeDetectorRef.detectChanges(); // We need to mark for check, because popover won't work inside the OnPush component.\n        // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n        // inside the template of an OnPush component and we change the popover from\n        // open -> closed, the expression in question won't be updated unless we explicitly\n        // mark the parent component to be checked.\n\n\n        this._windowRef.changeDetectorRef.markForCheck();\n\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, function () {\n          return _this47.close();\n        }, this.hidden, [this._windowRef.location.nativeElement]);\n        transition$.subscribe(function () {\n          return _this47.shown.emit();\n        });\n      }\n    }\n    /**\r\n     * Closes the popover.\r\n     *\r\n     * This is considered to be a \"manual\" triggering of the popover.\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this48 = this;\n\n      if (this._windowRef) {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n\n        this._popupService.close(this.animation).subscribe(function () {\n          _this48._windowRef = null;\n\n          _this48.hidden.emit();\n\n          _this48._changeDetector.markForCheck();\n        });\n      }\n    }\n    /**\r\n     * Toggles the popover.\r\n     *\r\n     * This is considered to be a \"manual\" triggering of the popover.\r\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this._windowRef) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\r\n     * Returns `true`, if the popover is currently shown.\r\n     */\n\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this._windowRef != null;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_ref26) {\n      var ngbPopover = _ref26.ngbPopover,\n          popoverTitle = _ref26.popoverTitle,\n          disablePopover = _ref26.disablePopover,\n          popoverClass = _ref26.popoverClass;\n\n      if (popoverClass && this.isOpen()) {\n        this._windowRef.instance.popoverClass = popoverClass.currentValue;\n      } // close popover if title and content become empty, or disablePopover set to true\n\n\n      if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n        this.close();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close(); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n      // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\n      if (this._unregisterListenersFn) {\n        this._unregisterListenersFn();\n      }\n\n      this._zoneSubscription.unsubscribe();\n    }\n  }]);\n\n  return NgbPopover;\n}();\n\nNgbPopover.ɵfac = function NgbPopover_Factory(t) {\n  return new (t || NgbPopover)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgbPopoverConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\n\nNgbPopover.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPopover,\n  selectors: [[\"\", \"ngbPopover\", \"\"]],\n  inputs: {\n    animation: \"animation\",\n    autoClose: \"autoClose\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    disablePopover: \"disablePopover\",\n    popoverClass: \"popoverClass\",\n    openDelay: \"openDelay\",\n    closeDelay: \"closeDelay\",\n    ngbPopover: \"ngbPopover\",\n    popoverTitle: \"popoverTitle\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbPopover\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbPopover.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Injector\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: NgbPopoverConfig\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ApplicationRef\n  }];\n};\n\nNgbPopover.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  autoClose: [{\n    type: Input\n  }],\n  ngbPopover: [{\n    type: Input\n  }],\n  popoverTitle: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  triggers: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  disablePopover: [{\n    type: Input\n  }],\n  popoverClass: [{\n    type: Input\n  }],\n  openDelay: [{\n    type: Input\n  }],\n  closeDelay: [{\n    type: Input\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPopover, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbPopover]',\n      exportAs: 'ngbPopover'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: NgbPopoverConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disablePopover: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    ngbPopover: [{\n      type: Input\n    }],\n    popoverTitle: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbPopoverModule = /*#__PURE__*/_createClass(function NgbPopoverModule() {\n  _classCallCheck(this, NgbPopoverModule);\n});\n\nNgbPopoverModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbPopoverModule\n});\nNgbPopoverModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbPopoverModule_Factory(t) {\n    return new (t || NgbPopoverModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbPopoverModule, {\n    declarations: function declarations() {\n      return [NgbPopover, NgbPopoverWindow];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbPopover];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbPopoverModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbPopover, NgbPopoverWindow],\n      exports: [NgbPopover],\n      imports: [CommonModule],\n      entryComponents: [NgbPopoverWindow]\n    }]\n  }], null, null);\n})();\n/**\r\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the progress bars used in the application.\r\n */\n\n\nvar NgbProgressbarConfig = /*#__PURE__*/_createClass(function NgbProgressbarConfig() {\n  _classCallCheck(this, NgbProgressbarConfig);\n\n  this.max = 100;\n  this.animated = false;\n  this.striped = false;\n  this.showValue = false;\n});\n\nNgbProgressbarConfig.ɵfac = function NgbProgressbarConfig_Factory(t) {\n  return new (t || NgbProgressbarConfig)();\n};\n\nNgbProgressbarConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbProgressbarConfig_Factory() {\n    return new NgbProgressbarConfig();\n  },\n  token: NgbProgressbarConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbProgressbarConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\r\n * A directive that provides feedback on the progress of a workflow or an action.\r\n */\n\n\nvar NgbProgressbar = /*#__PURE__*/function () {\n  function NgbProgressbar(config) {\n    _classCallCheck(this, NgbProgressbar);\n\n    /**\r\n     * The current value for the progress bar.\r\n     *\r\n     * Should be in the `[0, max]` range.\r\n     */\n    this.value = 0;\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n  /**\r\n   * The maximal value to be displayed in the progress bar.\r\n   *\r\n   * Should be a positive number. Will default to 100 otherwise.\r\n   */\n\n\n  _createClass(NgbProgressbar, [{\n    key: \"max\",\n    get: function get() {\n      return this._max;\n    },\n    set: function set(max) {\n      this._max = !isNumber(max) || max <= 0 ? 100 : max;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return getValueInRange(this.value, this.max);\n    }\n  }, {\n    key: \"getPercentValue\",\n    value: function getPercentValue() {\n      return 100 * this.getValue() / this.max;\n    }\n  }]);\n\n  return NgbProgressbar;\n}();\n\nNgbProgressbar.ɵfac = function NgbProgressbar_Factory(t) {\n  return new (t || NgbProgressbar)(ɵngcc0.ɵɵdirectiveInject(NgbProgressbarConfig));\n};\n\nNgbProgressbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbProgressbar,\n  selectors: [[\"ngb-progressbar\"]],\n  hostAttrs: [1, \"progress\"],\n  hostVars: 2,\n  hostBindings: function NgbProgressbar_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"height\", ctx.height);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    max: \"max\",\n    animated: \"animated\",\n    striped: \"striped\",\n    textType: \"textType\",\n    type: \"type\",\n    showValue: \"showValue\",\n    height: \"height\"\n  },\n  ngContentSelectors: _c3,\n  decls: 3,\n  vars: 11,\n  consts: function consts() {\n    var i18n_55;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__56 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_55 = MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__56;\n    } else {\n      i18n_55 = $localize(_templateObject21 || (_templateObject21 = _taggedTemplateLiteral([\":@@ngb.progressbar.value\\u241Ff8e9a947b9db4252c0e9905765338712f2fd032f\\u241F3720830768741091151:\", \":INTERPOLATION:\"])), \"\\uFFFD0\\uFFFD\");\n    }\n\n    return [[\"role\", \"progressbar\", \"aria-valuemin\", \"0\"], [4, \"ngIf\"], i18n_55];\n  },\n  template: function NgbProgressbar_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbProgressbar_span_1_Template, 3, 3, \"span\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMapInterpolate4(\"progress-bar\", ctx.type ? \" bg-\" + ctx.type : \"\", \"\", ctx.textType ? \" text-\" + ctx.textType : \"\", \"\\n    \", ctx.animated ? \" progress-bar-animated\" : \"\", \"\", ctx.striped ? \" progress-bar-striped\" : \"\", \"\");\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.getPercentValue(), \"%\");\n      ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.getValue())(\"aria-valuemax\", ctx.max);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showValue);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  pipes: [ɵngcc1.PercentPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbProgressbar.ctorParameters = function () {\n  return [{\n    type: NgbProgressbarConfig\n  }];\n};\n\nNgbProgressbar.propDecorators = {\n  max: [{\n    type: Input\n  }],\n  animated: [{\n    type: Input\n  }],\n  striped: [{\n    type: Input\n  }],\n  showValue: [{\n    type: Input\n  }],\n  textType: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  height: [{\n    type: Input\n  }, {\n    type: HostBinding,\n    args: ['style.height']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbProgressbar, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-progressbar',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'progress'\n      },\n      template: \"\\n    <div class=\\\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\\n    {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\\\"\\n    role=\\\"progressbar\\\" [style.width.%]=\\\"getPercentValue()\\\"\\n    [attr.aria-valuenow]=\\\"getValue()\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"max\\\">\\n      <span *ngIf=\\\"showValue\\\" i18n=\\\"@@ngb.progressbar.value\\\">{{getValue() / max | percent}}</span><ng-content></ng-content>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbProgressbarConfig\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    animated: [{\n      type: Input\n    }],\n    striped: [{\n      type: Input\n    }],\n    textType: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    showValue: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['style.height']\n    }]\n  });\n})();\n\nvar NgbProgressbarModule = /*#__PURE__*/_createClass(function NgbProgressbarModule() {\n  _classCallCheck(this, NgbProgressbarModule);\n});\n\nNgbProgressbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbProgressbarModule\n});\nNgbProgressbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbProgressbarModule_Factory(t) {\n    return new (t || NgbProgressbarModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbProgressbarModule, {\n    declarations: function declarations() {\n      return [NgbProgressbar];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbProgressbar];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbProgressbarModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbProgressbar],\n      exports: [NgbProgressbar],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the ratings used in the application.\r\n */\n\n\nvar NgbRatingConfig = /*#__PURE__*/_createClass(function NgbRatingConfig() {\n  _classCallCheck(this, NgbRatingConfig);\n\n  this.max = 10;\n  this.readonly = false;\n  this.resettable = false;\n});\n\nNgbRatingConfig.ɵfac = function NgbRatingConfig_Factory(t) {\n  return new (t || NgbRatingConfig)();\n};\n\nNgbRatingConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbRatingConfig_Factory() {\n    return new NgbRatingConfig();\n  },\n  token: NgbRatingConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbRatingConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\r\n * A directive that helps visualising and interacting with a star rating bar.\r\n */\n\n\nvar NgbRating = /*#__PURE__*/function () {\n  function NgbRating(config, _changeDetectorRef) {\n    _classCallCheck(this, NgbRating);\n\n    this._changeDetectorRef = _changeDetectorRef;\n    this.contexts = [];\n    this.disabled = false;\n    /**\r\n     * An event emitted when the user is hovering over a given rating.\r\n     *\r\n     * Event payload equals to the rating being hovered over.\r\n     */\n\n    this.hover = new EventEmitter();\n    /**\r\n     * An event emitted when the user stops hovering over a given rating.\r\n     *\r\n     * Event payload equals to the rating of the last item being hovered over.\r\n     */\n\n    this.leave = new EventEmitter();\n    /**\r\n     * An event emitted when the user selects a new rating.\r\n     *\r\n     * Event payload equals to the newly selected rating.\r\n     */\n\n    this.rateChange = new EventEmitter(true);\n\n    this.onChange = function (_) {};\n\n    this.onTouched = function () {};\n\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  _createClass(NgbRating, [{\n    key: \"ariaValueText\",\n    value: function ariaValueText() {\n      return \"\".concat(this.nextRate, \" out of \").concat(this.max);\n    }\n  }, {\n    key: \"isInteractive\",\n    value: function isInteractive() {\n      return !this.readonly && !this.disabled;\n    }\n  }, {\n    key: \"enter\",\n    value: function enter(value) {\n      if (this.isInteractive()) {\n        this._updateState(value);\n      }\n\n      this.hover.emit(value);\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this.onTouched();\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(value) {\n      if (this.isInteractive()) {\n        this.update(this.resettable && this.rate === value ? 0 : value);\n      }\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      // tslint:disable-next-line:deprecation\n      switch (event.which) {\n        case Key.ArrowDown:\n        case Key.ArrowLeft:\n          this.update(this.rate - 1);\n          break;\n\n        case Key.ArrowUp:\n        case Key.ArrowRight:\n          this.update(this.rate + 1);\n          break;\n\n        case Key.Home:\n          this.update(0);\n          break;\n\n        case Key.End:\n          this.update(this.max);\n          break;\n\n        default:\n          return;\n      } // note 'return' in default case\n\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['rate']) {\n        this.update(this.rate);\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.contexts = Array.from({\n        length: this.max\n      }, function (v, k) {\n        return {\n          fill: 0,\n          index: k\n        };\n      });\n\n      this._updateState(this.rate);\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.leave.emit(this.nextRate);\n\n      this._updateState(this.rate);\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"update\",\n    value: function update(value) {\n      var internalChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var newRate = getValueInRange(value, this.max, 0);\n\n      if (this.isInteractive() && this.rate !== newRate) {\n        this.rate = newRate;\n        this.rateChange.emit(this.rate);\n      }\n\n      if (internalChange) {\n        this.onChange(this.rate);\n        this.onTouched();\n      }\n\n      this._updateState(this.rate);\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.update(value, false);\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }, {\n    key: \"_updateState\",\n    value: function _updateState(nextValue) {\n      this.nextRate = nextValue;\n      this.contexts.forEach(function (context, index) {\n        return context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100);\n      });\n    }\n  }]);\n\n  return NgbRating;\n}();\n\nNgbRating.ɵfac = function NgbRating_Factory(t) {\n  return new (t || NgbRating)(ɵngcc0.ɵɵdirectiveInject(NgbRatingConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbRating.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbRating,\n  selectors: [[\"ngb-rating\"]],\n  contentQueries: function NgbRating_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 1);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.starTemplateFromContent = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", \"aria-valuemin\", \"0\", 1, \"d-inline-flex\"],\n  hostVars: 5,\n  hostBindings: function NgbRating_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"blur\", function NgbRating_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"keydown\", function NgbRating_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyDown($event);\n      })(\"mouseleave\", function NgbRating_mouseleave_HostBindingHandler() {\n        return ctx.reset();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"tabindex\", ctx.disabled ? -1 : 0);\n      ɵngcc0.ɵɵattribute(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.nextRate)(\"aria-valuetext\", ctx.ariaValueText())(\"aria-disabled\", ctx.readonly ? true : null);\n    }\n  },\n  inputs: {\n    max: \"max\",\n    readonly: \"readonly\",\n    rate: \"rate\",\n    resettable: \"resettable\",\n    starTemplate: \"starTemplate\"\n  },\n  outputs: {\n    hover: \"hover\",\n    leave: \"leave\",\n    rateChange: \"rateChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NgbRating;\n    }),\n    multi: true\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"sr-only\"], [3, \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbRating_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbRating_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbRating_ng_template_2_Template, 4, 5, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.contexts);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbRating.ctorParameters = function () {\n  return [{\n    type: NgbRatingConfig\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nNgbRating.propDecorators = {\n  max: [{\n    type: Input\n  }],\n  rate: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  resettable: [{\n    type: Input\n  }],\n  starTemplate: [{\n    type: Input\n  }],\n  starTemplateFromContent: [{\n    type: ContentChild,\n    args: [TemplateRef, {\n      static: false\n    }]\n  }],\n  hover: [{\n    type: Output\n  }],\n  leave: [{\n    type: Output\n  }],\n  rateChange: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbRating, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-rating',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'd-inline-flex',\n        '[tabindex]': 'disabled ? -1 : 0',\n        'role': 'slider',\n        'aria-valuemin': '0',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'nextRate',\n        '[attr.aria-valuetext]': 'ariaValueText()',\n        '[attr.aria-disabled]': 'readonly ? true : null',\n        '(blur)': 'handleBlur()',\n        '(keydown)': 'handleKeyDown($event)',\n        '(mouseleave)': 'reset()'\n      },\n      template: \"\\n    <ng-template #t let-fill=\\\"fill\\\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"contexts\\\" let-index=\\\"index\\\">\\n      <span class=\\\"sr-only\\\">({{ index < nextRate ? '*' : ' ' }})</span>\\n      <span (mouseenter)=\\\"enter(index + 1)\\\" (click)=\\\"handleClick(index + 1)\\\" [style.cursor]=\\\"isInteractive() ? 'pointer' : 'default'\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"starTemplate || starTemplateFromContent || t\\\" [ngTemplateOutletContext]=\\\"contexts[index]\\\">\\n        </ng-template>\\n      </span>\\n    </ng-template>\\n  \",\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NgbRating;\n        }),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbRatingConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    hover: [{\n      type: Output\n    }],\n    leave: [{\n      type: Output\n    }],\n    rateChange: [{\n      type: Output\n    }],\n    max: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    rate: [{\n      type: Input\n    }],\n    resettable: [{\n      type: Input\n    }],\n    starTemplate: [{\n      type: Input\n    }],\n    starTemplateFromContent: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }]\n  });\n})();\n\nvar NgbRatingModule = /*#__PURE__*/_createClass(function NgbRatingModule() {\n  _classCallCheck(this, NgbRatingModule);\n});\n\nNgbRatingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbRatingModule\n});\nNgbRatingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbRatingModule_Factory(t) {\n    return new (t || NgbRatingModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbRatingModule, {\n    declarations: function declarations() {\n      return [NgbRating];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbRating];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbRatingModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbRating],\n      exports: [NgbRating],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nvar NgbTime = /*#__PURE__*/function () {\n  function NgbTime(hour, minute, second) {\n    _classCallCheck(this, NgbTime);\n\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  _createClass(NgbTime, [{\n    key: \"changeHour\",\n    value: function changeHour() {\n      var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n    }\n  }, {\n    key: \"updateHour\",\n    value: function updateHour(hour) {\n      if (isNumber(hour)) {\n        this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n      } else {\n        this.hour = NaN;\n      }\n    }\n  }, {\n    key: \"changeMinute\",\n    value: function changeMinute() {\n      var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n    }\n  }, {\n    key: \"updateMinute\",\n    value: function updateMinute(minute) {\n      if (isNumber(minute)) {\n        this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n        this.changeHour(Math.floor(minute / 60));\n      } else {\n        this.minute = NaN;\n      }\n    }\n  }, {\n    key: \"changeSecond\",\n    value: function changeSecond() {\n      var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n    }\n  }, {\n    key: \"updateSecond\",\n    value: function updateSecond(second) {\n      if (isNumber(second)) {\n        this.second = second < 0 ? 60 + second % 60 : second % 60;\n        this.changeMinute(Math.floor(second / 60));\n      } else {\n        this.second = NaN;\n      }\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      var checkSecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.hour || 0, \":\").concat(this.minute || 0, \":\").concat(this.second || 0);\n    }\n  }]);\n\n  return NgbTime;\n}();\n/**\r\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the timepickers used in the application.\r\n */\n\n\nvar NgbTimepickerConfig = /*#__PURE__*/_createClass(function NgbTimepickerConfig() {\n  _classCallCheck(this, NgbTimepickerConfig);\n\n  this.meridian = false;\n  this.spinners = true;\n  this.seconds = false;\n  this.hourStep = 1;\n  this.minuteStep = 1;\n  this.secondStep = 1;\n  this.disabled = false;\n  this.readonlyInputs = false;\n  this.size = 'medium';\n});\n\nNgbTimepickerConfig.ɵfac = function NgbTimepickerConfig_Factory(t) {\n  return new (t || NgbTimepickerConfig)();\n};\n\nNgbTimepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTimepickerConfig_Factory() {\n    return new NgbTimepickerConfig();\n  },\n  token: NgbTimepickerConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n/**\r\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\r\n * any provided user time model `T`, ex. a string, a native date, etc.\r\n *\r\n * The adapter is used **only** for conversion when binding timepicker to a form control,\r\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\r\n *\r\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\r\n *\r\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\r\n *\r\n * @since 2.2.0\r\n */\n\n\nvar NgbTimeAdapter = /*#__PURE__*/_createClass(function NgbTimeAdapter() {\n  _classCallCheck(this, NgbTimeAdapter);\n});\n\nNgbTimeAdapter.ɵfac = function NgbTimeAdapter_Factory(t) {\n  return new (t || NgbTimeAdapter)();\n};\n\nNgbTimeAdapter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY,\n  token: NgbTimeAdapter,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimeAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nvar NgbTimeStructAdapter = /*#__PURE__*/function (_NgbTimeAdapter) {\n  _inherits(NgbTimeStructAdapter, _NgbTimeAdapter);\n\n  var _super16 = _createSuper(NgbTimeStructAdapter);\n\n  function NgbTimeStructAdapter() {\n    _classCallCheck(this, NgbTimeStructAdapter);\n\n    return _super16.apply(this, arguments);\n  }\n\n  _createClass(NgbTimeStructAdapter, [{\n    key: \"fromModel\",\n    value:\n    /**\r\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\r\n     */\n    function fromModel(time) {\n      return time && isInteger(time.hour) && isInteger(time.minute) ? {\n        hour: time.hour,\n        minute: time.minute,\n        second: isInteger(time.second) ? time.second : null\n      } : null;\n    }\n    /**\r\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\r\n     */\n\n  }, {\n    key: \"toModel\",\n    value: function toModel(time) {\n      return time && isInteger(time.hour) && isInteger(time.minute) ? {\n        hour: time.hour,\n        minute: time.minute,\n        second: isInteger(time.second) ? time.second : null\n      } : null;\n    }\n  }]);\n\n  return NgbTimeStructAdapter;\n}(NgbTimeAdapter);\n\nNgbTimeStructAdapter.ɵfac = function NgbTimeStructAdapter_Factory(t) {\n  return ɵNgbTimeStructAdapter_BaseFactory(t || NgbTimeStructAdapter);\n};\n\nNgbTimeStructAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbTimeStructAdapter,\n  factory: NgbTimeStructAdapter.ɵfac\n});\nvar ɵNgbTimeStructAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbTimeStructAdapter);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimeStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nfunction NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n/**\r\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\r\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\r\n * as explained in the Angular i18n guide.\r\n */\n\n\nvar NgbTimepickerI18n = /*#__PURE__*/_createClass(function NgbTimepickerI18n() {\n  _classCallCheck(this, NgbTimepickerI18n);\n});\n\nNgbTimepickerI18n.ɵfac = function NgbTimepickerI18n_Factory(t) {\n  return new (t || NgbTimepickerI18n)();\n};\n\nNgbTimepickerI18n.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTimepickerI18n_Factory() {\n    return NGB_TIMEPICKER_I18N_FACTORY(ɵɵinject(LOCALE_ID));\n  },\n  token: NgbTimepickerI18n,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_TIMEPICKER_I18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n\nvar NgbTimepickerI18nDefault = /*#__PURE__*/function (_NgbTimepickerI18n) {\n  _inherits(NgbTimepickerI18nDefault, _NgbTimepickerI18n);\n\n  var _super17 = _createSuper(NgbTimepickerI18nDefault);\n\n  function NgbTimepickerI18nDefault(locale) {\n    var _this49;\n\n    _classCallCheck(this, NgbTimepickerI18nDefault);\n\n    _this49 = _super17.call(this);\n    _this49._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n    return _this49;\n  }\n\n  _createClass(NgbTimepickerI18nDefault, [{\n    key: \"getMorningPeriod\",\n    value: function getMorningPeriod() {\n      return this._periods[0];\n    }\n  }, {\n    key: \"getAfternoonPeriod\",\n    value: function getAfternoonPeriod() {\n      return this._periods[1];\n    }\n  }]);\n\n  return NgbTimepickerI18nDefault;\n}(NgbTimepickerI18n);\n\nNgbTimepickerI18nDefault.ɵfac = function NgbTimepickerI18nDefault_Factory(t) {\n  return new (t || NgbTimepickerI18nDefault)(ɵngcc0.ɵɵinject(LOCALE_ID));\n};\n\nNgbTimepickerI18nDefault.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbTimepickerI18nDefault,\n  factory: NgbTimepickerI18nDefault.ɵfac\n});\n\nNgbTimepickerI18nDefault.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\nvar FILTER_REGEX = /[^0-9]/g;\n/**\r\n * A directive that helps with wth picking hours, minutes and seconds.\r\n */\n\nvar NgbTimepicker = /*#__PURE__*/function () {\n  function NgbTimepicker(_config, _ngbTimeAdapter, _cd, i18n) {\n    _classCallCheck(this, NgbTimepicker);\n\n    this._config = _config;\n    this._ngbTimeAdapter = _ngbTimeAdapter;\n    this._cd = _cd;\n    this.i18n = i18n;\n\n    this.onChange = function (_) {};\n\n    this.onTouched = function () {};\n\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n  /**\r\n   * The number of hours to add/subtract when clicking hour spinners.\r\n   */\n\n\n  _createClass(NgbTimepicker, [{\n    key: \"hourStep\",\n    get: function get() {\n      return this._hourStep;\n    }\n    /**\r\n     * The number of minutes to add/subtract when clicking minute spinners.\r\n     */\n    ,\n    set: function set(step) {\n      this._hourStep = isInteger(step) ? step : this._config.hourStep;\n    }\n  }, {\n    key: \"minuteStep\",\n    get: function get() {\n      return this._minuteStep;\n    }\n    /**\r\n     * The number of seconds to add/subtract when clicking second spinners.\r\n     */\n    ,\n    set: function set(step) {\n      this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n    }\n  }, {\n    key: \"secondStep\",\n    get: function get() {\n      return this._secondStep;\n    },\n    set: function set(step) {\n      this._secondStep = isInteger(step) ? step : this._config.secondStep;\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      var structValue = this._ngbTimeAdapter.fromModel(value);\n\n      this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n\n      if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n        this.model.second = 0;\n      }\n\n      this._cd.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"changeHour\",\n    value: function changeHour(step) {\n      this.model.changeHour(step);\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"changeMinute\",\n    value: function changeMinute(step) {\n      this.model.changeMinute(step);\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"changeSecond\",\n    value: function changeSecond(step) {\n      this.model.changeSecond(step);\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"updateHour\",\n    value: function updateHour(newVal) {\n      var isPM = this.model.hour >= 12;\n      var enteredHour = toInteger(newVal);\n\n      if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n        this.model.updateHour(enteredHour + 12);\n      } else {\n        this.model.updateHour(enteredHour);\n      }\n\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"updateMinute\",\n    value: function updateMinute(newVal) {\n      this.model.updateMinute(toInteger(newVal));\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"updateSecond\",\n    value: function updateSecond(newVal) {\n      this.model.updateSecond(toInteger(newVal));\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"toggleMeridian\",\n    value: function toggleMeridian() {\n      if (this.meridian) {\n        this.changeHour(12);\n      }\n    }\n  }, {\n    key: \"formatInput\",\n    value: function formatInput(input) {\n      input.value = input.value.replace(FILTER_REGEX, '');\n    }\n  }, {\n    key: \"formatHour\",\n    value: function formatHour(value) {\n      if (isNumber(value)) {\n        if (this.meridian) {\n          return padNumber(value % 12 === 0 ? 12 : value % 12);\n        } else {\n          return padNumber(value % 24);\n        }\n      } else {\n        return padNumber(NaN);\n      }\n    }\n  }, {\n    key: \"formatMinSec\",\n    value: function formatMinSec(value) {\n      return padNumber(isNumber(value) ? value : NaN);\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this.onTouched();\n    }\n  }, {\n    key: \"isSmallSize\",\n    get: function get() {\n      return this.size === 'small';\n    }\n  }, {\n    key: \"isLargeSize\",\n    get: function get() {\n      return this.size === 'large';\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n        this.model.second = 0;\n        this.propagateModelChange(false);\n      }\n    }\n  }, {\n    key: \"propagateModelChange\",\n    value: function propagateModelChange() {\n      var touched = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (touched) {\n        this.onTouched();\n      }\n\n      if (this.model.isValid(this.seconds)) {\n        this.onChange(this._ngbTimeAdapter.toModel({\n          hour: this.model.hour,\n          minute: this.model.minute,\n          second: this.model.second\n        }));\n      } else {\n        this.onChange(this._ngbTimeAdapter.toModel(null));\n      }\n    }\n  }]);\n\n  return NgbTimepicker;\n}();\n\nNgbTimepicker.ɵfac = function NgbTimepicker_Factory(t) {\n  return new (t || NgbTimepicker)(ɵngcc0.ɵɵdirectiveInject(NgbTimepickerConfig), ɵngcc0.ɵɵdirectiveInject(NgbTimeAdapter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbTimepickerI18n));\n};\n\nNgbTimepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTimepicker,\n  selectors: [[\"ngb-timepicker\"]],\n  inputs: {\n    meridian: \"meridian\",\n    spinners: \"spinners\",\n    seconds: \"seconds\",\n    hourStep: \"hourStep\",\n    minuteStep: \"minuteStep\",\n    secondStep: \"secondStep\",\n    readonlyInputs: \"readonlyInputs\",\n    size: \"size\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NgbTimepicker;\n    }),\n    multi: true\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 16,\n  vars: 25,\n  consts: function consts() {\n    var i18n_57;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_58 = goog.getMsg(\"HH\");\n      i18n_57 = MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_58;\n    } else {\n      i18n_57 = $localize(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral([\":@@ngb.timepicker.HH\\u241Fce676ab1d6d98f85c836381cf100a4a91ef95a1f\\u241F4043638465245303811:HH\"])));\n    }\n\n    var i18n_59;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_60 = goog.getMsg(\"Hours\");\n      i18n_59 = MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_60;\n    } else {\n      i18n_59 = $localize(_templateObject23 || (_templateObject23 = _taggedTemplateLiteral([\":@@ngb.timepicker.hours\\u241F3bbce5fef7e1151da052a4e529453edb340e3912\\u241F8070396816726827304:Hours\"])));\n    }\n\n    var i18n_61;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_62 = goog.getMsg(\"MM\");\n      i18n_61 = MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_62;\n    } else {\n      i18n_61 = $localize(_templateObject24 || (_templateObject24 = _taggedTemplateLiteral([\":@@ngb.timepicker.MM\\u241F72c8edf6a50068a05bde70991e36b1e881f4ca54\\u241F1647282246509919852:MM\"])));\n    }\n\n    var i18n_63;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_64 = goog.getMsg(\"Minutes\");\n      i18n_63 = MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_64;\n    } else {\n      i18n_63 = $localize(_templateObject25 || (_templateObject25 = _taggedTemplateLiteral([\":@@ngb.timepicker.minutes\\u241F41e62daa962947c0d23ded0981975d1bddf0bf38\\u241F5531237363767747080:Minutes\"])));\n    }\n\n    var i18n_65;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__66 = goog.getMsg(\"Increment hours\");\n      i18n_65 = MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__66;\n    } else {\n      i18n_65 = $localize(_templateObject26 || (_templateObject26 = _taggedTemplateLiteral([\":@@ngb.timepicker.increment-hours\\u241Fcb74bc1d625a6c1742f0d7d47306cf495780c218\\u241F5939278348542933629:Increment hours\"])));\n    }\n\n    var i18n_67;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__68 = goog.getMsg(\"Decrement hours\");\n      i18n_67 = MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__68;\n    } else {\n      i18n_67 = $localize(_templateObject27 || (_templateObject27 = _taggedTemplateLiteral([\":@@ngb.timepicker.decrement-hours\\u241F147c7a19429da7d999e247d22e33fee370b1691b\\u241F3651829882940481818:Decrement hours\"])));\n    }\n\n    var i18n_69;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__70 = goog.getMsg(\"Increment minutes\");\n      i18n_69 = MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__70;\n    } else {\n      i18n_69 = $localize(_templateObject28 || (_templateObject28 = _taggedTemplateLiteral([\":@@ngb.timepicker.increment-minutes\\u241Ff5a4a3bc05e053f6732475d0e74875ec01c3a348\\u241F180147720391025024:Increment minutes\"])));\n    }\n\n    var i18n_71;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__72 = goog.getMsg(\"Decrement minutes\");\n      i18n_71 = MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__72;\n    } else {\n      i18n_71 = $localize(_templateObject29 || (_templateObject29 = _taggedTemplateLiteral([\":@@ngb.timepicker.decrement-minutes\\u241Fc1a6899e529c096da5b660385d4e77fe1f7ad271\\u241F7447789825403243588:Decrement minutes\"])));\n    }\n\n    var i18n_73;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__74 = goog.getMsg(\"SS\");\n      i18n_73 = MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__74;\n    } else {\n      i18n_73 = $localize(_templateObject30 || (_templateObject30 = _taggedTemplateLiteral([\":@@ngb.timepicker.SS\\u241Febe38d36a40a2383c5fefa9b4608ffbda08bd4a3\\u241F3628127143071124194:SS\"])));\n    }\n\n    var i18n_75;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__76 = goog.getMsg(\"Seconds\");\n      i18n_75 = MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__76;\n    } else {\n      i18n_75 = $localize(_templateObject31 || (_templateObject31 = _taggedTemplateLiteral([\":@@ngb.timepicker.seconds\\u241F4f2ed9e71a7c981db3e50ae2fedb28aff2ec4e6c\\u241F8874012390997067175:Seconds\"])));\n    }\n\n    var i18n_77;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___78 = goog.getMsg(\"Increment seconds\");\n      i18n_77 = MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___78;\n    } else {\n      i18n_77 = $localize(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral([\":@@ngb.timepicker.increment-seconds\\u241F912322ecee7d659d04dcf494a70e22e49d334b26\\u241F5364772110539092174:Increment seconds\"])));\n    }\n\n    var i18n_79;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___80 = goog.getMsg(\"Decrement seconds\");\n      i18n_79 = MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___80;\n    } else {\n      i18n_79 = $localize(_templateObject33 || (_templateObject33 = _taggedTemplateLiteral([\":@@ngb.timepicker.decrement-seconds\\u241F5db47ac104294243a70eb9124fbea9d0004ddf69\\u241F753633511487974857:Decrement seconds\"])));\n    }\n\n    var i18n_81;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___82 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_81 = MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___82;\n    } else {\n      i18n_81 = $localize(_templateObject34 || (_templateObject34 = _taggedTemplateLiteral([\":@@ngb.timepicker.PM\\u241F8d6e691e10306c1b34c6b26805151aaea320ef7f\\u241F3564199131264287502:\", \":INTERPOLATION:\"])), \"\\uFFFD0\\uFFFD\");\n    }\n\n    var i18n_83;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___84 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_83 = MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___84;\n    } else {\n      i18n_83 = $localize(_templateObject35 || (_templateObject35 = _taggedTemplateLiteral([\":@@ngb.timepicker.AM\\u241F69a1f176a93998876952adac57c3bc3863b6105e\\u241F4592818992509942761:\", \":INTERPOLATION:\"])), \"\\uFFFD0\\uFFFD\");\n    }\n\n    return [[3, \"disabled\"], [1, \"ngb-tp\"], [1, \"ngb-tp-input-container\", \"ngb-tp-hour\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"class\", \"btn btn-link\", 3, \"btn-sm\", \"btn-lg\", \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_57, \"aria-label\", i18n_59, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [1, \"ngb-tp-spacer\"], [1, \"ngb-tp-input-container\", \"ngb-tp-minute\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_61, \"aria-label\", i18n_63, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [\"class\", \"ngb-tp-spacer\", 4, \"ngIf\"], [\"class\", \"ngb-tp-input-container ngb-tp-second\", 4, \"ngIf\"], [\"class\", \"ngb-tp-meridian\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"disabled\", \"click\"], [1, \"chevron\", \"ngb-tp-chevron\"], [1, \"sr-only\"], i18n_65, [1, \"chevron\", \"ngb-tp-chevron\", \"bottom\"], i18n_67, i18n_69, i18n_71, [1, \"ngb-tp-input-container\", \"ngb-tp-second\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_73, \"aria-label\", i18n_75, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], i18n_77, i18n_79, [1, \"ngb-tp-meridian\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\", \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"am\", \"\"], i18n_81, i18n_83];\n  },\n  template: function NgbTimepicker_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"fieldset\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, NgbTimepicker_button_3_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementStart(4, \"input\", 4);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_4_listener($event) {\n        return ctx.updateHour($event.target.value);\n      })(\"blur\", function NgbTimepicker_Template_input_blur_4_listener() {\n        return ctx.handleBlur();\n      })(\"input\", function NgbTimepicker_Template_input_input_4_listener($event) {\n        return ctx.formatInput($event.target);\n      })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_4_listener($event) {\n        ctx.changeHour(ctx.hourStep);\n        return $event.preventDefault();\n      })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_4_listener($event) {\n        ctx.changeHour(-ctx.hourStep);\n        return $event.preventDefault();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(5, NgbTimepicker_button_5_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n      ɵngcc0.ɵɵtext(7, \":\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(8, \"div\", 6);\n      ɵngcc0.ɵɵtemplate(9, NgbTimepicker_button_9_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementStart(10, \"input\", 7);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_10_listener($event) {\n        return ctx.updateMinute($event.target.value);\n      })(\"blur\", function NgbTimepicker_Template_input_blur_10_listener() {\n        return ctx.handleBlur();\n      })(\"input\", function NgbTimepicker_Template_input_input_10_listener($event) {\n        return ctx.formatInput($event.target);\n      })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_10_listener($event) {\n        ctx.changeMinute(ctx.minuteStep);\n        return $event.preventDefault();\n      })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_10_listener($event) {\n        ctx.changeMinute(-ctx.minuteStep);\n        return $event.preventDefault();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(11, NgbTimepicker_button_11_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(12, NgbTimepicker_div_12_Template, 2, 0, \"div\", 8);\n      ɵngcc0.ɵɵtemplate(13, NgbTimepicker_div_13_Template, 4, 9, \"div\", 9);\n      ɵngcc0.ɵɵtemplate(14, NgbTimepicker_div_14_Template, 1, 0, \"div\", 8);\n      ɵngcc0.ɵɵtemplate(15, NgbTimepicker_div_15_Template, 5, 9, \"div\", 10);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n      ɵngcc0.ɵɵproperty(\"value\", ctx.formatHour(ctx.model == null ? null : ctx.model.hour))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n      ɵngcc0.ɵɵproperty(\"value\", ctx.formatMinSec(ctx.model == null ? null : ctx.model.minute))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.seconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.seconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.meridian);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.meridian);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{align-items:center;display:flex}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{align-items:center;display:flex;flex-direction:column;justify-content:space-around}.ngb-tp-spacer{text-align:center;width:1em}\"],\n  encapsulation: 2\n});\n\nNgbTimepicker.ctorParameters = function () {\n  return [{\n    type: NgbTimepickerConfig\n  }, {\n    type: NgbTimeAdapter\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgbTimepickerI18n\n  }];\n};\n\nNgbTimepicker.propDecorators = {\n  meridian: [{\n    type: Input\n  }],\n  spinners: [{\n    type: Input\n  }],\n  seconds: [{\n    type: Input\n  }],\n  hourStep: [{\n    type: Input\n  }],\n  minuteStep: [{\n    type: Input\n  }],\n  secondStep: [{\n    type: Input\n  }],\n  readonlyInputs: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimepicker, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-timepicker',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <fieldset [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n      <div class=\\\"ngb-tp\\\">\\n        <div class=\\\"ngb-tp-input-container ngb-tp-hour\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeHour(hourStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-hours\\\">Increment hours</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\"\\n            [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"HH\\\" i18n-placeholder=\\\"@@ngb.timepicker.HH\\\"\\n            [value]=\\\"formatHour(model?.hour)\\\" (change)=\\\"updateHour($any($event).target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Hours\\\" i18n-aria-label=\\\"@@ngb.timepicker.hours\\\"\\n            (blur)=\\\"handleBlur()\\\"\\n            (input)=\\\"formatInput($any($event).target)\\\"\\n            (keydown.ArrowUp)=\\\"changeHour(hourStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeHour(-hourStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeHour(-hourStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.decrement-hours\\\">Decrement hours</span>\\n          </button>\\n        </div>\\n        <div class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div class=\\\"ngb-tp-input-container ngb-tp-minute\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeMinute(minuteStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-minutes\\\">Increment minutes</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\" [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"MM\\\" i18n-placeholder=\\\"@@ngb.timepicker.MM\\\"\\n            [value]=\\\"formatMinSec(model?.minute)\\\" (change)=\\\"updateMinute($any($event).target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Minutes\\\" i18n-aria-label=\\\"@@ngb.timepicker.minutes\\\"\\n            (blur)=\\\"handleBlur()\\\"\\n            (input)=\\\"formatInput($any($event).target)\\\"\\n            (keydown.ArrowUp)=\\\"changeMinute(minuteStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeMinute(-minuteStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeMinute(-minuteStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"  [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\"  i18n=\\\"@@ngb.timepicker.decrement-minutes\\\">Decrement minutes</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-input-container ngb-tp-second\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeSecond(secondStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-seconds\\\">Increment seconds</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\" [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"SS\\\" i18n-placeholder=\\\"@@ngb.timepicker.SS\\\"\\n            [value]=\\\"formatMinSec(model?.second)\\\" (change)=\\\"updateSecond($any($event).target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Seconds\\\" i18n-aria-label=\\\"@@ngb.timepicker.seconds\\\"\\n            (blur)=\\\"handleBlur()\\\"\\n            (input)=\\\"formatInput($any($event).target)\\\"\\n            (keydown.ArrowUp)=\\\"changeSecond(secondStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeSecond(-secondStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeSecond(-secondStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"  [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.decrement-seconds\\\">Decrement seconds</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-spacer\\\"></div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-meridian\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\"\\n                  (click)=\\\"toggleMeridian()\\\">\\n            <ng-container *ngIf=\\\"model && model.hour >= 12; else am\\\"\\n                          i18n=\\\"@@ngb.timepicker.PM\\\">{{ i18n.getAfternoonPeriod() }}</ng-container>\\n            <ng-template #am i18n=\\\"@@ngb.timepicker.AM\\\">{{ i18n.getMorningPeriod() }}</ng-template>\\n          </button>\\n        </div>\\n      </div>\\n    </fieldset>\\n  \",\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NgbTimepicker;\n        }),\n        multi: true\n      }],\n      styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{align-items:center;display:flex}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{align-items:center;display:flex;flex-direction:column;justify-content:space-around}.ngb-tp-spacer{text-align:center;width:1em}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbTimepickerConfig\n    }, {\n      type: NgbTimeAdapter\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbTimepickerI18n\n    }];\n  }, {\n    meridian: [{\n      type: Input\n    }],\n    spinners: [{\n      type: Input\n    }],\n    seconds: [{\n      type: Input\n    }],\n    hourStep: [{\n      type: Input\n    }],\n    minuteStep: [{\n      type: Input\n    }],\n    secondStep: [{\n      type: Input\n    }],\n    readonlyInputs: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbTimepickerModule = /*#__PURE__*/_createClass(function NgbTimepickerModule() {\n  _classCallCheck(this, NgbTimepickerModule);\n});\n\nNgbTimepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTimepickerModule\n});\nNgbTimepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTimepickerModule_Factory(t) {\n    return new (t || NgbTimepickerModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTimepickerModule, {\n    declarations: function declarations() {\n      return [NgbTimepicker];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbTimepicker];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTimepickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTimepicker],\n      exports: [NgbTimepicker],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\r\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\r\n * and customize the values of its properties in order to provide default values for all the toasts used in the\r\n * application.\r\n *\r\n * @since 5.0.0\r\n */\n\n\nvar NgbToastConfig = /*#__PURE__*/function () {\n  function NgbToastConfig(_ngbConfig) {\n    _classCallCheck(this, NgbToastConfig);\n\n    this._ngbConfig = _ngbConfig;\n    this.autohide = true;\n    this.delay = 500;\n    this.ariaLive = 'polite';\n  }\n\n  _createClass(NgbToastConfig, [{\n    key: \"animation\",\n    get: function get() {\n      return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    },\n    set: function set(animation) {\n      this._animation = animation;\n    }\n  }]);\n\n  return NgbToastConfig;\n}();\n\nNgbToastConfig.ɵfac = function NgbToastConfig_Factory(t) {\n  return new (t || NgbToastConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbToastConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbToastConfig_Factory() {\n    return new NgbToastConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbToastConfig,\n  providedIn: \"root\"\n});\n\nNgbToastConfig.ctorParameters = function () {\n  return [{\n    type: NgbConfig\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbToastConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nvar ngbToastFadeInTransition = function ngbToastFadeInTransition(element, animation) {\n  var classList = element.classList;\n\n  if (!animation) {\n    classList.add('show');\n    return;\n  }\n\n  classList.remove('hide');\n  reflow(element);\n  classList.add('showing');\n  return function () {\n    classList.remove('showing');\n    classList.add('show');\n  };\n};\n\nvar ngbToastFadeOutTransition = function ngbToastFadeOutTransition(_ref27) {\n  var classList = _ref27.classList;\n  classList.remove('show');\n  return function () {\n    classList.add('hide');\n  };\n};\n/**\r\n * This directive allows the usage of HTML markup or other directives\r\n * inside of the toast's header.\r\n *\r\n * @since 5.0.0\r\n */\n\n\nvar NgbToastHeader = /*#__PURE__*/_createClass(function NgbToastHeader() {\n  _classCallCheck(this, NgbToastHeader);\n});\n\nNgbToastHeader.ɵfac = function NgbToastHeader_Factory(t) {\n  return new (t || NgbToastHeader)();\n};\n\nNgbToastHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbToastHeader,\n  selectors: [[\"\", \"ngbToastHeader\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbToastHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbToastHeader]'\n    }]\n  }], null, null);\n})();\n/**\r\n * Toasts provide feedback messages as notifications to the user.\r\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\r\n *\r\n * @since 5.0.0\r\n */\n\n\nvar NgbToast = /*#__PURE__*/function () {\n  function NgbToast(ariaLive, config, _zone, _element) {\n    _classCallCheck(this, NgbToast);\n\n    this.ariaLive = ariaLive;\n    this._zone = _zone;\n    this._element = _element;\n    /**\r\n     * A template like `<ng-template ngbToastHeader></ng-template>` can be\r\n     * used in the projected content to allow markup usage.\r\n     */\n\n    this.contentHeaderTpl = null;\n    /**\r\n     * An event fired after the animation triggered by calling `.show()` method has finished.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.shown = new EventEmitter();\n    /**\r\n     * An event fired after the animation triggered by calling `.hide()` method has finished.\r\n     *\r\n     * It can only occur in 2 different scenarios:\r\n     * - `autohide` timeout fires\r\n     * - user clicks on a closing cross\r\n     *\r\n     * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\r\n     * to the user to take care of that.\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n    this.hidden = new EventEmitter();\n\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n    this.animation = config.animation;\n  }\n\n  _createClass(NgbToast, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this50 = this;\n\n      this._zone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n        _this50._init();\n\n        _this50.show();\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if ('autohide' in changes) {\n        this._clearTimeout();\n\n        this._init();\n      }\n    }\n    /**\r\n     * Triggers toast closing programmatically.\r\n     *\r\n     * The returned observable will emit and be completed once the closing transition has finished.\r\n     * If the animations are turned off this happens synchronously.\r\n     *\r\n     * Alternatively you could listen or subscribe to the `(hidden)` output\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _this51 = this;\n\n      this._clearTimeout();\n\n      var transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeOutTransition, {\n        animation: this.animation,\n        runningTransition: 'stop'\n      });\n      transition.subscribe(function () {\n        _this51.hidden.emit();\n      });\n      return transition;\n    }\n    /**\r\n     * Triggers toast opening programmatically.\r\n     *\r\n     * The returned observable will emit and be completed once the opening transition has finished.\r\n     * If the animations are turned off this happens synchronously.\r\n     *\r\n     * Alternatively you could listen or subscribe to the `(shown)` output\r\n     *\r\n     * @since 8.0.0\r\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this52 = this;\n\n      var transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeInTransition, {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n      transition.subscribe(function () {\n        _this52.shown.emit();\n      });\n      return transition;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this53 = this;\n\n      if (this.autohide && !this._timeoutID) {\n        this._timeoutID = setTimeout(function () {\n          return _this53.hide();\n        }, this.delay);\n      }\n    }\n  }, {\n    key: \"_clearTimeout\",\n    value: function _clearTimeout() {\n      if (this._timeoutID) {\n        clearTimeout(this._timeoutID);\n        this._timeoutID = null;\n      }\n    }\n  }]);\n\n  return NgbToast;\n}();\n\nNgbToast.ɵfac = function NgbToast_Factory(t) {\n  return new (t || NgbToast)(ɵngcc0.ɵɵinjectAttribute('aria-live'), ɵngcc0.ɵɵdirectiveInject(NgbToastConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbToast.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbToast,\n  selectors: [[\"ngb-toast\"]],\n  contentQueries: function NgbToast_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbToastHeader, 3, TemplateRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentHeaderTpl = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"alert\", \"aria-atomic\", \"true\", 1, \"toast\"],\n  hostVars: 3,\n  hostBindings: function NgbToast_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-live\", ctx.ariaLive);\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    delay: \"delay\",\n    autohide: \"autohide\",\n    animation: \"animation\",\n    header: \"header\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbToast\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c3,\n  decls: 5,\n  vars: 1,\n  consts: function consts() {\n    var i18n_85;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_toast_close_aria$$FESM2015_NG_BOOTSTRAP_JS__86 = goog.getMsg(\"Close\");\n      i18n_85 = MSG_EXTERNAL_ngb_toast_close_aria$$FESM2015_NG_BOOTSTRAP_JS__86;\n    } else {\n      i18n_85 = $localize(_templateObject36 || (_templateObject36 = _taggedTemplateLiteral([\":@@ngb.toast.close-aria\\u241Ff4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8\\u241F7819314041543176992:Close\"])));\n    }\n\n    return [[\"headerTpl\", \"\"], [3, \"ngIf\"], [1, \"toast-body\"], [1, \"mr-auto\"], [1, \"toast-header\"], [3, \"ngTemplateOutlet\"], [\"type\", \"button\", \"aria-label\", i18n_85, 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]];\n  },\n  template: function NgbToast_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NgbToast_ng_template_0_Template, 2, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbToast_ng_template_2_Template, 5, 1, \"ng-template\", 1);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.contentHeaderTpl || ctx.header);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  styles: [\".ngb-toasts{margin:.5em;position:fixed;right:0;top:0;z-index:1200}ngb-toast{display:block}ngb-toast .toast-header .close{margin-bottom:.25rem;margin-left:auto}\"],\n  encapsulation: 2\n});\n\nNgbToast.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['aria-live']\n    }]\n  }, {\n    type: NgbToastConfig\n  }, {\n    type: NgZone\n  }, {\n    type: ElementRef\n  }];\n};\n\nNgbToast.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  delay: [{\n    type: Input\n  }],\n  autohide: [{\n    type: Input\n  }],\n  header: [{\n    type: Input\n  }],\n  contentHeaderTpl: [{\n    type: ContentChild,\n    args: [NgbToastHeader, {\n      read: TemplateRef,\n      static: true\n    }]\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbToast, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-toast',\n      exportAs: 'ngbToast',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'role': 'alert',\n        '[attr.aria-live]': 'ariaLive',\n        'aria-atomic': 'true',\n        'class': 'toast',\n        '[class.fade]': 'animation'\n      },\n      template: \"\\n    <ng-template #headerTpl>\\n      <strong class=\\\"mr-auto\\\">{{header}}</strong>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"contentHeaderTpl || header\\\">\\n      <div class=\\\"toast-header\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"contentHeaderTpl || headerTpl\\\"></ng-template>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" i18n-aria-label=\\\"@@ngb.toast.close-aria\\\" (click)=\\\"hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </ng-template>\\n    <div class=\\\"toast-body\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \",\n      styles: [\".ngb-toasts{margin:.5em;position:fixed;right:0;top:0;z-index:1200}ngb-toast{display:block}ngb-toast .toast-header .close{margin-bottom:.25rem;margin-left:auto}\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['aria-live']\n      }]\n    }, {\n      type: NgbToastConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    contentHeaderTpl: [{\n      type: ContentChild,\n      args: [NgbToastHeader, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    delay: [{\n      type: Input\n    }],\n    autohide: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbToastModule = /*#__PURE__*/_createClass(function NgbToastModule() {\n  _classCallCheck(this, NgbToastModule);\n});\n\nNgbToastModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbToastModule\n});\nNgbToastModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbToastModule_Factory(t) {\n    return new (t || NgbToastModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbToastModule, {\n    declarations: function declarations() {\n      return [NgbToast, NgbToastHeader];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbToast, NgbToastHeader];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbToastModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbToast, NgbToastHeader],\n      imports: [CommonModule],\n      exports: [NgbToast, NgbToastHeader]\n    }]\n  }], null, null);\n})();\n/**\r\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the tooltips used in the application.\r\n */\n\n\nvar NgbTooltipConfig = /*#__PURE__*/function () {\n  function NgbTooltipConfig(_ngbConfig) {\n    _classCallCheck(this, NgbTooltipConfig);\n\n    this._ngbConfig = _ngbConfig;\n    this.autoClose = true;\n    this.placement = 'auto';\n    this.triggers = 'hover focus';\n    this.disableTooltip = false;\n    this.openDelay = 0;\n    this.closeDelay = 0;\n  }\n\n  _createClass(NgbTooltipConfig, [{\n    key: \"animation\",\n    get: function get() {\n      return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    },\n    set: function set(animation) {\n      this._animation = animation;\n    }\n  }]);\n\n  return NgbTooltipConfig;\n}();\n\nNgbTooltipConfig.ɵfac = function NgbTooltipConfig_Factory(t) {\n  return new (t || NgbTooltipConfig)(ɵngcc0.ɵɵinject(NgbConfig));\n};\n\nNgbTooltipConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTooltipConfig_Factory() {\n    return new NgbTooltipConfig(ɵɵinject(NgbConfig));\n  },\n  token: NgbTooltipConfig,\n  providedIn: \"root\"\n});\n\nNgbTooltipConfig.ctorParameters = function () {\n  return [{\n    type: NgbConfig\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTooltipConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nvar nextId$4 = 0;\n\nvar NgbTooltipWindow = /*#__PURE__*/_createClass(function NgbTooltipWindow() {\n  _classCallCheck(this, NgbTooltipWindow);\n});\n\nNgbTooltipWindow.ɵfac = function NgbTooltipWindow_Factory(t) {\n  return new (t || NgbTooltipWindow)();\n};\n\nNgbTooltipWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTooltipWindow,\n  selectors: [[\"ngb-tooltip-window\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 5,\n  hostBindings: function NgbTooltipWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵclassMap(\"tooltip\" + (ctx.tooltipClass ? \" \" + ctx.tooltipClass : \"\"));\n      ɵngcc0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    id: \"id\",\n    tooltipClass: \"tooltipClass\"\n  },\n  ngContentSelectors: _c3,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"arrow\"], [1, \"tooltip-inner\"]],\n  template: function NgbTooltipWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"ngb-tooltip-window{pointer-events:none}ngb-tooltip-window .tooltip-inner{pointer-events:auto}ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{bottom:.4rem;top:auto}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbTooltipWindow.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  tooltipClass: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTooltipWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-tooltip-window',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"tooltip\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n        '[class.fade]': 'animation',\n        'role': 'tooltip',\n        '[id]': 'id'\n      },\n      template: \"<div class=\\\"arrow\\\"></div><div class=\\\"tooltip-inner\\\"><ng-content></ng-content></div>\",\n      styles: [\"ngb-tooltip-window{pointer-events:none}ngb-tooltip-window .tooltip-inner{pointer-events:auto}ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{bottom:.4rem;top:auto}\"]\n    }]\n  }], null, {\n    animation: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * A lightweight and extensible directive for fancy tooltip creation.\r\n */\n\n\nvar NgbTooltip = /*#__PURE__*/function () {\n  function NgbTooltip(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    var _this54 = this;\n\n    _classCallCheck(this, NgbTooltip);\n\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\r\n     * An event emitted when the tooltip opening animation has finished. Contains no payload.\r\n     */\n\n    this.shown = new EventEmitter();\n    /**\r\n     * An event emitted when the tooltip closing animation has finished. Contains no payload.\r\n     */\n\n    this.hidden = new EventEmitter();\n    this._ngbTooltipWindowId = \"ngb-tooltip-\".concat(nextId$4++);\n    this._windowRef = null;\n    this.animation = config.animation;\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      if (_this54._windowRef) {\n        positionElements(_this54._elementRef.nativeElement, _this54._windowRef.location.nativeElement, _this54.placement, _this54.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n  /**\r\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\r\n   *\r\n   * If the content if falsy, the tooltip won't open.\r\n   */\n\n\n  _createClass(NgbTooltip, [{\n    key: \"ngbTooltip\",\n    get: function get() {\n      return this._ngbTooltip;\n    }\n    /**\r\n     * Opens the tooltip.\r\n     *\r\n     * This is considered to be a \"manual\" triggering.\r\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\r\n     */\n    ,\n    set: function set(value) {\n      this._ngbTooltip = value;\n\n      if (!value && this._windowRef) {\n        this.close();\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open(context) {\n      var _this55 = this;\n\n      if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n        var _this$_popupService$o2 = this._popupService.open(this._ngbTooltip, context, this.animation),\n            windowRef = _this$_popupService$o2.windowRef,\n            transition$ = _this$_popupService$o2.transition$;\n\n        this._windowRef = windowRef;\n        this._windowRef.instance.animation = this.animation;\n        this._windowRef.instance.tooltipClass = this.tooltipClass;\n        this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n        this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n        if (this.container === 'body') {\n          this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n        } // We need to detect changes, because we don't know where .open() might be called from.\n        // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n        // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\n\n        this._windowRef.changeDetectorRef.detectChanges(); // We need to mark for check, because tooltip won't work inside the OnPush component.\n        // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n        // inside the template of an OnPush component and we change the tooltip from\n        // open -> closed, the expression in question won't be updated unless we explicitly\n        // mark the parent component to be checked.\n\n\n        this._windowRef.changeDetectorRef.markForCheck();\n\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, function () {\n          return _this55.close();\n        }, this.hidden, [this._windowRef.location.nativeElement]);\n        transition$.subscribe(function () {\n          return _this55.shown.emit();\n        });\n      }\n    }\n    /**\r\n     * Closes the tooltip.\r\n     *\r\n     * This is considered to be a \"manual\" triggering of the tooltip.\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this56 = this;\n\n      if (this._windowRef != null) {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n\n        this._popupService.close(this.animation).subscribe(function () {\n          _this56._windowRef = null;\n\n          _this56.hidden.emit();\n\n          _this56._changeDetector.markForCheck();\n        });\n      }\n    }\n    /**\r\n     * Toggles the tooltip.\r\n     *\r\n     * This is considered to be a \"manual\" triggering of the tooltip.\r\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this._windowRef) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\r\n     * Returns `true`, if the popover is currently shown.\r\n     */\n\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this._windowRef != null;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_ref28) {\n      var tooltipClass = _ref28.tooltipClass;\n\n      if (tooltipClass && this.isOpen()) {\n        this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close(); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n      // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\n      if (this._unregisterListenersFn) {\n        this._unregisterListenersFn();\n      }\n\n      this._zoneSubscription.unsubscribe();\n    }\n  }]);\n\n  return NgbTooltip;\n}();\n\nNgbTooltip.ɵfac = function NgbTooltip_Factory(t) {\n  return new (t || NgbTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgbTooltipConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\n\nNgbTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTooltip,\n  selectors: [[\"\", \"ngbTooltip\", \"\"]],\n  inputs: {\n    animation: \"animation\",\n    autoClose: \"autoClose\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    disableTooltip: \"disableTooltip\",\n    tooltipClass: \"tooltipClass\",\n    openDelay: \"openDelay\",\n    closeDelay: \"closeDelay\",\n    ngbTooltip: \"ngbTooltip\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbTooltip\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbTooltip.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Injector\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: NgbTooltipConfig\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ApplicationRef\n  }];\n};\n\nNgbTooltip.propDecorators = {\n  animation: [{\n    type: Input\n  }],\n  autoClose: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  triggers: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  disableTooltip: [{\n    type: Input\n  }],\n  tooltipClass: [{\n    type: Input\n  }],\n  openDelay: [{\n    type: Input\n  }],\n  closeDelay: [{\n    type: Input\n  }],\n  shown: [{\n    type: Output\n  }],\n  hidden: [{\n    type: Output\n  }],\n  ngbTooltip: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTooltip, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbTooltip]',\n      exportAs: 'ngbTooltip'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: NgbTooltipConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disableTooltip: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    ngbTooltip: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbTooltipModule = /*#__PURE__*/_createClass(function NgbTooltipModule() {\n  _classCallCheck(this, NgbTooltipModule);\n});\n\nNgbTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTooltipModule\n});\nNgbTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTooltipModule_Factory(t) {\n    return new (t || NgbTooltipModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTooltipModule, {\n    declarations: [NgbTooltip, NgbTooltipWindow],\n    exports: [NgbTooltip]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTooltipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTooltip, NgbTooltipWindow],\n      exports: [NgbTooltip],\n      entryComponents: [NgbTooltipWindow]\n    }]\n  }], null, null);\n})();\n/**\r\n * A component that helps with text highlighting.\r\n *\r\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\r\n * highlighting:\r\n *\r\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\r\n */\n\n\nvar NgbHighlight = /*#__PURE__*/function () {\n  function NgbHighlight() {\n    _classCallCheck(this, NgbHighlight);\n\n    /**\r\n     * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\r\n     */\n    this.highlightClass = 'ngb-highlight';\n    /**\r\n     * Boolean option to determine if the highlighting should be sensitive to accents or not.\r\n     *\r\n     * This feature is only available for browsers that implement the `String.normalize` function\r\n     * (typically not Internet Explorer).\r\n     * If you want to use this feature in a browser that does not implement `String.normalize`,\r\n     * you will have to include a polyfill in your application (`unorm` for example).\r\n     *\r\n     * @since 9.1.0\r\n     */\n\n    this.accentSensitive = true;\n  }\n\n  _createClass(NgbHighlight, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this57 = this;\n\n      if (!this.accentSensitive && !String.prototype.normalize) {\n        console.warn('The `accentSensitive` input in `ngb-highlight` cannot be set to `false` in a browser ' + 'that does not implement the `String.normalize` function. ' + 'You will have to include a polyfill in your application to use this feature in the current browser.');\n        this.accentSensitive = true;\n      }\n\n      var result = toString(this.result);\n      var terms = Array.isArray(this.term) ? this.term : [this.term];\n\n      var prepareTerm = function prepareTerm(term) {\n        return _this57.accentSensitive ? term : removeAccents(term);\n      };\n\n      var escapedTerms = terms.map(function (term) {\n        return regExpEscape(prepareTerm(toString(term)));\n      }).filter(function (term) {\n        return term;\n      });\n      var toSplit = this.accentSensitive ? result : removeAccents(result);\n      var parts = escapedTerms.length ? toSplit.split(new RegExp(\"(\".concat(escapedTerms.join('|'), \")\"), 'gmi')) : [result];\n\n      if (this.accentSensitive) {\n        this.parts = parts;\n      } else {\n        var offset = 0;\n        this.parts = parts.map(function (part) {\n          return result.substring(offset, offset += part.length);\n        });\n      }\n    }\n  }]);\n\n  return NgbHighlight;\n}();\n\nNgbHighlight.ɵfac = function NgbHighlight_Factory(t) {\n  return new (t || NgbHighlight)();\n};\n\nNgbHighlight.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbHighlight,\n  selectors: [[\"ngb-highlight\"]],\n  inputs: {\n    highlightClass: \"highlightClass\",\n    accentSensitive: \"accentSensitive\",\n    result: \"result\",\n    term: \"term\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"class\", 4, \"ngIf\", \"ngIfElse\"], [\"even\", \"\"]],\n  template: function NgbHighlight_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbHighlight_ng_template_0_Template, 3, 2, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.parts);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf],\n  styles: [\".ngb-highlight{font-weight:700}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nNgbHighlight.propDecorators = {\n  highlightClass: [{\n    type: Input\n  }],\n  result: [{\n    type: Input\n  }],\n  term: [{\n    type: Input\n  }],\n  accentSensitive: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbHighlight, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-highlight',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-template ngFor [ngForOf]=\\\"parts\\\" let-part let-isOdd=\\\"odd\\\">\" + \"<span *ngIf=\\\"isOdd; else even\\\" [class]=\\\"highlightClass\\\">{{part}}</span><ng-template #even>{{part}}</ng-template>\" + \"</ng-template>\",\n      styles: [\".ngb-highlight{font-weight:700}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    highlightClass: [{\n      type: Input\n    }],\n    accentSensitive: [{\n      type: Input\n    }],\n    result: [{\n      type: Input\n    }],\n    term: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbTypeaheadWindow = /*#__PURE__*/function () {\n  function NgbTypeaheadWindow() {\n    _classCallCheck(this, NgbTypeaheadWindow);\n\n    this.activeIdx = 0;\n    /**\r\n     * Flag indicating if the first row should be active initially\r\n     */\n\n    this.focusFirst = true;\n    /**\r\n     * A function used to format a given result before display. This function should return a formatted string without any\r\n     * HTML markup\r\n     */\n\n    this.formatter = toString;\n    /**\r\n     * Event raised when user selects a particular result row\r\n     */\n\n    this.selectEvent = new EventEmitter();\n    this.activeChangeEvent = new EventEmitter();\n  }\n\n  _createClass(NgbTypeaheadWindow, [{\n    key: \"hasActive\",\n    value: function hasActive() {\n      return this.activeIdx > -1 && this.activeIdx < this.results.length;\n    }\n  }, {\n    key: \"getActive\",\n    value: function getActive() {\n      return this.results[this.activeIdx];\n    }\n  }, {\n    key: \"markActive\",\n    value: function markActive(activeIdx) {\n      this.activeIdx = activeIdx;\n\n      this._activeChanged();\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.activeIdx === this.results.length - 1) {\n        this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n      } else {\n        this.activeIdx++;\n      }\n\n      this._activeChanged();\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      if (this.activeIdx < 0) {\n        this.activeIdx = this.results.length - 1;\n      } else if (this.activeIdx === 0) {\n        this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n      } else {\n        this.activeIdx--;\n      }\n\n      this._activeChanged();\n    }\n  }, {\n    key: \"resetActive\",\n    value: function resetActive() {\n      this.activeIdx = this.focusFirst ? 0 : -1;\n\n      this._activeChanged();\n    }\n  }, {\n    key: \"select\",\n    value: function select(item) {\n      this.selectEvent.emit(item);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.resetActive();\n    }\n  }, {\n    key: \"_activeChanged\",\n    value: function _activeChanged() {\n      this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    }\n  }]);\n\n  return NgbTypeaheadWindow;\n}();\n\nNgbTypeaheadWindow.ɵfac = function NgbTypeaheadWindow_Factory(t) {\n  return new (t || NgbTypeaheadWindow)();\n};\n\nNgbTypeaheadWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTypeaheadWindow,\n  selectors: [[\"ngb-typeahead-window\"]],\n  hostAttrs: [\"role\", \"listbox\"],\n  hostVars: 3,\n  hostBindings: function NgbTypeaheadWindow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function NgbTypeaheadWindow_mousedown_HostBindingHandler($event) {\n        return $event.preventDefault();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵclassMap(\"dropdown-menu show\" + (ctx.popupClass ? \" \" + ctx.popupClass : \"\"));\n    }\n  },\n  inputs: {\n    focusFirst: \"focusFirst\",\n    formatter: \"formatter\",\n    id: \"id\",\n    results: \"results\",\n    term: \"term\",\n    resultTemplate: \"resultTemplate\",\n    popupClass: \"popupClass\"\n  },\n  outputs: {\n    selectEvent: \"select\",\n    activeChangeEvent: \"activeChange\"\n  },\n  exportAs: [\"ngbTypeaheadWindow\"],\n  decls: 3,\n  vars: 1,\n  consts: [[\"rt\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"result\", \"term\"], [\"type\", \"button\", \"role\", \"option\", 1, \"dropdown-item\", 3, \"id\", \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbTypeaheadWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbTypeaheadWindow_ng_template_0_Template, 1, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbTypeaheadWindow_ng_template_2_Template, 2, 9, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.results);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, NgbHighlight, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\nNgbTypeaheadWindow.propDecorators = {\n  id: [{\n    type: Input\n  }],\n  focusFirst: [{\n    type: Input\n  }],\n  results: [{\n    type: Input\n  }],\n  term: [{\n    type: Input\n  }],\n  formatter: [{\n    type: Input\n  }],\n  resultTemplate: [{\n    type: Input\n  }],\n  popupClass: [{\n    type: Input\n  }],\n  selectEvent: [{\n    type: Output,\n    args: ['select']\n  }],\n  activeChangeEvent: [{\n    type: Output,\n    args: ['activeChange']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTypeaheadWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-typeahead-window',\n      exportAs: 'ngbTypeaheadWindow',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '(mousedown)': '$event.preventDefault()',\n        '[class]': '\"dropdown-menu show\" + (popupClass ? \" \" + popupClass : \"\")',\n        'role': 'listbox',\n        '[id]': 'id'\n      },\n      template: \"\\n    <ng-template #rt let-result=\\\"result\\\" let-term=\\\"term\\\" let-formatter=\\\"formatter\\\">\\n      <ngb-highlight [result]=\\\"formatter(result)\\\" [term]=\\\"term\\\"></ngb-highlight>\\n    </ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"results\\\" let-result let-idx=\\\"index\\\">\\n      <button type=\\\"button\\\" class=\\\"dropdown-item\\\" role=\\\"option\\\"\\n        [id]=\\\"id + '-' + idx\\\"\\n        [class.active]=\\\"idx === activeIdx\\\"\\n        (mouseenter)=\\\"markActive(idx)\\\"\\n        (click)=\\\"select(result)\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"resultTemplate || rt\\\"\\n          [ngTemplateOutletContext]=\\\"{result: result, term: term, formatter: formatter}\\\"></ng-template>\\n      </button>\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    focusFirst: [{\n      type: Input\n    }],\n    formatter: [{\n      type: Input\n    }],\n    selectEvent: [{\n      type: Output,\n      args: ['select']\n    }],\n    activeChangeEvent: [{\n      type: Output,\n      args: ['activeChange']\n    }],\n    id: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    term: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }],\n    popupClass: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', {\n  providedIn: 'root',\n  factory: ARIA_LIVE_DELAY_FACTORY\n});\n\nfunction ARIA_LIVE_DELAY_FACTORY() {\n  return 100;\n}\n\nfunction getLiveElement(document) {\n  var lazyCreate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var element = document.body.querySelector('#ngb-live');\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n    element.classList.add('sr-only');\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\nvar Live = /*#__PURE__*/function () {\n  function Live(_document, _delay) {\n    _classCallCheck(this, Live);\n\n    this._document = _document;\n    this._delay = _delay;\n  }\n\n  _createClass(Live, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var element = getLiveElement(this._document);\n\n      if (element) {\n        // if exists, it will always be attached to the <body>\n        element.parentElement.removeChild(element);\n      }\n    }\n  }, {\n    key: \"say\",\n    value: function say(message) {\n      var element = getLiveElement(this._document, true);\n      var delay = this._delay;\n\n      if (element != null) {\n        element.textContent = '';\n\n        var setText = function setText() {\n          return element.textContent = message;\n        };\n\n        if (delay === null) {\n          setText();\n        } else {\n          setTimeout(setText, delay);\n        }\n      }\n    }\n  }]);\n\n  return Live;\n}();\n\nLive.ɵfac = function Live_Factory(t) {\n  return new (t || Live)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ARIA_LIVE_DELAY));\n};\n\nLive.ɵprov = ɵɵdefineInjectable({\n  factory: function Live_Factory() {\n    return new Live(ɵɵinject(DOCUMENT), ɵɵinject(ARIA_LIVE_DELAY));\n  },\n  token: Live,\n  providedIn: \"root\"\n});\n\nLive.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [ARIA_LIVE_DELAY]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Live, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [ARIA_LIVE_DELAY]\n      }]\n    }];\n  }, null);\n})();\n/**\r\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the typeaheads used in the application.\r\n */\n\n\nvar NgbTypeaheadConfig = /*#__PURE__*/_createClass(function NgbTypeaheadConfig() {\n  _classCallCheck(this, NgbTypeaheadConfig);\n\n  this.editable = true;\n  this.focusFirst = true;\n  this.showHint = false;\n  this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n});\n\nNgbTypeaheadConfig.ɵfac = function NgbTypeaheadConfig_Factory(t) {\n  return new (t || NgbTypeaheadConfig)();\n};\n\nNgbTypeaheadConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTypeaheadConfig_Factory() {\n    return new NgbTypeaheadConfig();\n  },\n  token: NgbTypeaheadConfig,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTypeaheadConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar nextWindowId = 0;\n/**\r\n * A directive providing a simple way of creating powerful typeaheads from any text input.\r\n */\n\nvar NgbTypeahead = /*#__PURE__*/function () {\n  function NgbTypeahead(_elementRef, viewContainerRef, _renderer, injector, componentFactoryResolver, config, ngZone, _live, _document, _ngZone, _changeDetector, applicationRef) {\n    var _this58 = this;\n\n    _classCallCheck(this, NgbTypeahead);\n\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._live = _live;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._changeDetector = _changeDetector;\n    this._subscription = null;\n    this._closed$ = new Subject();\n    this._inputValueBackup = null;\n    this._windowRef = null;\n    /**\r\n     * The value for the `autocomplete` attribute for the `<input>` element.\r\n     *\r\n     * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\r\n     *\r\n     * @since 2.1.0\r\n     */\n\n    this.autocomplete = 'off';\n    /**\r\n     * The preferred placement of the typeahead.\r\n     *\r\n     * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\r\n     * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\r\n     * `\"right-bottom\"`\r\n     *\r\n     * Accepts an array of strings or a string with space separated possible values.\r\n     *\r\n     * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\r\n     *\r\n     * Please see the [positioning overview](#/positioning) for more details.\r\n     */\n\n    this.placement = 'bottom-left';\n    /**\r\n     * An event emitted right before an item is selected from the result list.\r\n     *\r\n     * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\r\n     */\n\n    this.selectItem = new EventEmitter();\n    this.activeDescendant = null;\n    this.popupId = \"ngb-typeahead-\".concat(nextWindowId++);\n\n    this._onTouched = function () {};\n\n    this._onChange = function (_) {};\n\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n    this._valueChanges = fromEvent(_elementRef.nativeElement, 'input').pipe(map(function ($event) {\n      return $event.target.value;\n    }));\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n    this._popupService = new PopupService(NgbTypeaheadWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = ngZone.onStable.subscribe(function () {\n      if (_this58.isPopupOpen()) {\n        positionElements(_this58._elementRef.nativeElement, _this58._windowRef.location.nativeElement, _this58.placement, _this58.container === 'body');\n      }\n    });\n  }\n\n  _createClass(NgbTypeahead, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._subscribeToUserInput();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_ref29) {\n      var ngbTypeahead = _ref29.ngbTypeahead;\n\n      if (ngbTypeahead && !ngbTypeahead.firstChange) {\n        this._unsubscribeFromUserInput();\n\n        this._subscribeToUserInput();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._closePopup();\n\n      this._unsubscribeFromUserInput();\n\n      this._zoneSubscription.unsubscribe();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._writeInputValue(this._formatItemForInput(value));\n\n      if (this.showHint) {\n        this._inputValueBackup = value;\n      }\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\r\n     * Dismisses typeahead popup window\r\n     */\n\n  }, {\n    key: \"dismissPopup\",\n    value: function dismissPopup() {\n      if (this.isPopupOpen()) {\n        this._resubscribeTypeahead.next(null);\n\n        this._closePopup();\n\n        if (this.showHint && this._inputValueBackup !== null) {\n          this._writeInputValue(this._inputValueBackup);\n        }\n\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\r\n     * Returns true if the typeahead popup window is displayed\r\n     */\n\n  }, {\n    key: \"isPopupOpen\",\n    value: function isPopupOpen() {\n      return this._windowRef != null;\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this._resubscribeTypeahead.next(null);\n\n      this._onTouched();\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      if (!this.isPopupOpen()) {\n        return;\n      } // tslint:disable-next-line:deprecation\n\n\n      switch (event.which) {\n        case Key.ArrowDown:\n          event.preventDefault();\n\n          this._windowRef.instance.next();\n\n          this._showHint();\n\n          break;\n\n        case Key.ArrowUp:\n          event.preventDefault();\n\n          this._windowRef.instance.prev();\n\n          this._showHint();\n\n          break;\n\n        case Key.Enter:\n        case Key.Tab:\n          var result = this._windowRef.instance.getActive();\n\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            this._selectResult(result);\n          }\n\n          this._closePopup();\n\n          break;\n      }\n    }\n  }, {\n    key: \"_openPopup\",\n    value: function _openPopup() {\n      var _this59 = this;\n\n      if (!this.isPopupOpen()) {\n        this._inputValueBackup = this._elementRef.nativeElement.value;\n\n        var _this$_popupService$o3 = this._popupService.open(),\n            windowRef = _this$_popupService$o3.windowRef;\n\n        this._windowRef = windowRef;\n        this._windowRef.instance.id = this.popupId;\n\n        this._windowRef.instance.selectEvent.subscribe(function (result) {\n          return _this59._selectResultClosePopup(result);\n        });\n\n        this._windowRef.instance.activeChangeEvent.subscribe(function (activeId) {\n          return _this59.activeDescendant = activeId;\n        });\n\n        this._windowRef.instance.popupClass = this.popupClass;\n\n        if (this.container === 'body') {\n          this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n        }\n\n        this._changeDetector.markForCheck();\n\n        ngbAutoClose(this._ngZone, this._document, 'outside', function () {\n          return _this59.dismissPopup();\n        }, this._closed$, [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n      }\n    }\n  }, {\n    key: \"_closePopup\",\n    value: function _closePopup() {\n      var _this60 = this;\n\n      this._popupService.close().subscribe(function () {\n        _this60._closed$.next();\n\n        _this60._windowRef = null;\n        _this60.activeDescendant = null;\n      });\n    }\n  }, {\n    key: \"_selectResult\",\n    value: function _selectResult(result) {\n      var defaultPrevented = false;\n      this.selectItem.emit({\n        item: result,\n        preventDefault: function preventDefault() {\n          defaultPrevented = true;\n        }\n      });\n\n      this._resubscribeTypeahead.next(null);\n\n      if (!defaultPrevented) {\n        this.writeValue(result);\n\n        this._onChange(result);\n      }\n    }\n  }, {\n    key: \"_selectResultClosePopup\",\n    value: function _selectResultClosePopup(result) {\n      this._selectResult(result);\n\n      this._closePopup();\n    }\n  }, {\n    key: \"_showHint\",\n    value: function _showHint() {\n      var _a;\n\n      if (this.showHint && ((_a = this._windowRef) === null || _a === void 0 ? void 0 : _a.instance.hasActive()) && this._inputValueBackup != null) {\n        var userInputLowerCase = this._inputValueBackup.toLowerCase();\n\n        var formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n        if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n          this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n\n          this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n        } else {\n          this._writeInputValue(formattedVal);\n        }\n      }\n    }\n  }, {\n    key: \"_formatItemForInput\",\n    value: function _formatItemForInput(item) {\n      return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    }\n  }, {\n    key: \"_writeInputValue\",\n    value: function _writeInputValue(value) {\n      this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n    }\n  }, {\n    key: \"_subscribeToUserInput\",\n    value: function _subscribeToUserInput() {\n      var _this61 = this;\n\n      var results$ = this._valueChanges.pipe(tap(function (value) {\n        _this61._inputValueBackup = _this61.showHint ? value : null;\n\n        _this61._onChange(_this61.editable ? value : undefined);\n      }), this.ngbTypeahead ? this.ngbTypeahead : function () {\n        return of([]);\n      });\n\n      this._subscription = this._resubscribeTypeahead.pipe(switchMap(function () {\n        return results$;\n      })).subscribe(function (results) {\n        if (!results || results.length === 0) {\n          _this61._closePopup();\n        } else {\n          _this61._openPopup();\n\n          _this61._windowRef.instance.focusFirst = _this61.focusFirst;\n          _this61._windowRef.instance.results = results;\n          _this61._windowRef.instance.term = _this61._elementRef.nativeElement.value;\n\n          if (_this61.resultFormatter) {\n            _this61._windowRef.instance.formatter = _this61.resultFormatter;\n          }\n\n          if (_this61.resultTemplate) {\n            _this61._windowRef.instance.resultTemplate = _this61.resultTemplate;\n          }\n\n          _this61._windowRef.instance.resetActive(); // The observable stream we are subscribing to might have async steps\n          // and if a component containing typeahead is using the OnPush strategy\n          // the change detection turn wouldn't be invoked automatically.\n\n\n          _this61._windowRef.changeDetectorRef.detectChanges();\n\n          _this61._showHint();\n        } // live announcer\n\n\n        var count = results ? results.length : 0;\n\n        _this61._live.say(count === 0 ? 'No results available' : \"\".concat(count, \" result\").concat(count === 1 ? '' : 's', \" available\"));\n      });\n    }\n  }, {\n    key: \"_unsubscribeFromUserInput\",\n    value: function _unsubscribeFromUserInput() {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n      }\n\n      this._subscription = null;\n    }\n  }]);\n\n  return NgbTypeahead;\n}();\n\nNgbTypeahead.ɵfac = function NgbTypeahead_Factory(t) {\n  return new (t || NgbTypeahead)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(NgbTypeaheadConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(Live), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\n\nNgbTypeahead.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTypeahead,\n  selectors: [[\"input\", \"ngbTypeahead\", \"\"]],\n  hostAttrs: [\"autocapitalize\", \"off\", \"autocorrect\", \"off\", \"role\", \"combobox\", \"aria-multiline\", \"false\"],\n  hostVars: 7,\n  hostBindings: function NgbTypeahead_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"blur\", function NgbTypeahead_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"keydown\", function NgbTypeahead_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"autocomplete\", ctx.autocomplete);\n      ɵngcc0.ɵɵattribute(\"aria-autocomplete\", ctx.showHint ? \"both\" : \"list\")(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-owns\", ctx.isPopupOpen() ? ctx.popupId : null)(\"aria-expanded\", ctx.isPopupOpen());\n      ɵngcc0.ɵɵclassProp(\"open\", ctx.isPopupOpen());\n    }\n  },\n  inputs: {\n    autocomplete: \"autocomplete\",\n    placement: \"placement\",\n    container: \"container\",\n    editable: \"editable\",\n    focusFirst: \"focusFirst\",\n    showHint: \"showHint\",\n    inputFormatter: \"inputFormatter\",\n    ngbTypeahead: \"ngbTypeahead\",\n    resultFormatter: \"resultFormatter\",\n    resultTemplate: \"resultTemplate\",\n    popupClass: \"popupClass\"\n  },\n  outputs: {\n    selectItem: \"selectItem\"\n  },\n  exportAs: [\"ngbTypeahead\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return NgbTypeahead;\n    }),\n    multi: true\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbTypeahead.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Injector\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: NgbTypeaheadConfig\n  }, {\n    type: NgZone\n  }, {\n    type: Live\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ApplicationRef\n  }];\n};\n\nNgbTypeahead.propDecorators = {\n  autocomplete: [{\n    type: Input\n  }],\n  container: [{\n    type: Input\n  }],\n  editable: [{\n    type: Input\n  }],\n  focusFirst: [{\n    type: Input\n  }],\n  inputFormatter: [{\n    type: Input\n  }],\n  ngbTypeahead: [{\n    type: Input\n  }],\n  resultFormatter: [{\n    type: Input\n  }],\n  resultTemplate: [{\n    type: Input\n  }],\n  showHint: [{\n    type: Input\n  }],\n  placement: [{\n    type: Input\n  }],\n  popupClass: [{\n    type: Input\n  }],\n  selectItem: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTypeahead, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbTypeahead]',\n      exportAs: 'ngbTypeahead',\n      host: {\n        '(blur)': 'handleBlur()',\n        '[class.open]': 'isPopupOpen()',\n        '(keydown)': 'handleKeyDown($event)',\n        '[autocomplete]': 'autocomplete',\n        'autocapitalize': 'off',\n        'autocorrect': 'off',\n        'role': 'combobox',\n        'aria-multiline': 'false',\n        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n        '[attr.aria-activedescendant]': 'activeDescendant',\n        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n        '[attr.aria-expanded]': 'isPopupOpen()'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return NgbTypeahead;\n        }),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: NgbTypeaheadConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: Live\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    autocomplete: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    selectItem: [{\n      type: Output\n    }],\n    container: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    focusFirst: [{\n      type: Input\n    }],\n    showHint: [{\n      type: Input\n    }],\n    inputFormatter: [{\n      type: Input\n    }],\n    ngbTypeahead: [{\n      type: Input\n    }],\n    resultFormatter: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }],\n    popupClass: [{\n      type: Input\n    }]\n  });\n})();\n\nvar NgbTypeaheadModule = /*#__PURE__*/_createClass(function NgbTypeaheadModule() {\n  _classCallCheck(this, NgbTypeaheadModule);\n});\n\nNgbTypeaheadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTypeaheadModule\n});\nNgbTypeaheadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTypeaheadModule_Factory(t) {\n    return new (t || NgbTypeaheadModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTypeaheadModule, {\n    declarations: function declarations() {\n      return [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbTypeahead, NgbHighlight];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbTypeaheadModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n      exports: [NgbTypeahead, NgbHighlight],\n      imports: [CommonModule],\n      entryComponents: [NgbTypeaheadWindow]\n    }]\n  }], null, null);\n})();\n\nvar NGB_MODULES = [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule];\n\nvar NgbModule = /*#__PURE__*/_createClass(function NgbModule() {\n  _classCallCheck(this, NgbModule);\n});\n\nNgbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbModule\n});\nNgbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbModule_Factory(t) {\n    return new (t || NgbModule)();\n  },\n  imports: [NGB_MODULES, NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbModule, {\n    imports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule],\n    exports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModule, [{\n    type: NgModule,\n    args: [{\n      imports: NGB_MODULES,\n      exports: NGB_MODULES\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { ModalDismissReasons, NgbAccordion, NgbAccordionConfig, NgbAccordionModule, NgbActiveModal, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbButtonLabel, NgbButtonsModule, NgbCalendar, NgbCalendarBuddhist, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCheckBox, NgbCollapse, NgbCollapseConfig, NgbCollapseModule, NgbConfig, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nDefault, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavLink, NgbNavModule, NgbNavOutlet, NgbNavPane, NgbNavbar, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPages, NgbPaginationPrevious, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbRadio, NgbRadioGroup, NgbRating, NgbRatingConfig, NgbRatingModule, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, NGB_CAROUSEL_DIRECTIVES as ɵa, NGB_DATEPICKER_CALENDAR_FACTORY as ɵb, ContentRef as ɵba, NgbDatepickerDayView as ɵc, NgbDatepickerNavigation as ɵd, NgbDatepickerNavigationSelect as ɵe, NGB_DATEPICKER_18N_FACTORY as ɵf, NGB_DATEPICKER_DATE_ADAPTER_FACTORY as ɵg, NgbDateStructAdapter as ɵh, NGB_DATEPICKER_PARSER_FORMATTER_FACTORY as ɵi, NgbDateISOParserFormatter as ɵj, NgbPopoverWindow as ɵk, NGB_DATEPICKER_TIME_ADAPTER_FACTORY as ɵl, NgbTimeStructAdapter as ɵm, NGB_TIMEPICKER_I18N_FACTORY as ɵn, NgbTimepickerI18nDefault as ɵo, NgbTooltipWindow as ɵp, NgbTypeaheadWindow as ɵq, NgbDatepickerService as ɵr, NgbModalBackdrop as ɵs, NgbModalWindow as ɵt, NgbModalStack as ɵu, ScrollBar as ɵv, ARIA_LIVE_DELAY as ɵw, ARIA_LIVE_DELAY_FACTORY as ɵx, Live as ɵy, NgbCalendarHijri as ɵz };","map":{"version":3,"sources":["../../src/util/util.ts","../../../src/environment.ts","../../../src/ngb-config.ts","../../src/accordion/accordion-config.ts","../src/util/transition/util.ts","../src/util/transition/ngbTransition.ts","../src/util/transition/ngbCollapseTransition.ts","../../src/accordion/accordion.ts","../../src/accordion/accordion.module.ts","../../src/alert/alert-config.ts","../../src/alert/alert-transition.ts","../../src/alert/alert.ts","../../src/alert/alert.module.ts","../../src/buttons/label.ts","../../src/buttons/checkbox.ts","../../src/buttons/radio.ts","../../src/buttons/buttons.module.ts","../../src/carousel/carousel-config.ts","../../src/carousel/carousel-transition.ts","../../src/carousel/carousel.ts","../../src/carousel/carousel.module.ts","../../src/collapse/collapse-config.ts","../../src/collapse/collapse.ts","../../src/collapse/collapse.module.ts","../../src/datepicker/ngb-date.ts","../../src/datepicker/ngb-calendar.ts","../../src/datepicker/datepicker-tools.ts","../../src/datepicker/datepicker-i18n.ts","../../src/datepicker/datepicker-service.ts","../../src/datepicker/datepicker-view-model.ts","../../src/datepicker/datepicker-config.ts","../src/datepicker/adapters/ngb-date-adapter.ts","../../src/datepicker/datepicker.ts","../../src/util/key.ts","../../src/datepicker/datepicker-keyboard-service.ts","../../src/datepicker/datepicker-month.ts","../../src/datepicker/datepicker-navigation.ts","../../src/util/autoclose.ts","../../src/util/focus-trap.ts","../../src/util/positioning.ts","../../src/datepicker/ngb-date-parser-formatter.ts","../../src/datepicker/datepicker-input-config.ts","../../src/datepicker/datepicker-input.ts","../../src/datepicker/datepicker-day-view.ts","../../src/datepicker/datepicker-navigation-select.ts","../src/datepicker/hijri/ngb-calendar-hijri.ts","../src/datepicker/hijri/ngb-calendar-islamic-civil.ts","../src/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","../src/datepicker/jalali/jalali.ts","../src/datepicker/jalali/ngb-calendar-persian.ts","../src/datepicker/hebrew/hebrew.ts","../src/datepicker/hebrew/ngb-calendar-hebrew.ts","../src/datepicker/hebrew/datepicker-i18n-hebrew.ts","../src/datepicker/buddhist/buddhist.ts","../src/datepicker/buddhist/ngb-calendar-buddhist.ts","../src/datepicker/adapters/ngb-date-native-adapter.ts","../src/datepicker/adapters/ngb-date-native-utc-adapter.ts","../../src/datepicker/datepicker.module.ts","../../src/dropdown/dropdown-config.ts","../../src/dropdown/dropdown.ts","../../src/dropdown/dropdown.module.ts","../../src/modal/modal-config.ts","../../src/util/popup.ts","../../src/util/scrollbar.ts","../../src/modal/modal-backdrop.ts","../../src/modal/modal-ref.ts","../../src/modal/modal-dismiss-reasons.ts","../../src/modal/modal-window.ts","../../src/modal/modal-stack.ts","../../src/modal/modal.ts","../../src/modal/modal.module.ts","../../src/nav/nav-config.ts","../../src/nav/nav.ts","../../src/nav/nav-transition.ts","../../src/nav/nav-outlet.ts","../../src/nav/nav.module.ts","../../src/pagination/pagination-config.ts","../../src/pagination/pagination.ts","../../src/pagination/pagination.module.ts","../../src/util/triggers.ts","../../src/popover/popover-config.ts","../../src/popover/popover.ts","../../src/popover/popover.module.ts","../../src/progressbar/progressbar-config.ts","../../src/progressbar/progressbar.ts","../../src/progressbar/progressbar.module.ts","../../src/rating/rating-config.ts","../../src/rating/rating.ts","../../src/rating/rating.module.ts","../../src/timepicker/ngb-time.ts","../../src/timepicker/timepicker-config.ts","../../src/timepicker/ngb-time-adapter.ts","../../src/timepicker/timepicker-i18n.ts","../../src/timepicker/timepicker.ts","../../src/timepicker/timepicker.module.ts","../../src/toast/toast-config.ts","../../src/toast/toast-transition.ts","../../src/toast/toast.ts","../../src/toast/toast.module.ts","../../src/tooltip/tooltip-config.ts","../../src/tooltip/tooltip.ts","../../src/tooltip/tooltip.module.ts","../../src/typeahead/highlight.ts","../../src/typeahead/typeahead-window.ts","../src/util/accessibility/live.ts","../../src/typeahead/typeahead-config.ts","../../src/typeahead/typeahead.ts","../../src/typeahead/typeahead.module.ts","../../../src/index.ts","../../../src/ng-bootstrap.ts"],"names":["nextId","mod","GREGORIAN_EPOCH","isGregorianLeapYear","fromGregorian","toGregorian"],"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","sourcesContent":["import {NgZone} from '@angular/core';\r\nimport {Observable, OperatorFunction} from 'rxjs';\r\n\r\nexport function toInteger(value: any): number {\r\n  return parseInt(`${value}`, 10);\r\n}\r\n\r\nexport function toString(value: any): string {\r\n  return (value !== undefined && value !== null) ? `${value}` : '';\r\n}\r\n\r\nexport function getValueInRange(value: number, max: number, min = 0): number {\r\n  return Math.max(Math.min(value, max), min);\r\n}\r\n\r\nexport function isString(value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n\r\nexport function isNumber(value: any): value is number {\r\n  return !isNaN(toInteger(value));\r\n}\r\n\r\nexport function isInteger(value: any): value is number {\r\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n}\r\n\r\nexport function isDefined(value: any): boolean {\r\n  return value !== undefined && value !== null;\r\n}\r\n\r\nexport function padNumber(value: number) {\r\n  if (isNumber(value)) {\r\n    return `0${value}`.slice(-2);\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\nexport function regExpEscape(text) {\r\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n\r\nexport function hasClassName(element: any, className: string): boolean {\r\n  return element && element.className && element.className.split &&\r\n      element.className.split(/\\s+/).indexOf(className) >= 0;\r\n}\r\n\r\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\r\n  // Polyfill for ie10+\r\n\r\n  if (!Element.prototype.matches) {\r\n    // IE uses the non-standard name: msMatchesSelector\r\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector || Element.prototype.webkitMatchesSelector;\r\n  }\r\n\r\n  Element.prototype.closest = function(s: string) {\r\n    let el = this;\r\n    if (!document.documentElement.contains(el)) {\r\n      return null;\r\n    }\r\n    do {\r\n      if (el.matches(s)) {\r\n        return el;\r\n      }\r\n      el = el.parentElement || el.parentNode;\r\n    } while (el !== null && el.nodeType === 1);\r\n    return null;\r\n  };\r\n}\r\n\r\nexport function closest(element: HTMLElement, selector?: string): HTMLElement | null {\r\n  if (!selector) {\r\n    return null;\r\n  }\r\n\r\n  /*\r\n   * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\r\n   * not support `Element.prototype.closest`. To emulate the correct behaviour\r\n   * we return null when the method is missing.\r\n   *\r\n   * Note that in evergreen browsers `closest(document.documentElement, 'html')`\r\n   * will return the document element whilst in Edge null will be returned. This\r\n   * compromise was deemed good enough.\r\n   */\r\n  if (typeof element.closest === 'undefined') {\r\n    return null;\r\n  }\r\n\r\n  return element.closest(selector);\r\n}\r\n\r\n/**\r\n * Force a browser reflow\r\n * @param element element where to apply the reflow\r\n */\r\nexport function reflow(element: HTMLElement) {\r\n  return (element || document.body).getBoundingClientRect();\r\n}\r\n\r\n/**\r\n * Creates an observable where all callbacks are executed inside a given zone\r\n *\r\n * @param zone\r\n */\r\nexport function runInZone<T>(zone: NgZone): OperatorFunction<T, T> {\r\n  return (source) => {\r\n    return new Observable(observer => {\r\n      const onNext = (value: T) => zone.run(() => observer.next(value));\r\n      const onError = (e: any) => zone.run(() => observer.error(e));\r\n      const onComplete = () => zone.run(() => observer.complete());\r\n      return source.subscribe(onNext, onError, onComplete);\r\n    });\r\n  };\r\n}\r\n\r\nexport function removeAccents(str: string): string {\r\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n}\r\n","export const environment = {\r\n  animation: true,\r\n  transitionTimerDelayMs: 5,\r\n};\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from './environment';\r\n\r\n/**\r\n * Global ng-bootstrap config\r\n *\r\n * @since 8.0.0\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbConfig {\r\n  animation = environment.animation;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbConfig} from '../ngb-config';\r\n\r\n/**\r\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize its properties\r\n * to provide default values for all accordions used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbAccordionConfig {\r\n  closeOthers = false;\r\n  type: string;\r\n\r\n  private _animation: boolean;\r\n\r\n  constructor(private _ngbConfig: NgbConfig) {}\r\n\r\n  get animation(): boolean { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\r\n  set animation(animation: boolean) { this._animation = animation; }\r\n}\r\n","export function getTransitionDurationMs(element: HTMLElement) {\r\n  const {transitionDelay, transitionDuration} = window.getComputedStyle(element);\r\n  const transitionDelaySec = parseFloat(transitionDelay);\r\n  const transitionDurationSec = parseFloat(transitionDuration);\r\n\r\n  return (transitionDelaySec + transitionDurationSec) * 1000;\r\n}\r\n","import {NgZone} from '@angular/core';\r\nimport {EMPTY, fromEvent, Observable, of, race, Subject, timer} from 'rxjs';\r\nimport {endWith, filter, takeUntil} from 'rxjs/operators';\r\nimport {getTransitionDurationMs} from './util';\r\nimport {environment} from '../../environment';\r\nimport {runInZone} from '../util';\r\n\r\nexport type NgbTransitionStartFn<T = any> = (element: HTMLElement, animation: boolean, context: T) =>\r\n    NgbTransitionEndFn | void;\r\nexport type NgbTransitionEndFn = () => void;\r\n\r\nexport interface NgbTransitionOptions<T> {\r\n  animation: boolean;\r\n  runningTransition: 'continue' | 'stop';\r\n  context?: T;\r\n}\r\n\r\nexport interface NgbTransitionCtx<T> {\r\n  transition$: Subject<any>;\r\n  complete: () => void;\r\n  context: T;\r\n}\r\n\r\nconst noopFn: NgbTransitionEndFn = () => {};\r\n\r\nconst {transitionTimerDelayMs} = environment;\r\nconst runningTransitions = new Map<HTMLElement, NgbTransitionCtx<any>>();\r\n\r\nexport const ngbRunTransition =\r\n    <T>(zone: NgZone, element: HTMLElement, startFn: NgbTransitionStartFn<T>, options: NgbTransitionOptions<T>):\r\n        Observable<undefined> => {\r\n\r\n          // Getting initial context from options\r\n          let context = options.context || <T>{};\r\n\r\n          // Checking if there are already running transitions on the given element.\r\n          const running = runningTransitions.get(element);\r\n          if (running) {\r\n            switch (options.runningTransition) {\r\n              // If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\r\n              // We're not emitting any values, but simply completing the observable (EMPTY).\r\n              case 'continue':\r\n                return EMPTY;\r\n              // If there is one running and we want for it to 'stop', we have to complete the running one.\r\n              // We're simply completing the running one and not emitting any values and merging newly provided context\r\n              // with the one coming from currently running transition.\r\n              case 'stop':\r\n                zone.run(() => running.transition$.complete());\r\n                context = Object.assign(running.context, context);\r\n                runningTransitions.delete(element);\r\n            }\r\n          }\r\n\r\n          // Running the start function\r\n          const endFn = startFn(element, options.animation, context) || noopFn;\r\n\r\n          // If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\r\n          // If animations are disabled, we have to emit a value and complete the observable\r\n          // In this case we have to call the end function, but can finish immediately by emitting a value,\r\n          // completing the observable and executing end functions synchronously.\r\n          if (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\r\n            zone.run(() => endFn());\r\n            return of(undefined).pipe(runInZone(zone));\r\n          }\r\n\r\n          // Starting a new transition\r\n          const transition$ = new Subject<any>();\r\n          const finishTransition$ = new Subject<any>();\r\n          const stop$ = transition$.pipe(endWith(true));\r\n          runningTransitions.set(element, {\r\n            transition$,\r\n            complete: () => {\r\n              finishTransition$.next();\r\n              finishTransition$.complete();\r\n            },\r\n            context\r\n          });\r\n\r\n          const transitionDurationMs = getTransitionDurationMs(element);\r\n\r\n          // 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\r\n          // because 'transitionend' event might not be fired in some browsers, if the transitioning\r\n          // element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\r\n          // guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\r\n          // 2. We need to filter transition end events, because they might bubble from shorter transitions\r\n          // on inner DOM elements. We're only interested in the transition on the 'element' itself.\r\n          zone.runOutsideAngular(() => {\r\n            const transitionEnd$ =\r\n                fromEvent(element, 'transitionend').pipe(takeUntil(stop$), filter(({target}) => target === element));\r\n            const timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\r\n\r\n            race(timer$, transitionEnd$, finishTransition$).pipe(takeUntil(stop$)).subscribe(() => {\r\n              runningTransitions.delete(element);\r\n              zone.run(() => {\r\n                endFn();\r\n                transition$.next();\r\n                transition$.complete();\r\n              });\r\n            });\r\n          });\r\n\r\n          return transition$.asObservable();\r\n        };\r\n\r\nexport const ngbCompleteTransition = (element: HTMLElement) => {\r\n  runningTransitions.get(element) ?.complete();\r\n};\r\n","import {NgbTransitionStartFn} from './ngbTransition';\r\nimport {reflow} from '../util';\r\n\r\nexport interface NgbCollapseCtx {\r\n  direction: 'show' | 'hide';\r\n  maxHeight?: string;\r\n}\r\n\r\nfunction measureCollapsingElementHeightPx(element: HTMLElement): string {\r\n  // SSR fix for without injecting the PlatformId\r\n  if (typeof navigator === 'undefined') {\r\n    return '0px';\r\n  }\r\n\r\n  const {classList} = element;\r\n  const hasShownClass = classList.contains('show');\r\n  if (!hasShownClass) {\r\n    classList.add('show');\r\n  }\r\n\r\n  element.style.height = '';\r\n  const height = element.getBoundingClientRect().height + 'px';\r\n\r\n  if (!hasShownClass) {\r\n    classList.remove('show');\r\n  }\r\n\r\n  return height;\r\n}\r\n\r\nexport const ngbCollapsingTransition: NgbTransitionStartFn<NgbCollapseCtx> =\r\n    (element: HTMLElement, animation: boolean, context: NgbCollapseCtx) => {\r\n      let {direction, maxHeight} = context;\r\n      const {classList} = element;\r\n\r\n      function setInitialClasses() {\r\n        classList.add('collapse');\r\n        if (direction === 'show') {\r\n          classList.add('show');\r\n        } else {\r\n          classList.remove('show');\r\n        }\r\n      }\r\n\r\n      // without animations we just need to set initial classes\r\n      if (!animation) {\r\n        setInitialClasses();\r\n        return;\r\n      }\r\n\r\n      // No maxHeight -> running the transition for the first time\r\n      if (!maxHeight) {\r\n        maxHeight = measureCollapsingElementHeightPx(element);\r\n        context.maxHeight = maxHeight;\r\n\r\n        // Fix the height before starting the animation\r\n        element.style.height = direction !== 'show' ? maxHeight : '0px';\r\n\r\n        classList.remove('collapse');\r\n        classList.remove('collapsing');\r\n        classList.remove('show');\r\n\r\n        reflow(element);\r\n\r\n        // Start the animation\r\n        classList.add('collapsing');\r\n      }\r\n\r\n      // Start or revert the animation\r\n      element.style.height = direction === 'show' ? maxHeight : '0px';\r\n\r\n      return () => {\r\n        setInitialClasses();\r\n        classList.remove('collapsing');\r\n        element.style.height = '';\r\n      };\r\n    };\r\n","import {\r\n  AfterContentChecked,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewEncapsulation,\r\n  NgZone,\r\n} from '@angular/core';\r\n\r\nimport {isString} from '../util/util';\r\n\r\nimport {NgbAccordionConfig} from './accordion-config';\r\nimport {ngbRunTransition} from '../util/transition/ngbTransition';\r\nimport {ngbCollapsingTransition} from '../util/transition/ngbCollapseTransition';\r\nimport {take} from 'rxjs/operators';\r\n\r\nlet nextId = 0;\r\n\r\n/**\r\n * The context for the [NgbPanelHeader](#/components/accordion/api#NgbPanelHeader) template\r\n *\r\n * @since 4.1.0\r\n */\r\nexport interface NgbPanelHeaderContext {\r\n  /**\r\n   * `True` if current panel is opened\r\n   */\r\n  opened: boolean;\r\n}\r\n\r\n/**\r\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\r\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\r\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\r\n *\r\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({selector: 'ng-template[ngbPanelHeader]'})\r\nexport class NgbPanelHeader {\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n\r\n/**\r\n * A directive that wraps only the panel title with HTML markup inside.\r\n *\r\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\r\n */\r\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\r\nexport class NgbPanelTitle {\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n\r\n/**\r\n * A directive that wraps the accordion panel content.\r\n */\r\n@Directive({selector: 'ng-template[ngbPanelContent]'})\r\nexport class NgbPanelContent {\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n\r\n/**\r\n * A directive that wraps an individual accordion panel with title and collapsible content.\r\n */\r\n@Directive({selector: 'ngb-panel'})\r\nexport class NgbPanel implements AfterContentChecked {\r\n  /**\r\n   *  If `true`, the panel is disabled an can't be toggled.\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   *  An optional id for the panel that must be unique on the page.\r\n   *\r\n   *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\r\n   */\r\n  @Input() id = `ngb-panel-${nextId++}`;\r\n\r\n  isOpen = false;\r\n\r\n  /* A flag to specified that the transition panel classes have been initialized */\r\n  initClassDone = false;\r\n\r\n  /* A flag to specified if the panel is currently being animated, to ensure its presence in the dom */\r\n  transitionRunning = false;\r\n\r\n  /**\r\n   *  The panel title.\r\n   *\r\n   *  You can alternatively use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to set panel title.\r\n   */\r\n  @Input() title: string;\r\n\r\n  /**\r\n   * Type of the current panel.\r\n   *\r\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\r\n   * `'secondary'`, `'light'` and `'dark'`.\r\n   */\r\n  @Input() type: string;\r\n\r\n  /**\r\n   * An optional class applied to the accordion card element that wraps both panel title and content.\r\n   *\r\n   * @since 5.3.0\r\n   */\r\n  @Input() cardClass: string;\r\n\r\n  /**\r\n   * An event emitted when the panel is shown, after the transition. It has no payload.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() shown = new EventEmitter<void>();\r\n\r\n  /**\r\n   * An event emitted when the panel is hidden, after the transition. It has no payload.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() hidden = new EventEmitter<void>();\r\n\r\n\r\n  titleTpl: NgbPanelTitle;\r\n  headerTpl: NgbPanelHeader;\r\n  contentTpl: NgbPanelContent;\r\n\r\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\r\n  @ContentChildren(NgbPanelHeader, {descendants: false}) headerTpls: QueryList<NgbPanelHeader>;\r\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\r\n\r\n  ngAfterContentChecked() {\r\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\r\n    // only @ContentChildren allows us to specify the {descendants: false} option.\r\n    // Without {descendants: false} we are hitting bugs described in:\r\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\r\n    this.titleTpl = this.titleTpls.first;\r\n    this.headerTpl = this.headerTpls.first;\r\n    this.contentTpl = this.contentTpls.first;\r\n  }\r\n}\r\n\r\n/**\r\n * An event emitted right before toggling an accordion panel.\r\n */\r\nexport interface NgbPanelChangeEvent {\r\n  /**\r\n   * The id of the accordion panel being toggled.\r\n   */\r\n  panelId: string;\r\n\r\n  /**\r\n   * The next state of the panel.\r\n   *\r\n   * `true` if it will be opened, `false` if closed.\r\n   */\r\n  nextState: boolean;\r\n\r\n  /**\r\n   * Calling this function will prevent panel toggling.\r\n   */\r\n  preventDefault: () => void;\r\n}\r\n\r\n/**\r\n * Accordion is a collection of collapsible panels (bootstrap cards).\r\n *\r\n * It can ensure only one panel is opened at a time and allows to customize panel\r\n * headers.\r\n */\r\n@Component({\r\n  selector: 'ngb-accordion',\r\n  exportAs: 'ngbAccordion',\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\r\n  template: `\r\n    <ng-template #t ngbPanelHeader let-panel>\r\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\r\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\r\n      </button>\r\n    </ng-template>\r\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\r\n      <div [class]=\"'card ' + (panel.cardClass || '')\">\r\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\r\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\r\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\r\n        </div>\r\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\r\n             *ngIf=\"!destroyOnHide || panel.isOpen || panel.transitionRunning\">\r\n          <div class=\"card-body\">\r\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef || null\"></ng-template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class NgbAccordion implements AfterContentChecked {\r\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\r\n\r\n  /**\r\n   * If `true`, accordion will be animated.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Input() animation;\r\n\r\n  /**\r\n   * An array or comma separated strings of panel ids that should be opened **initially**.\r\n   *\r\n   * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\r\n   * the `(panelChange)` event.\r\n   */\r\n  @Input() activeIds: string | readonly string[] = [];\r\n\r\n  /**\r\n   *  If `true`, only one panel could be opened at a time.\r\n   *\r\n   *  Opening a new panel will close others.\r\n   */\r\n  @Input('closeOthers') closeOtherPanels: boolean;\r\n\r\n  /**\r\n   * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\r\n   */\r\n  @Input() destroyOnHide = true;\r\n\r\n  /**\r\n   * Type of panels.\r\n   *\r\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\r\n   * `'secondary'`, `'light'` and `'dark'`.\r\n   */\r\n  @Input() type: string;\r\n\r\n  /**\r\n   * Event emitted right before the panel toggle happens.\r\n   *\r\n   * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\r\n   */\r\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\r\n\r\n  /**\r\n   * An event emitted when the expanding animation is finished on the panel. The payload is the panel id.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() shown = new EventEmitter<string>();\r\n\r\n  /**\r\n   * An event emitted when the collapsing animation is finished on the panel, and before the panel element is removed.\r\n   * The payload is the panel id.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() hidden = new EventEmitter<string>();\r\n\r\n  constructor(\r\n      config: NgbAccordionConfig, private _element: ElementRef, private _ngZone: NgZone,\r\n      private _changeDetector: ChangeDetectorRef) {\r\n    this.animation = config.animation;\r\n    this.type = config.type;\r\n    this.closeOtherPanels = config.closeOthers;\r\n  }\r\n\r\n  /**\r\n   * Checks if a panel with a given id is expanded.\r\n   */\r\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\r\n\r\n  /**\r\n   * Expands a panel with a given id.\r\n   *\r\n   * Has no effect if the panel is already expanded or disabled.\r\n   */\r\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\r\n\r\n  /**\r\n   * Expands all panels, if `[closeOthers]` is `false`.\r\n   *\r\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\r\n   */\r\n  expandAll(): void {\r\n    if (this.closeOtherPanels) {\r\n      if (this.activeIds.length === 0 && this.panels.length) {\r\n        this._changeOpenState(this.panels.first, true);\r\n      }\r\n    } else {\r\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapses a panel with the given id.\r\n   *\r\n   * Has no effect if the panel is already collapsed or disabled.\r\n   */\r\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\r\n\r\n  /**\r\n   * Collapses all opened panels.\r\n   */\r\n  collapseAll() {\r\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\r\n  }\r\n\r\n  /**\r\n   * Toggles a panel with the given id.\r\n   *\r\n   * Has no effect if the panel is disabled.\r\n   */\r\n  toggle(panelId: string) {\r\n    const panel = this._findPanelById(panelId);\r\n    if (panel) {\r\n      this._changeOpenState(panel, !panel.isOpen);\r\n    }\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    // active id updates\r\n    if (isString(this.activeIds)) {\r\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\r\n    }\r\n\r\n    // update panels open states\r\n    this.panels.forEach(panel => { panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1; });\r\n\r\n    // closeOthers updates\r\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\r\n      this._closeOthers(this.activeIds[0], false);\r\n      this._updateActiveIds();\r\n    }\r\n\r\n    // Setup the initial classes here\r\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\r\n      this.panels.forEach(panel => {\r\n        const panelElement = this._getPanelElement(panel.id);\r\n        if (panelElement) {\r\n          if (!panel.initClassDone) {\r\n            panel.initClassDone = true;\r\n            ngbRunTransition(this._ngZone, panelElement, ngbCollapsingTransition, {\r\n              animation: false,\r\n              runningTransition: 'continue',\r\n              context: {direction: panel.isOpen ? 'show' : 'hide'}\r\n            });\r\n          }\r\n        } else {\r\n          // Classes must be initialized next time it will be in the dom\r\n          panel.initClassDone = false;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private _changeOpenState(panel: NgbPanel | null, nextState: boolean) {\r\n    if (panel != null && !panel.disabled && panel.isOpen !== nextState) {\r\n      let defaultPrevented = false;\r\n\r\n      this.panelChange.emit(\r\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\r\n\r\n      if (!defaultPrevented) {\r\n        panel.isOpen = nextState;\r\n        panel.transitionRunning = true;\r\n\r\n        if (nextState && this.closeOtherPanels) {\r\n          this._closeOthers(panel.id);\r\n        }\r\n        this._updateActiveIds();\r\n        this._runTransitions(this.animation);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _closeOthers(panelId: string, enableTransition = true) {\r\n    this.panels.forEach(panel => {\r\n      if (panel.id !== panelId && panel.isOpen) {\r\n        panel.isOpen = false;\r\n        panel.transitionRunning = enableTransition;\r\n      }\r\n    });\r\n  }\r\n\r\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId) || null; }\r\n\r\n  private _updateActiveIds() {\r\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\r\n  }\r\n\r\n  private _runTransitions(animation: boolean) {\r\n    // detectChanges is performed to ensure that all panels are in the dom (via transitionRunning = true)\r\n    // before starting the animation\r\n    this._changeDetector.detectChanges();\r\n\r\n    this.panels.forEach(panel => {\r\n      // When panel.transitionRunning is true, the transition needs to be started OR reversed,\r\n      // The direction (show or hide) is choosen by each panel.isOpen state\r\n      if (panel.transitionRunning) {\r\n        const panelElement = this._getPanelElement(panel.id);\r\n        ngbRunTransition(this._ngZone, panelElement !, ngbCollapsingTransition, {\r\n          animation,\r\n          runningTransition: 'stop',\r\n          context: {direction: panel.isOpen ? 'show' : 'hide'}\r\n        }).subscribe(() => {\r\n          panel.transitionRunning = false;\r\n          const {id} = panel;\r\n          if (panel.isOpen) {\r\n            panel.shown.emit();\r\n            this.shown.emit(id);\r\n          } else {\r\n            panel.hidden.emit();\r\n            this.hidden.emit(id);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private _getPanelElement(panelId: string): HTMLElement | null {\r\n    return this._element.nativeElement.querySelector('#' + panelId);\r\n  }\r\n}\r\n\r\n/**\r\n * A directive to put on a button that toggles panel opening and closing.\r\n *\r\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({\r\n  selector: 'button[ngbPanelToggle]',\r\n  host: {\r\n    'type': 'button',\r\n    '[disabled]': 'panel.disabled',\r\n    '[class.collapsed]': '!panel.isOpen',\r\n    '[attr.aria-expanded]': 'panel.isOpen',\r\n    '[attr.aria-controls]': 'panel.id',\r\n    '(click)': 'accordion.toggle(panel.id)'\r\n  }\r\n})\r\nexport class NgbPanelToggle {\r\n  static ngAcceptInputType_ngbPanelToggle: NgbPanel | '';\r\n\r\n  @Input()\r\n  set ngbPanelToggle(panel: NgbPanel) {\r\n    if (panel) {\r\n      this.panel = panel;\r\n    }\r\n  }\r\n\r\n  constructor(public accordion: NgbAccordion, @Optional() @Host() public panel: NgbPanel) {}\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle} from './accordion';\r\n\r\nexport {\r\n  NgbAccordion,\r\n  NgbPanel,\r\n  NgbPanelTitle,\r\n  NgbPanelContent,\r\n  NgbPanelChangeEvent,\r\n  NgbPanelHeader,\r\n  NgbPanelHeaderContext,\r\n  NgbPanelToggle\r\n} from './accordion';\r\nexport {NgbAccordionConfig} from './accordion-config';\r\n\r\nconst NGB_ACCORDION_DIRECTIVES =\r\n    [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\r\n\r\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\r\nexport class NgbAccordionModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbConfig} from '../ngb-config';\r\n\r\n/**\r\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize its properties\r\n * to provide default values for all alerts used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbAlertConfig {\r\n  dismissible = true;\r\n  type = 'warning';\r\n\r\n  private _animation: boolean;\r\n\r\n  constructor(private _ngbConfig: NgbConfig) {}\r\n\r\n  get animation(): boolean { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\r\n  set animation(animation: boolean) { this._animation = animation; }\r\n}\r\n","import {NgbTransitionStartFn} from '../util/transition/ngbTransition';\r\n\r\nexport const ngbAlertFadingTransition: NgbTransitionStartFn = ({classList}: HTMLElement) => {\r\n  classList.remove('show');\r\n};\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  Renderer2,\r\n  ElementRef,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewEncapsulation,\r\n  NgZone\r\n} from '@angular/core';\r\n\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {NgbAlertConfig} from './alert-config';\r\nimport {ngbRunTransition} from '../util/transition/ngbTransition';\r\nimport {ngbAlertFadingTransition} from './alert-transition';\r\n\r\n/**\r\n * Alert is a component to provide contextual feedback messages for user.\r\n *\r\n * It supports several alert types and can be dismissed.\r\n */\r\n@Component({\r\n  selector: 'ngb-alert',\r\n  exportAs: 'ngbAlert',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  host:\r\n      {'role': 'alert', 'class': 'alert show', '[class.fade]': 'animation', '[class.alert-dismissible]': 'dismissible'},\r\n  template: `\r\n    <ng-content></ng-content>\r\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\r\n      (click)=\"close()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n    `,\r\n  styleUrls: ['./alert.scss']\r\n})\r\nexport class NgbAlert implements OnInit,\r\n    OnChanges {\r\n  /**\r\n   * If `true`, alert closing will be animated.\r\n   *\r\n   * Animation is triggered only when clicked on the close button (×)\r\n   * or via the `.close()` function\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Input() animation: boolean;\r\n\r\n  /**\r\n   * If `true`, alert can be dismissed by the user.\r\n   *\r\n   * The close button (×) will be displayed and you can be notified\r\n   * of the event with the `(close)` output.\r\n   */\r\n  @Input() dismissible: boolean;\r\n\r\n  /**\r\n   * Type of the alert.\r\n   *\r\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\r\n   * `'secondary'`, `'light'` and `'dark'`.\r\n   */\r\n  @Input() type: string;\r\n\r\n  /**\r\n   * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() closed = new EventEmitter<void>();\r\n\r\n\r\n  constructor(\r\n      config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef, private _zone: NgZone) {\r\n    this.dismissible = config.dismissible;\r\n    this.type = config.type;\r\n    this.animation = config.animation;\r\n  }\r\n\r\n  /**\r\n   * Triggers alert closing programmatically (same as clicking on the close button (×)).\r\n   *\r\n   * The returned observable will emit and be completed once the closing transition has finished.\r\n   * If the animations are turned off this happens synchronously.\r\n   *\r\n   * Alternatively you could listen or subscribe to the `(closed)` output\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  close(): Observable<void> {\r\n    const transition = ngbRunTransition(\r\n        this._zone, this._element.nativeElement, ngbAlertFadingTransition,\r\n        {animation: this.animation, runningTransition: 'continue'});\r\n    transition.subscribe(() => this.closed.emit());\r\n    return transition;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const typeChange = changes['type'];\r\n    if (typeChange && !typeChange.firstChange) {\r\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\r\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\r\n    }\r\n  }\r\n\r\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbAlert} from './alert';\r\n\r\nexport {NgbAlert} from './alert';\r\nexport {NgbAlertConfig} from './alert-config';\r\n\r\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\r\nexport class NgbAlertModule {\r\n}\r\n","import {Directive} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ngbButtonLabel]',\r\n  host:\r\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\r\n})\r\nexport class NgbButtonLabel {\r\n  active: boolean;\r\n  disabled: boolean;\r\n  focused: boolean;\r\n}\r\n","import {ChangeDetectorRef, Directive, forwardRef, Input} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\nimport {NgbButtonLabel} from './label';\r\n\r\n/**\r\n * Allows to easily create Bootstrap-style checkbox buttons.\r\n *\r\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\r\n * either in a reactive or template-driven way.\r\n */\r\n@Directive({\r\n  selector: '[ngbButton][type=checkbox]',\r\n  host: {\r\n    '[checked]': 'checked',\r\n    '[disabled]': 'disabled',\r\n    '(change)': 'onInputChange($event)',\r\n    '(focus)': 'focused = true',\r\n    '(blur)': 'focused = false'\r\n  },\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbCheckBox), multi: true}]\r\n})\r\nexport class NgbCheckBox implements ControlValueAccessor {\r\n  static ngAcceptInputType_disabled: boolean | '';\r\n\r\n  checked;\r\n\r\n  /**\r\n   * If `true`, the checkbox button will be disabled\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   * The form control value when the checkbox is checked.\r\n   */\r\n  @Input() valueChecked = true;\r\n\r\n  /**\r\n   * The form control value when the checkbox is unchecked.\r\n   */\r\n  @Input() valueUnChecked = false;\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  set focused(isFocused: boolean) {\r\n    this._label.focused = isFocused;\r\n    if (!isFocused) {\r\n      this.onTouched();\r\n    }\r\n  }\r\n\r\n  constructor(private _label: NgbButtonLabel, private _cd: ChangeDetectorRef) {}\r\n\r\n  onInputChange($event) {\r\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\r\n    this.onChange(modelToPropagate);\r\n    this.onTouched();\r\n    this.writeValue(modelToPropagate);\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this._label.disabled = isDisabled;\r\n  }\r\n\r\n  writeValue(value) {\r\n    this.checked = value === this.valueChecked;\r\n    this._label.active = this.checked;\r\n\r\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\r\n    this._cd.markForCheck();\r\n  }\r\n}\r\n","import {ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\nimport {NgbButtonLabel} from './label';\r\n\r\nlet nextId = 0;\r\n\r\n/**\r\n * Allows to easily create Bootstrap-style radio buttons.\r\n *\r\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\r\n * either in a reactive or template-driven way.\r\n */\r\n@Directive({\r\n  selector: '[ngbRadioGroup]',\r\n  host: {'role': 'radiogroup'},\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRadioGroup), multi: true}]\r\n})\r\nexport class NgbRadioGroup implements ControlValueAccessor {\r\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\r\n  private _value = null;\r\n  private _disabled: boolean;\r\n\r\n  get disabled() { return this._disabled; }\r\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\r\n\r\n  /**\r\n   * Name of the radio group applied to radio input elements.\r\n   *\r\n   * Will be applied to all radio input elements inside the group,\r\n   * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\r\n   *\r\n   * If not provided, will be generated in the `ngb-radio-xx` format.\r\n   */\r\n  @Input() name = `ngb-radio-${nextId++}`;\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  onRadioChange(radio: NgbRadio) {\r\n    this.writeValue(radio.value);\r\n    this.onChange(radio.value);\r\n  }\r\n\r\n  onRadioValueUpdate() { this._updateRadiosValue(); }\r\n\r\n  register(radio: NgbRadio) { this._radios.add(radio); }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this._disabled = isDisabled;\r\n    this._updateRadiosDisabled();\r\n  }\r\n\r\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\r\n\r\n  writeValue(value) {\r\n    this._value = value;\r\n    this._updateRadiosValue();\r\n  }\r\n\r\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\r\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\r\n}\r\n\r\n\r\n/**\r\n * A directive that marks an input of type \"radio\" as a part of the\r\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\r\n */\r\n@Directive({\r\n  selector: '[ngbButton][type=radio]',\r\n  host: {\r\n    '[checked]': 'checked',\r\n    '[disabled]': 'disabled',\r\n    '[name]': 'nameAttr',\r\n    '(change)': 'onChange()',\r\n    '(focus)': 'focused = true',\r\n    '(blur)': 'focused = false'\r\n  }\r\n})\r\nexport class NgbRadio implements OnDestroy {\r\n  static ngAcceptInputType_disabled: boolean | '';\r\n\r\n  private _checked: boolean;\r\n  private _disabled: boolean;\r\n  private _value: any = null;\r\n\r\n  /**\r\n   * The value for the 'name' property of the input element.\r\n   *\r\n   * All inputs of the radio group should have the same name. If not specified,\r\n   * the name of the enclosing group is used.\r\n   */\r\n  @Input() name: string;\r\n\r\n  /**\r\n   * The form control value when current radio button is checked.\r\n   */\r\n  @Input('value')\r\n  set value(value: any) {\r\n    this._value = value;\r\n    const stringValue = value ? value.toString() : '';\r\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\r\n    this._group.onRadioValueUpdate();\r\n  }\r\n\r\n  /**\r\n   * If `true`, current radio button will be disabled.\r\n   */\r\n  @Input('disabled')\r\n  set disabled(isDisabled: boolean) {\r\n    this._disabled = isDisabled !== false;\r\n    this.updateDisabled();\r\n  }\r\n\r\n  set focused(isFocused: boolean) {\r\n    if (this._label) {\r\n      this._label.focused = isFocused;\r\n    }\r\n    if (!isFocused) {\r\n      this._group.onTouched();\r\n    }\r\n  }\r\n\r\n  get checked() { return this._checked; }\r\n\r\n  get disabled() { return this._group.disabled || this._disabled; }\r\n\r\n  get value() { return this._value; }\r\n\r\n  get nameAttr() { return this.name || this._group.name; }\r\n\r\n  constructor(\r\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\r\n      private _element: ElementRef<HTMLInputElement>, private _cd: ChangeDetectorRef) {\r\n    this._group.register(this);\r\n    this.updateDisabled();\r\n  }\r\n\r\n  ngOnDestroy() { this._group.unregister(this); }\r\n\r\n  onChange() { this._group.onRadioChange(this); }\r\n\r\n  updateValue(value) {\r\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\r\n    if (this.value !== value) {\r\n      this._cd.markForCheck();\r\n    }\r\n\r\n    this._checked = this.value === value;\r\n    this._label.active = this._checked;\r\n  }\r\n\r\n  updateDisabled() { this._label.disabled = this.disabled; }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {NgbButtonLabel} from './label';\r\nimport {NgbCheckBox} from './checkbox';\r\nimport {NgbRadio, NgbRadioGroup} from './radio';\r\n\r\nexport {NgbButtonLabel} from './label';\r\nexport {NgbCheckBox} from './checkbox';\r\nexport {NgbRadio, NgbRadioGroup} from './radio';\r\n\r\n\r\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\r\n\r\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\r\nexport class NgbButtonsModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbConfig} from '../ngb-config';\r\n\r\n/**\r\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize its properties\r\n * to provide default values for all carousels used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbCarouselConfig {\r\n  interval = 5000;\r\n  wrap = true;\r\n  keyboard = true;\r\n  pauseOnHover = true;\r\n  pauseOnFocus = true;\r\n  showNavigationArrows = true;\r\n  showNavigationIndicators = true;\r\n\r\n  private _animation: boolean;\r\n\r\n  constructor(private _ngbConfig: NgbConfig) {}\r\n\r\n  get animation(): boolean { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\r\n  set animation(animation: boolean) { this._animation = animation; }\r\n}\r\n","import {NgbTransitionStartFn} from '../util/transition/ngbTransition';\r\nimport {reflow} from '../util/util';\r\n\r\n/**\r\n * Defines the carousel slide transition direction.\r\n */\r\nexport enum NgbSlideEventDirection {\r\n  LEFT = 'left',\r\n  RIGHT = 'right'\r\n}\r\n\r\nexport interface NgbCarouselCtx { direction: 'left' | 'right'; }\r\n\r\nconst isBeingAnimated = ({classList}: HTMLElement) => {\r\n  return classList.contains('carousel-item-left') || classList.contains('carousel-item-right');\r\n};\r\n\r\nconst removeDirectionClasses = (classList: DOMTokenList) => {\r\n  classList.remove('carousel-item-left');\r\n  classList.remove('carousel-item-right');\r\n};\r\n\r\nconst removeClasses = (classList: DOMTokenList) => {\r\n  removeDirectionClasses(classList);\r\n  classList.remove('carousel-item-prev');\r\n  classList.remove('carousel-item-next');\r\n};\r\n\r\nexport const ngbCarouselTransitionIn: NgbTransitionStartFn<NgbCarouselCtx> =\r\n    (element: HTMLElement, animation: boolean, {direction}: NgbCarouselCtx) => {\r\n      const {classList} = element;\r\n\r\n      if (!animation) {\r\n        removeDirectionClasses(classList);\r\n        removeClasses(classList);\r\n        classList.add('active');\r\n        return;\r\n      }\r\n\r\n      if (isBeingAnimated(element)) {\r\n        // Revert the transition\r\n        removeDirectionClasses(classList);\r\n      } else {\r\n        // For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\r\n        classList.add('carousel-item-' + (direction === NgbSlideEventDirection.LEFT ? 'next' : 'prev'));\r\n        reflow(element);\r\n        classList.add('carousel-item-' + direction);\r\n      }\r\n\r\n      return () => {\r\n        removeClasses(classList);\r\n        classList.add('active');\r\n      };\r\n    };\r\n\r\nexport const ngbCarouselTransitionOut: NgbTransitionStartFn<NgbCarouselCtx> =\r\n    (element: HTMLElement, animation: boolean, {direction}: NgbCarouselCtx) => {\r\n      const {classList} = element;\r\n\r\n      if (!animation) {\r\n        removeDirectionClasses(classList);\r\n        removeClasses(classList);\r\n        classList.remove('active');\r\n        return;\r\n      }\r\n\r\n      //  direction is left or right, depending on the way the slide goes out.\r\n      if (isBeingAnimated(element)) {\r\n        // Revert the transition\r\n        removeDirectionClasses(classList);\r\n      } else {\r\n        classList.add('carousel-item-' + direction);\r\n      }\r\n\r\n      return () => {\r\n        removeClasses(classList);\r\n        classList.remove('active');\r\n      };\r\n    };\r\n","import {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Output,\r\n  PLATFORM_ID,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewEncapsulation,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\n\r\nimport {NgbCarouselConfig} from './carousel-config';\r\n\r\nimport {BehaviorSubject, combineLatest, NEVER, Observable, Subject, timer, zip} from 'rxjs';\r\nimport {distinctUntilChanged, map, startWith, switchMap, take, takeUntil} from 'rxjs/operators';\r\nimport {ngbCompleteTransition, ngbRunTransition, NgbTransitionOptions} from '../util/transition/ngbTransition';\r\nimport {\r\n  ngbCarouselTransitionIn,\r\n  ngbCarouselTransitionOut,\r\n  NgbSlideEventDirection,\r\n  NgbCarouselCtx\r\n} from './carousel-transition';\r\n\r\nlet nextId = 0;\r\n\r\n/**\r\n * A directive that wraps the individual carousel slide.\r\n */\r\n@Directive({selector: 'ng-template[ngbSlide]'})\r\nexport class NgbSlide {\r\n  /**\r\n   * Slide id that must be unique for the entire document.\r\n   *\r\n   * If not provided, will be generated in the `ngb-slide-xx` format.\r\n   */\r\n  @Input() id = `ngb-slide-${nextId++}`;\r\n\r\n  /**\r\n   * An event emitted when the slide transition is finished\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() slid = new EventEmitter<NgbSingleSlideEvent>();\r\n\r\n  constructor(public tplRef: TemplateRef<any>) {}\r\n}\r\n\r\n/**\r\n * Carousel is a component to easily create and control slideshows.\r\n *\r\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\r\n */\r\n@Component({\r\n  selector: 'ngb-carousel',\r\n  exportAs: 'ngbCarousel',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    'class': 'carousel slide',\r\n    '[style.display]': '\"block\"',\r\n    'tabIndex': '0',\r\n    '(keydown.arrowLeft)': 'keyboard && arrowLeft()',\r\n    '(keydown.arrowRight)': 'keyboard && arrowRight()',\r\n    '(mouseenter)': 'mouseHover = true',\r\n    '(mouseleave)': 'mouseHover = false',\r\n    '(focusin)': 'focused = true',\r\n    '(focusout)': 'focused = false',\r\n    '[attr.aria-activedescendant]': `'slide-' + activeId`\r\n  },\r\n  template: `\r\n    <ol class=\"carousel-indicators\" [class.sr-only]=\"!showNavigationIndicators\" role=\"tablist\">\r\n      <li *ngFor=\"let slide of slides\" [class.active]=\"slide.id === activeId\"\r\n          role=\"tab\" [attr.aria-labelledby]=\"'slide-' + slide.id\" [attr.aria-controls]=\"'slide-' + slide.id\"\r\n          [attr.aria-selected]=\"slide.id === activeId\"\r\n          (click)=\"focus();select(slide.id, NgbSlideEventSource.INDICATOR);\"></li>\r\n    </ol>\r\n    <div class=\"carousel-inner\">\r\n      <div *ngFor=\"let slide of slides; index as i; count as c\" class=\"carousel-item\" [id]=\"'slide-' + slide.id\" role=\"tabpanel\">\r\n        <span class=\"sr-only\" i18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\">\r\n          Slide {{i + 1}} of {{c}}\r\n        </span>\r\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\r\n      </div>\r\n    </div>\r\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"arrowLeft()\" *ngIf=\"showNavigationArrows\">\r\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\r\n    </a>\r\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"arrowRight()\" *ngIf=\"showNavigationArrows\">\r\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\r\n    </a>\r\n  `\r\n})\r\nexport class NgbCarousel implements AfterContentChecked,\r\n    AfterContentInit, AfterViewInit, OnDestroy {\r\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\r\n\r\n  public NgbSlideEventSource = NgbSlideEventSource;\r\n\r\n  private _destroy$ = new Subject<void>();\r\n  private _interval$ = new BehaviorSubject(0);\r\n  private _mouseHover$ = new BehaviorSubject(false);\r\n  private _focused$ = new BehaviorSubject(false);\r\n  private _pauseOnHover$ = new BehaviorSubject(false);\r\n  private _pauseOnFocus$ = new BehaviorSubject(false);\r\n  private _pause$ = new BehaviorSubject(false);\r\n  private _wrap$ = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * A flag to enable/disable the animations.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Input() animation: boolean;\r\n\r\n  /**\r\n   * The slide id that should be displayed **initially**.\r\n   *\r\n   * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\r\n   */\r\n  @Input() activeId: string;\r\n\r\n  /**\r\n   * Time in milliseconds before the next slide is shown.\r\n   */\r\n  @Input()\r\n  set interval(value: number) {\r\n    this._interval$.next(value);\r\n  }\r\n\r\n  get interval() { return this._interval$.value; }\r\n\r\n  /**\r\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\r\n   */\r\n  @Input()\r\n  set wrap(value: boolean) {\r\n    this._wrap$.next(value);\r\n  }\r\n\r\n  get wrap() { return this._wrap$.value; }\r\n\r\n  /**\r\n   * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\r\n   */\r\n  @Input() keyboard: boolean;\r\n\r\n  /**\r\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\r\n   *\r\n   * @since 2.2.0\r\n   */\r\n  @Input()\r\n  set pauseOnHover(value: boolean) {\r\n    this._pauseOnHover$.next(value);\r\n  }\r\n\r\n  get pauseOnHover() { return this._pauseOnHover$.value; }\r\n\r\n  /**\r\n   * If `true`, will pause slide switching when the focus is inside the carousel.\r\n   */\r\n  @Input()\r\n  set pauseOnFocus(value: boolean) {\r\n    this._pauseOnFocus$.next(value);\r\n  }\r\n\r\n  get pauseOnFocus() { return this._pauseOnFocus$.value; }\r\n\r\n  /**\r\n   * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\r\n   *\r\n   * @since 2.2.0\r\n   */\r\n  @Input() showNavigationArrows: boolean;\r\n\r\n  /**\r\n   * If `true`, navigation indicators at the bottom of the slide will be visible.\r\n   *\r\n   * @since 2.2.0\r\n   */\r\n  @Input() showNavigationIndicators: boolean;\r\n\r\n  /**\r\n   * An event emitted just before the slide transition starts.\r\n   *\r\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\r\n   */\r\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\r\n\r\n  /**\r\n   * An event emitted right after the slide transition is completed.\r\n   *\r\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() slid = new EventEmitter<NgbSlideEvent>();\r\n\r\n  /*\r\n   * Keep the ids of the panels currently transitionning\r\n   * in order to allow only the transition revertion\r\n   */\r\n  private _transitionIds: [string, string] | null = null;\r\n\r\n  set mouseHover(value: boolean) { this._mouseHover$.next(value); }\r\n\r\n  get mouseHover() { return this._mouseHover$.value; }\r\n\r\n  set focused(value: boolean) { this._focused$.next(value); }\r\n\r\n  get focused() { return this._focused$.value; }\r\n\r\n  constructor(\r\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\r\n      private _cd: ChangeDetectorRef, private _container: ElementRef) {\r\n    this.animation = config.animation;\r\n    this.interval = config.interval;\r\n    this.wrap = config.wrap;\r\n    this.keyboard = config.keyboard;\r\n    this.pauseOnHover = config.pauseOnHover;\r\n    this.pauseOnFocus = config.pauseOnFocus;\r\n    this.showNavigationArrows = config.showNavigationArrows;\r\n    this.showNavigationIndicators = config.showNavigationIndicators;\r\n  }\r\n\r\n  arrowLeft() {\r\n    this.focus();\r\n    this.prev(NgbSlideEventSource.ARROW_LEFT);\r\n  }\r\n\r\n  arrowRight() {\r\n    this.focus();\r\n    this.next(NgbSlideEventSource.ARROW_RIGHT);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // setInterval() doesn't play well with SSR and protractor,\r\n    // so we should run it in the browser and outside Angular\r\n    if (isPlatformBrowser(this._platformId)) {\r\n      this._ngZone.runOutsideAngular(() => {\r\n        const hasNextSlide$ = combineLatest([\r\n                                this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)),\r\n                                this._wrap$, this.slides.changes.pipe(startWith(null))\r\n                              ])\r\n                                  .pipe(\r\n                                      map(([currentSlideId, wrap]) => {\r\n                                        const slideArr = this.slides.toArray();\r\n                                        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\r\n                                        return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\r\n                                      }),\r\n                                      distinctUntilChanged());\r\n        combineLatest([\r\n          this._pause$, this._pauseOnHover$, this._mouseHover$, this._pauseOnFocus$, this._focused$, this._interval$,\r\n          hasNextSlide$\r\n        ])\r\n            .pipe(\r\n                map(([pause, pauseOnHover, mouseHover, pauseOnFocus, focused, interval,\r\n                      hasNextSlide]: [boolean, boolean, boolean, boolean, boolean, number, boolean]) =>\r\n                        ((pause || (pauseOnHover && mouseHover) || (pauseOnFocus && focused) || !hasNextSlide) ?\r\n                             0 :\r\n                             interval)),\r\n\r\n                distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER),\r\n                takeUntil(this._destroy$))\r\n            .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\r\n      });\r\n    }\r\n\r\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => {\r\n      this._transitionIds ?.forEach(id => ngbCompleteTransition(this._getSlideElement(id)));\r\n      this._transitionIds = null;\r\n\r\n      this._cd.markForCheck();\r\n\r\n      // The following code need to be done asynchronously, after the dom becomes stable,\r\n      // otherwise all changes will be undone.\r\n      this._ngZone.onStable.pipe(take(1)).subscribe(() => {\r\n        for (const { id } of this.slides) {\r\n          const element = this._getSlideElement(id);\r\n          if (id === this.activeId) {\r\n            element.classList.add('active');\r\n          } else {\r\n            element.classList.remove('active');\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    let activeSlide = this._getSlideById(this.activeId);\r\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : '');\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // Initialize the 'active' class (not managed by the template)\r\n    if (this.activeId) {\r\n      const element = this._getSlideElement(this.activeId);\r\n      if (element) {\r\n        element.classList.add('active');\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() { this._destroy$.next(); }\r\n\r\n  /**\r\n   * Navigates to a slide with the specified identifier.\r\n   */\r\n  select(slideId: string, source?: NgbSlideEventSource) {\r\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\r\n  }\r\n\r\n  /**\r\n   * Navigates to the previous slide.\r\n   */\r\n  prev(source?: NgbSlideEventSource) {\r\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\r\n  }\r\n\r\n  /**\r\n   * Navigates to the next slide.\r\n   */\r\n  next(source?: NgbSlideEventSource) {\r\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\r\n  }\r\n\r\n  /**\r\n   * Pauses cycling through the slides.\r\n   */\r\n  pause() { this._pause$.next(true); }\r\n\r\n  /**\r\n   * Restarts cycling through the slides from left to right.\r\n   */\r\n  cycle() { this._pause$.next(false); }\r\n\r\n  /**\r\n   * Set the focus on the carousel.\r\n   */\r\n  focus() { this._container.nativeElement.focus(); }\r\n\r\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection, source?: NgbSlideEventSource) {\r\n    const transitionIds = this._transitionIds;\r\n    if (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\r\n      // Revert prevented\r\n      return;\r\n    }\r\n\r\n    let selectedSlide = this._getSlideById(slideIdx);\r\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\r\n      this._transitionIds = [this.activeId, slideIdx];\r\n      this.slide.emit(\r\n          {prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source});\r\n\r\n      const options: NgbTransitionOptions<NgbCarouselCtx> = {\r\n        animation: this.animation,\r\n        runningTransition: 'stop',\r\n        context: {direction},\r\n      };\r\n\r\n      const transitions: Array<Observable<any>> = [];\r\n      const activeSlide = this._getSlideById(this.activeId);\r\n      if (activeSlide) {\r\n        const activeSlideTransition =\r\n            ngbRunTransition(this._ngZone, this._getSlideElement(activeSlide.id), ngbCarouselTransitionOut, options);\r\n        activeSlideTransition.subscribe(() => { activeSlide.slid.emit({isShown: false, direction, source}); });\r\n        transitions.push(activeSlideTransition);\r\n      }\r\n\r\n      const previousId = this.activeId;\r\n      this.activeId = selectedSlide.id;\r\n      const nextSlide = this._getSlideById(this.activeId);\r\n      const transition =\r\n          ngbRunTransition(this._ngZone, this._getSlideElement(selectedSlide.id), ngbCarouselTransitionIn, options);\r\n      transition.subscribe(() => { nextSlide ?.slid.emit({isShown: true, direction, source}); });\r\n      transitions.push(transition);\r\n\r\n      zip(...transitions).pipe(take(1)).subscribe(() => {\r\n        this._transitionIds = null;\r\n        this.slid.emit(\r\n            {prev: previousId, current: selectedSlide !.id, direction: direction, paused: this._pause$.value, source});\r\n      });\r\n    }\r\n\r\n    // we get here after the interval fires or any external API call like next(), prev() or select()\r\n    this._cd.markForCheck();\r\n  }\r\n\r\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\r\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\r\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\r\n\r\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\r\n  }\r\n\r\n  private _getSlideById(slideId: string): NgbSlide | null {\r\n    return this.slides.find(slide => slide.id === slideId) || null;\r\n  }\r\n\r\n  private _getSlideIdxById(slideId: string): number {\r\n    const slide = this._getSlideById(slideId);\r\n    return slide != null ? this.slides.toArray().indexOf(slide) : -1;\r\n  }\r\n\r\n  private _getNextSlide(currentSlideId: string): string {\r\n    const slideArr = this.slides.toArray();\r\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\r\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\r\n\r\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\r\n                         slideArr[currentSlideIdx + 1].id;\r\n  }\r\n\r\n  private _getPrevSlide(currentSlideId: string): string {\r\n    const slideArr = this.slides.toArray();\r\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\r\n    const isFirstSlide = currentSlideIdx === 0;\r\n\r\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\r\n                          slideArr[currentSlideIdx - 1].id;\r\n  }\r\n\r\n  private _getSlideElement(slideId: string): HTMLElement {\r\n    return this._container.nativeElement.querySelector(`#slide-${slideId}`);\r\n  }\r\n}\r\n\r\n/**\r\n * A slide change event emitted right after the slide transition is completed.\r\n */\r\nexport interface NgbSlideEvent {\r\n  /**\r\n   * The previous slide id.\r\n   */\r\n  prev: string;\r\n\r\n  /**\r\n   * The current slide id.\r\n   */\r\n  current: string;\r\n\r\n  /**\r\n   * The slide event direction.\r\n   *\r\n   * Possible values are `'left' | 'right'`.\r\n   */\r\n  direction: NgbSlideEventDirection;\r\n\r\n  /**\r\n   * Whether the pause() method was called (and no cycle() call was done afterwards).\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  paused: boolean;\r\n\r\n  /**\r\n   * Source triggering the slide change event.\r\n   *\r\n   * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  source?: NgbSlideEventSource;\r\n}\r\n\r\n/**\r\n * A slide change event emitted right after the slide transition is completed.\r\n *\r\n * @since 8.0.0\r\n */\r\nexport interface NgbSingleSlideEvent {\r\n  /**\r\n   * true if the slide is shown, false otherwise\r\n   */\r\n  isShown: boolean;\r\n\r\n  /**\r\n   * The slide event direction.\r\n   *\r\n   * Possible values are `'left' | 'right'`.\r\n   */\r\n  direction: NgbSlideEventDirection;\r\n\r\n  /**\r\n   * Source triggering the slide change event.\r\n   *\r\n   * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\r\n   *\r\n   */\r\n  source?: NgbSlideEventSource;\r\n}\r\n\r\nexport enum NgbSlideEventSource {\r\n  TIMER = 'timer',\r\n  ARROW_LEFT = 'arrowLeft',\r\n  ARROW_RIGHT = 'arrowRight',\r\n  INDICATOR = 'indicator'\r\n}\r\n\r\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\r\n\r\nexport {NgbCarousel, NgbSlide, NgbSlideEvent, NgbSlideEventSource} from './carousel';\r\nexport {NgbSlideEventDirection} from './carousel-transition';\r\nexport {NgbCarouselConfig} from './carousel-config';\r\n\r\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\r\nexport class NgbCarouselModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbConfig} from '../ngb-config';\r\n\r\n/**\r\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize its properties\r\n * to provide default values for all collapses used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbCollapseConfig {\r\n  private _animation: boolean;\r\n\r\n  constructor(private _ngbConfig: NgbConfig) {}\r\n\r\n  get animation(): boolean { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\r\n  set animation(animation: boolean) { this._animation = animation; }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {ngbRunTransition} from '../util/transition/ngbTransition';\r\nimport {ngbCollapsingTransition} from '../util/transition/ngbCollapseTransition';\r\nimport {NgbCollapseConfig} from './collapse-config';\r\n\r\n/**\r\n * A directive to provide a simple way of hiding and showing elements on the page.\r\n */\r\n@Directive({selector: '[ngbCollapse]', exportAs: 'ngbCollapse'})\r\nexport class NgbCollapse implements OnInit, OnChanges {\r\n  /**\r\n   * If `true`, collapse will be animated.\r\n   *\r\n   * Animation is triggered only when clicked on triggering element\r\n   * or via the `.toggle()` function\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Input() animation;\r\n\r\n  /**\r\n   * If `true`, will collapse the element or show it otherwise.\r\n   */\r\n  @Input('ngbCollapse') collapsed = false;\r\n\r\n  @Output() ngbCollapseChange = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   * An event emitted when the collapse element is shown, after the transition. It has no payload.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() shown = new EventEmitter<void>();\r\n\r\n  /**\r\n   * An event emitted when the collapse element is hidden, after the transition. It has no payload.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() hidden = new EventEmitter<void>();\r\n\r\n\r\n  constructor(private _element: ElementRef, config: NgbCollapseConfig, private _zone: NgZone) {\r\n    this.animation = config.animation;\r\n  }\r\n\r\n  ngOnInit() { this._runTransition(this.collapsed, false); }\r\n\r\n  ngOnChanges({collapsed}: SimpleChanges) {\r\n    if (!collapsed.firstChange) {\r\n      this._runTransitionWithEvents(this.collapsed, this.animation);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Triggers collapsing programmatically.\r\n   *\r\n   * If there is a collapsing transition running already, it will be reversed.\r\n   * If the animations are turned off this happens synchronously.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  toggle(open: boolean = this.collapsed) {\r\n    this.collapsed = !open;\r\n    this.ngbCollapseChange.next(this.collapsed);\r\n    this._runTransitionWithEvents(this.collapsed, this.animation);\r\n  }\r\n\r\n  private _runTransition(collapsed: boolean, animation: boolean) {\r\n    return ngbRunTransition(\r\n        this._zone, this._element.nativeElement, ngbCollapsingTransition,\r\n        {animation, runningTransition: 'stop', context: {direction: collapsed ? 'hide' : 'show'}});\r\n  }\r\n\r\n  private _runTransitionWithEvents(collapsed: boolean, animation: boolean) {\r\n    this._runTransition(collapsed, animation).subscribe(() => {\r\n      if (collapsed) {\r\n        this.hidden.emit();\r\n      } else {\r\n        this.shown.emit();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {NgbCollapse} from './collapse';\r\n\r\nexport {NgbCollapse} from './collapse';\r\nexport {NgbCollapseConfig} from './collapse-config';\r\n\r\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\r\nexport class NgbCollapseModule {\r\n}\r\n","import {NgbDateStruct} from './ngb-date-struct';\r\nimport {isInteger} from '../util/util';\r\n\r\n/**\r\n * A simple class that represents a date that datepicker also uses internally.\r\n *\r\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\r\n * like `.equals()`, `.before()`, etc.\r\n *\r\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\r\n *\r\n * In many cases it is simpler to manipulate these objects together with\r\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\r\n *\r\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport class NgbDate implements NgbDateStruct {\r\n  /**\r\n   * The year, for example 2016\r\n   */\r\n  year: number;\r\n\r\n  /**\r\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\r\n   */\r\n  month: number;\r\n\r\n  /**\r\n   * The day of month, starting with 1\r\n   */\r\n  day: number;\r\n\r\n  /**\r\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\r\n   *\r\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\r\n   *\r\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\r\n   */\r\n  static from(date?: NgbDateStruct | null): NgbDate | null {\r\n    if (date instanceof NgbDate) {\r\n      return date;\r\n    }\r\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\r\n  }\r\n\r\n  constructor(year: number, month: number, day: number) {\r\n    this.year = isInteger(year) ? year : <any>null;\r\n    this.month = isInteger(month) ? month : <any>null;\r\n    this.day = isInteger(day) ? day : <any>null;\r\n  }\r\n\r\n  /**\r\n   * Checks if the current date is equal to another date.\r\n   */\r\n  equals(other?: NgbDateStruct | null): boolean {\r\n    return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\r\n  }\r\n\r\n  /**\r\n   * Checks if the current date is before another date.\r\n   */\r\n  before(other?: NgbDateStruct | null): boolean {\r\n    if (!other) {\r\n      return false;\r\n    }\r\n\r\n    if (this.year === other.year) {\r\n      if (this.month === other.month) {\r\n        return this.day === other.day ? false : this.day < other.day;\r\n      } else {\r\n        return this.month < other.month;\r\n      }\r\n    } else {\r\n      return this.year < other.year;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if the current date is after another date.\r\n   */\r\n  after(other?: NgbDateStruct | null): boolean {\r\n    if (!other) {\r\n      return false;\r\n    }\r\n    if (this.year === other.year) {\r\n      if (this.month === other.month) {\r\n        return this.day === other.day ? false : this.day > other.day;\r\n      } else {\r\n        return this.month > other.month;\r\n      }\r\n    } else {\r\n      return this.year > other.year;\r\n    }\r\n  }\r\n}\r\n","import {NgbDate} from './ngb-date';\r\nimport {Injectable} from '@angular/core';\r\nimport {isInteger} from '../util/util';\r\n\r\nexport function fromJSDate(jsDate: Date) {\r\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\r\n}\r\nexport function toJSDate(date: NgbDate) {\r\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\r\n  // this is done avoid 30 -> 1930 conversion\r\n  if (!isNaN(jsDate.getTime())) {\r\n    jsDate.setFullYear(date.year);\r\n  }\r\n  return jsDate;\r\n}\r\n\r\nexport type NgbPeriod = 'y' | 'm' | 'd';\r\n\r\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\r\n  return new NgbCalendarGregorian();\r\n}\r\n\r\n/**\r\n * A service that represents the calendar used by the datepicker.\r\n *\r\n * The default implementation uses the Gregorian calendar. You can inject it in your own\r\n * implementations if necessary to simplify `NgbDate` calculations.\r\n */\r\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\r\nexport abstract class NgbCalendar {\r\n  /**\r\n   * Returns the number of days per week.\r\n   */\r\n  abstract getDaysPerWeek(): number;\r\n\r\n  /**\r\n   * Returns an array of months per year.\r\n   *\r\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\r\n   */\r\n  abstract getMonths(year?: number): number[];\r\n\r\n  /**\r\n   * Returns the number of weeks per month.\r\n   */\r\n  abstract getWeeksPerMonth(): number;\r\n\r\n  /**\r\n   * Returns the weekday number for a given day.\r\n   *\r\n   * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\r\n   */\r\n  abstract getWeekday(date: NgbDate): number;\r\n\r\n  /**\r\n   * Adds a number of years, months or days to a given date.\r\n   *\r\n   * * `period` can be `y`, `m` or `d` and defaults to day.\r\n   * * `number` defaults to 1.\r\n   *\r\n   * Always returns a new date.\r\n   */\r\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\r\n\r\n  /**\r\n   * Subtracts a number of years, months or days from a given date.\r\n   *\r\n   * * `period` can be `y`, `m` or `d` and defaults to day.\r\n   * * `number` defaults to 1.\r\n   *\r\n   * Always returns a new date.\r\n   */\r\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\r\n\r\n  /**\r\n   * Returns the week number for a given week.\r\n   */\r\n  abstract getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number;\r\n\r\n  /**\r\n   * Returns the today's date.\r\n   */\r\n  abstract getToday(): NgbDate;\r\n\r\n  /**\r\n   * Checks if a date is valid in the current calendar.\r\n   */\r\n  abstract isValid(date?: NgbDate | null): boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class NgbCalendarGregorian extends NgbCalendar {\r\n  getDaysPerWeek() { return 7; }\r\n\r\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\r\n\r\n  getWeeksPerMonth() { return 6; }\r\n\r\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\r\n    let jsDate = toJSDate(date);\r\n    let checkMonth = true;\r\n    let expectedMonth = jsDate.getMonth();\r\n\r\n    switch (period) {\r\n      case 'y':\r\n        jsDate.setFullYear(jsDate.getFullYear() + number);\r\n        break;\r\n      case 'm':\r\n        expectedMonth += number;\r\n        jsDate.setMonth(expectedMonth);\r\n        expectedMonth = expectedMonth % 12;\r\n        if (expectedMonth < 0) {\r\n          expectedMonth = expectedMonth + 12;\r\n        }\r\n        break;\r\n      case 'd':\r\n        jsDate.setDate(jsDate.getDate() + number);\r\n        checkMonth = false;\r\n        break;\r\n      default:\r\n        return date;\r\n    }\r\n\r\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\r\n      // this means the destination month has less days than the initial month\r\n      // let's go back to the end of the previous month:\r\n      jsDate.setDate(0);\r\n    }\r\n\r\n    return fromJSDate(jsDate);\r\n  }\r\n\r\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\r\n\r\n  getWeekday(date: NgbDate) {\r\n    let jsDate = toJSDate(date);\r\n    let day = jsDate.getDay();\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    return day === 0 ? 7 : day;\r\n  }\r\n\r\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    if (firstDayOfWeek === 7) {\r\n      firstDayOfWeek = 0;\r\n    }\r\n\r\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\r\n    let date = week[thursdayIndex];\r\n\r\n    const jsDate = toJSDate(date);\r\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\r\n    const time = jsDate.getTime();\r\n    jsDate.setMonth(0);  // Compare with Jan 1\r\n    jsDate.setDate(1);\r\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\r\n  }\r\n\r\n  getToday(): NgbDate { return fromJSDate(new Date()); }\r\n\r\n  isValid(date?: NgbDate | null): boolean {\r\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\r\n      return false;\r\n    }\r\n\r\n    // year 0 doesn't exist in Gregorian calendar\r\n    if (date.year === 0) {\r\n      return false;\r\n    }\r\n\r\n    const jsDate = toJSDate(date);\r\n\r\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\r\n        jsDate.getDate() === date.day;\r\n  }\r\n}\r\n","import {NgbDate} from './ngb-date';\r\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\r\nimport {NgbCalendar} from './ngb-calendar';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\n\r\nexport function isChangedDate(prev?: NgbDate | null, next?: NgbDate | null): boolean {\r\n  return !dateComparator(prev, next);\r\n}\r\n\r\nexport function isChangedMonth(prev?: NgbDate | null, next?: NgbDate | null): boolean {\r\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\r\n}\r\n\r\nexport function dateComparator(prev?: NgbDate | null, next?: NgbDate | null): boolean {\r\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\r\n}\r\n\r\nexport function checkMinBeforeMax(minDate?: NgbDate | null, maxDate?: NgbDate | null): void {\r\n  if (maxDate && minDate && maxDate.before(minDate)) {\r\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\r\n  }\r\n}\r\n\r\nexport function checkDateInRange(date?: NgbDate | null, minDate?: NgbDate | null, maxDate?: NgbDate | null): NgbDate |\r\n    null {\r\n  if (date && minDate && date.before(minDate)) {\r\n    return minDate;\r\n  }\r\n  if (date && maxDate && date.after(maxDate)) {\r\n    return maxDate;\r\n  }\r\n\r\n  return date || null;\r\n}\r\n\r\nexport function isDateSelectable(date: NgbDate | null | undefined, state: DatepickerViewModel) {\r\n  const {minDate, maxDate, disabled, markDisabled} = state;\r\n  // clang-format off\r\n  return !(\r\n    date === null ||\r\n    date === undefined ||\r\n    disabled ||\r\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\r\n    (minDate && date.before(minDate)) ||\r\n    (maxDate && date.after(maxDate))\r\n  );\r\n  // clang-format on\r\n}\r\n\r\nexport function generateSelectBoxMonths(\r\n    calendar: NgbCalendar, date: NgbDate, minDate: NgbDate | null, maxDate: NgbDate | null) {\r\n  if (!date) {\r\n    return [];\r\n  }\r\n\r\n  let months = calendar.getMonths(date.year);\r\n\r\n  if (minDate && date.year === minDate.year) {\r\n    const index = months.findIndex(month => month === minDate.month);\r\n    months = months.slice(index);\r\n  }\r\n\r\n  if (maxDate && date.year === maxDate.year) {\r\n    const index = months.findIndex(month => month === maxDate.month);\r\n    months = months.slice(0, index + 1);\r\n  }\r\n\r\n  return months;\r\n}\r\n\r\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate | null, maxDate: NgbDate | null) {\r\n  if (!date) {\r\n    return [];\r\n  }\r\n\r\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\r\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\r\n\r\n  const length = end - start + 1;\r\n  const numbers = Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    numbers[i] = start + i;\r\n  }\r\n\r\n  return numbers;\r\n}\r\n\r\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate | null) {\r\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {day: 1});\r\n  return maxDate != null && nextDate.after(maxDate);\r\n}\r\n\r\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate | null) {\r\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {day: 1});\r\n  return minDate != null && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\r\n                             prevDate.year < minDate.year && minDate.month === 1);\r\n}\r\n\r\nexport function buildMonths(\r\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\r\n    force: boolean): MonthViewModel[] {\r\n  const {displayMonths, months} = state;\r\n  // move old months to a temporary array\r\n  const monthsToReuse = months.splice(0, months.length);\r\n\r\n  // generate new first dates, nullify or reuse months\r\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\r\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {day: 1});\r\n    months[i] = <any>null;\r\n\r\n    if (!force) {\r\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\r\n      // move reused month back to months\r\n      if (reusedIndex !== -1) {\r\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\r\n      }\r\n    }\r\n\r\n    return firstDate;\r\n  });\r\n\r\n  // rebuild nullified months\r\n  firstDates.forEach((firstDate, i) => {\r\n    if (months[i] === null) {\r\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\r\n    }\r\n  });\r\n\r\n  return months;\r\n}\r\n\r\nexport function buildMonth(\r\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\r\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\r\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays, weekdayWidth, weekdaysVisible} =\r\n      state;\r\n  const calendarToday = calendar.getToday();\r\n\r\n  month.firstDate = <any>null;\r\n  month.lastDate = <any>null;\r\n  month.number = date.month;\r\n  month.year = date.year;\r\n  month.weeks = month.weeks || [];\r\n  month.weekdays = month.weekdays || [];\r\n\r\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\r\n\r\n  // clearing weekdays, if not visible\r\n  if (!weekdaysVisible) {\r\n    month.weekdays.length = 0;\r\n  }\r\n\r\n  // month has weeks\r\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\r\n    let weekObject = month.weeks[week];\r\n    if (!weekObject) {\r\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\r\n    }\r\n    const days = weekObject.days;\r\n\r\n    // week has days\r\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\r\n      if (week === 0 && weekdaysVisible) {\r\n        month.weekdays[day] = i18n.getWeekdayLabel(calendar.getWeekday(date), weekdayWidth);\r\n      }\r\n\r\n      const newDate = new NgbDate(date.year, date.month, date.day);\r\n      const nextDate = calendar.getNext(newDate);\r\n\r\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\r\n\r\n      // marking date as disabled\r\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\r\n      if (!disabled && markDisabled) {\r\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\r\n      }\r\n\r\n      // today\r\n      let today = newDate.equals(calendarToday);\r\n\r\n      // adding user-provided data to the context\r\n      let contextUserData =\r\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\r\n\r\n      // saving first date of the month\r\n      if (month.firstDate === null && newDate.month === month.number) {\r\n        month.firstDate = newDate;\r\n      }\r\n\r\n      // saving last date of the month\r\n      if (newDate.month === month.number && nextDate.month !== month.number) {\r\n        month.lastDate = newDate;\r\n      }\r\n\r\n      let dayObject = days[day];\r\n      if (!dayObject) {\r\n        dayObject = days[day] = {} as DayViewModel;\r\n      }\r\n      dayObject.date = newDate;\r\n      dayObject.context = Object.assign(dayObject.context || {}, {\r\n        $implicit: newDate,\r\n        date: newDate,\r\n        data: contextUserData,\r\n        currentMonth: month.number,\r\n        currentYear: month.year, disabled,\r\n        focused: false,\r\n        selected: false, today\r\n      });\r\n      dayObject.tabindex = -1;\r\n      dayObject.ariaLabel = ariaLabel;\r\n      dayObject.hidden = false;\r\n\r\n      date = nextDate;\r\n    }\r\n\r\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\r\n\r\n    // marking week as collapsed\r\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\r\n        days[days.length - 1].date.month !== month.number;\r\n  }\r\n\r\n  return month;\r\n}\r\n\r\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\r\n  const daysPerWeek = calendar.getDaysPerWeek();\r\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\r\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\r\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\r\n}\r\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\r\nimport {formatDate, FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth} from '@angular/common';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\n\r\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\r\n  return new NgbDatepickerI18nDefault(locale);\r\n}\r\n\r\n/**\r\n * A service supplying i18n data to the datepicker component.\r\n *\r\n * The default implementation of this service uses the Angular locale and registered locale data for\r\n * weekdays and month names (as explained in the Angular i18n guide).\r\n *\r\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\r\n * numerals. For other static labels the datepicker uses the default Angular i18n.\r\n *\r\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\r\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\r\n * a custom provider for i18n.\r\n */\r\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\r\nexport abstract class NgbDatepickerI18n {\r\n  /**\r\n   * Returns the short weekday name to display in the heading of the month view.\r\n   *\r\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\r\n   *\r\n   * @deprecated 9.1.0, use 'getWeekdayLabel' instead\r\n   */\r\n  abstract getWeekdayShortName(weekday: number): string;\r\n\r\n  /**\r\n   * Returns the weekday label using specified width\r\n   *\r\n   * @since 9.1.0\r\n   */\r\n  getWeekdayLabel(weekday: number, width?: TranslationWidth): string { return this.getWeekdayShortName(weekday); }\r\n\r\n  /**\r\n   * Returns the short month name to display in the date picker navigation.\r\n   *\r\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   */\r\n  abstract getMonthShortName(month: number, year?: number): string;\r\n\r\n  /**\r\n   * Returns the full month name to display in the date picker navigation.\r\n   *\r\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   */\r\n  abstract getMonthFullName(month: number, year?: number): string;\r\n\r\n  /**\r\n   * Returns the text label to display above the day view.\r\n   *\r\n   * @since 9.1.0\r\n   */\r\n  getMonthLabel(date: NgbDateStruct): string {\r\n    return `${this.getMonthFullName(date.month, date.year)} ${this.getYearNumerals(date.year)}`;\r\n  }\r\n\r\n  /**\r\n   * Returns the value of the `aria-label` attribute for a specific date.\r\n   *\r\n   * @since 2.0.0\r\n   */\r\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\r\n\r\n  /**\r\n   * Returns the textual representation of a day that is rendered in a day cell.\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\r\n\r\n  /**\r\n   * Returns the textual representation of a week number rendered by datepicker.\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\r\n\r\n  /**\r\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  getYearNumerals(year: number): string { return `${year}`; }\r\n\r\n  /**\r\n   * Returns the week label to display in the heading of the month view.\r\n   *\r\n   * @since 9.1.0\r\n   */\r\n  getWeekLabel(): string { return ''; }\r\n}\r\n\r\n/**\r\n * A service providing default implementation for the datepicker i18n.\r\n * It can be used as a base implementation if necessary.\r\n *\r\n * @since 9.1.0\r\n */\r\n@Injectable()\r\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\r\n  private _monthsShort: readonly string[];\r\n  private _monthsFull: readonly string[];\r\n\r\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\r\n    super();\r\n\r\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\r\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\r\n  }\r\n\r\n  getWeekdayShortName(weekday: number): string { return this.getWeekdayLabel(weekday, TranslationWidth.Short); }\r\n\r\n  getWeekdayLabel(weekday: number, width?: TranslationWidth): string {\r\n    const weekdaysStartingOnSunday =\r\n        getLocaleDayNames(this._locale, FormStyle.Standalone, width === undefined ? TranslationWidth.Short : width);\r\n    const weekdays = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\r\n    return weekdays[weekday - 1] || '';\r\n  }\r\n\r\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1] || ''; }\r\n\r\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1] || ''; }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    const jsDate = new Date(date.year, date.month - 1, date.day);\r\n    return formatDate(jsDate, 'fullDate', this._locale);\r\n  }\r\n}\r\n","import {NgbCalendar} from './ngb-calendar';\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\r\nimport {Injectable} from '@angular/core';\r\nimport {isInteger, toInteger} from '../util/util';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {\r\n  buildMonths,\r\n  checkDateInRange,\r\n  checkMinBeforeMax,\r\n  generateSelectBoxMonths,\r\n  generateSelectBoxYears,\r\n  isChangedDate,\r\n  isChangedMonth,\r\n  isDateSelectable,\r\n  nextMonthDisabled,\r\n  prevMonthDisabled\r\n} from './datepicker-tools';\r\n\r\nimport {filter} from 'rxjs/operators';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\nimport {TranslationWidth} from '@angular/common';\r\n\r\n\r\nexport type DatepickerServiceInputs = Partial<{\r\n  dayTemplateData: NgbDayTemplateData,\r\n  displayMonths: number,\r\n  disabled: boolean,\r\n  firstDayOfWeek: number,\r\n  focusVisible: boolean,\r\n  markDisabled: NgbMarkDisabled,\r\n  maxDate: NgbDate | null,\r\n  minDate: NgbDate | null,\r\n  navigation: 'select' | 'arrows' | 'none',\r\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\r\n  weekdays: TranslationWidth | boolean\r\n}>;\r\n\r\n@Injectable()\r\nexport class NgbDatepickerService {\r\n  private _VALIDATORS:\r\n      {[K in keyof DatepickerServiceInputs]: (v: DatepickerServiceInputs[K]) => Partial<DatepickerViewModel>| void} = {\r\n        dayTemplateData: (dayTemplateData: NgbDayTemplateData) => {\r\n          if (this._state.dayTemplateData !== dayTemplateData) {\r\n            return {dayTemplateData};\r\n          }\r\n        },\r\n        displayMonths: (displayMonths: number) => {\r\n          displayMonths = toInteger(displayMonths);\r\n          if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\r\n            return {displayMonths};\r\n          }\r\n        },\r\n        disabled: (disabled: boolean) => {\r\n          if (this._state.disabled !== disabled) {\r\n            return {disabled};\r\n          }\r\n        },\r\n        firstDayOfWeek: (firstDayOfWeek: number) => {\r\n          firstDayOfWeek = toInteger(firstDayOfWeek);\r\n          if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\r\n            return {firstDayOfWeek};\r\n          }\r\n        },\r\n        focusVisible: (focusVisible: boolean) => {\r\n          if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\r\n            return {focusVisible};\r\n          }\r\n        },\r\n        markDisabled: (markDisabled: NgbMarkDisabled) => {\r\n          if (this._state.markDisabled !== markDisabled) {\r\n            return {markDisabled};\r\n          }\r\n        },\r\n        maxDate: (date: NgbDate | null) => {\r\n          const maxDate = this.toValidDate(date, null);\r\n          if (isChangedDate(this._state.maxDate, maxDate)) {\r\n            return {maxDate};\r\n          }\r\n        },\r\n        minDate: (date: NgbDate | null) => {\r\n          const minDate = this.toValidDate(date, null);\r\n          if (isChangedDate(this._state.minDate, minDate)) {\r\n            return {minDate};\r\n          }\r\n        },\r\n        navigation: (navigation: 'select' | 'arrows' | 'none') => {\r\n          if (this._state.navigation !== navigation) {\r\n            return {navigation};\r\n          }\r\n        },\r\n        outsideDays: (outsideDays: 'visible' | 'collapsed' | 'hidden') => {\r\n          if (this._state.outsideDays !== outsideDays) {\r\n            return {outsideDays};\r\n          }\r\n        },\r\n        weekdays: (weekdays: boolean | TranslationWidth) => {\r\n          const weekdayWidth = weekdays === true || weekdays === false ? TranslationWidth.Short : weekdays;\r\n          const weekdaysVisible = weekdays === true || weekdays === false ? weekdays : true;\r\n          if (this._state.weekdayWidth !== weekdayWidth || this._state.weekdaysVisible !== weekdaysVisible) {\r\n            return {weekdayWidth, weekdaysVisible};\r\n          }\r\n        }\r\n      };\r\n\r\n  private _model$ = new Subject<DatepickerViewModel>();\r\n\r\n  private _dateSelect$ = new Subject<NgbDate>();\r\n\r\n  private _state: DatepickerViewModel = {\r\n    dayTemplateData: null,\r\n    markDisabled: null,\r\n    maxDate: null,\r\n    minDate: null,\r\n    disabled: false,\r\n    displayMonths: 1,\r\n    firstDate: null,\r\n    firstDayOfWeek: 1,\r\n    lastDate: null,\r\n    focusDate: null,\r\n    focusVisible: false,\r\n    months: [],\r\n    navigation: 'select',\r\n    outsideDays: 'visible',\r\n    prevDisabled: false,\r\n    nextDisabled: false,\r\n    selectedDate: null,\r\n    selectBoxes: {years: [], months: []},\r\n    weekdayWidth: TranslationWidth.Short,\r\n    weekdaysVisible: true\r\n  };\r\n\r\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\r\n\r\n  get dateSelect$(): Observable<NgbDate> { return this._dateSelect$.pipe(filter(date => date !== null)); }\r\n\r\n  set(options: DatepickerServiceInputs) {\r\n    let patch = Object.keys(options)\r\n                    .map(key => this._VALIDATORS[key](options[key]))\r\n                    .reduce((obj, part) => ({...obj, ...part}), {});\r\n\r\n    if (Object.keys(patch).length > 0) {\r\n      this._nextState(patch);\r\n    }\r\n  }\r\n\r\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\r\n\r\n  focus(date?: NgbDate | null) {\r\n    const focusedDate = this.toValidDate(date, null);\r\n    if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\r\n      this._nextState({focusDate: date});\r\n    }\r\n  }\r\n\r\n  focusSelect() {\r\n    if (isDateSelectable(this._state.focusDate, this._state)) {\r\n      this.select(this._state.focusDate, {emitEvent: true});\r\n    }\r\n  }\r\n\r\n  open(date?: NgbDate | null) {\r\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\r\n    if (firstDate != null && !this._state.disabled &&\r\n        (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\r\n      this._nextState({firstDate});\r\n    }\r\n  }\r\n\r\n  select(date?: NgbDate | null, options: {emitEvent?: boolean} = {}) {\r\n    const selectedDate = this.toValidDate(date, null);\r\n    if (selectedDate != null && !this._state.disabled) {\r\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\r\n        this._nextState({selectedDate});\r\n      }\r\n\r\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\r\n        this._dateSelect$.next(selectedDate);\r\n      }\r\n    }\r\n  }\r\n\r\n  toValidDate(date?: NgbDateStruct | null, defaultValue?: NgbDate | null): NgbDate | null {\r\n    const ngbDate = NgbDate.from(date);\r\n    if (defaultValue === undefined) {\r\n      defaultValue = this._calendar.getToday();\r\n    }\r\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\r\n  }\r\n\r\n  getMonth(struct: NgbDateStruct) {\r\n    for (let month of this._state.months) {\r\n      if (struct.month === month.number && struct.year === month.year) {\r\n        return month;\r\n      }\r\n    }\r\n    throw new Error(`month ${struct.month} of year ${struct.year} not found`);\r\n  }\r\n\r\n  private _nextState(patch: Partial<DatepickerViewModel>) {\r\n    const newState = this._updateState(patch);\r\n    this._patchContexts(newState);\r\n    this._state = newState;\r\n    this._model$.next(this._state);\r\n  }\r\n\r\n  private _patchContexts(state: DatepickerViewModel) {\r\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\r\n    state.months.forEach(month => {\r\n      month.weeks.forEach(week => {\r\n        week.days.forEach(day => {\r\n\r\n          // patch focus flag\r\n          if (focusDate) {\r\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\r\n          }\r\n\r\n          // calculating tabindex\r\n          day.tabindex =\r\n              !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\r\n\r\n          // override context disabled\r\n          if (disabled === true) {\r\n            day.context.disabled = true;\r\n          }\r\n\r\n          // patch selection flag\r\n          if (selectedDate !== undefined) {\r\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\r\n          }\r\n\r\n          // visibility\r\n          if (month.number !== day.date.month) {\r\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\r\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\r\n                 day.date.before(months[displayMonths - 1].lastDate));\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\r\n    // patching fields\r\n    const state = Object.assign({}, this._state, patch);\r\n\r\n    let startDate = state.firstDate;\r\n\r\n    // min/max dates changed\r\n    if ('minDate' in patch || 'maxDate' in patch) {\r\n      checkMinBeforeMax(state.minDate, state.maxDate);\r\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\r\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\r\n      startDate = state.focusDate;\r\n    }\r\n\r\n    // disabled\r\n    if ('disabled' in patch) {\r\n      state.focusVisible = false;\r\n    }\r\n\r\n    // initial rebuild via 'select()'\r\n    if ('selectedDate' in patch && this._state.months.length === 0) {\r\n      startDate = state.selectedDate;\r\n    }\r\n\r\n    // terminate early if only focus visibility was changed\r\n    if ('focusVisible' in patch) {\r\n      return state;\r\n    }\r\n\r\n    // focus date changed\r\n    if ('focusDate' in patch) {\r\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\r\n      startDate = state.focusDate;\r\n\r\n      // nothing to rebuild if only focus changed and it is still visible\r\n      if (state.months.length !== 0 && state.focusDate && !state.focusDate.before(state.firstDate) &&\r\n          !state.focusDate.after(state.lastDate)) {\r\n        return state;\r\n      }\r\n    }\r\n\r\n    // first date changed\r\n    if ('firstDate' in patch) {\r\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\r\n      startDate = state.firstDate;\r\n    }\r\n\r\n    // rebuilding months\r\n    if (startDate) {\r\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\r\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch ||\r\n          'weekdaysVisible' in patch;\r\n\r\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\r\n\r\n      // updating months and boundary dates\r\n      state.months = months;\r\n      state.firstDate = months[0].firstDate;\r\n      state.lastDate = months[months.length - 1].lastDate;\r\n\r\n      // reset selected date if 'markDisabled' returns true\r\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\r\n        state.selectedDate = null;\r\n      }\r\n\r\n      // adjusting focus after months were built\r\n      if ('firstDate' in patch) {\r\n        if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\r\n          state.focusDate = startDate;\r\n        }\r\n      }\r\n\r\n      // adjusting months/years for the select box navigation\r\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\r\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\r\n      if (state.navigation === 'select') {\r\n        // years ->  boundaries (min/max were changed)\r\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\r\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\r\n        }\r\n\r\n        // months -> when current year or boundaries change\r\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\r\n          state.selectBoxes.months =\r\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\r\n        }\r\n      } else {\r\n        state.selectBoxes = {years: [], months: []};\r\n      }\r\n\r\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\r\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\r\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\r\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\r\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\r\n      }\r\n    }\r\n\r\n    return state;\r\n  }\r\n}\r\n","import {NgbDate} from './ngb-date';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\nimport {DayTemplateContext} from './datepicker-day-template-context';\r\nimport {TranslationWidth} from '@angular/common';\r\n\r\nexport type NgbMarkDisabled = (date: NgbDateStruct, current?: {year: number, month: number}) => boolean;\r\nexport type NgbDayTemplateData = (date: NgbDateStruct, current?: {year: number, month: number}) => any;\r\n\r\nexport type DayViewModel = {\r\n  date: NgbDate,\r\n  context: DayTemplateContext,\r\n  tabindex: number,\r\n  ariaLabel: string,\r\n  hidden: boolean\r\n};\r\n\r\nexport type WeekViewModel = {\r\n  number: number,\r\n  days: DayViewModel[],\r\n  collapsed: boolean\r\n};\r\n\r\nexport type MonthViewModel = {\r\n  firstDate: NgbDate,\r\n  lastDate: NgbDate,\r\n  number: number,\r\n  year: number,\r\n  weeks: WeekViewModel[],\r\n  weekdays: string[]\r\n};\r\n\r\n// clang-format off\r\nexport type DatepickerViewModel = {\r\n  dayTemplateData: NgbDayTemplateData | null,\r\n  disabled: boolean,\r\n  displayMonths: number,\r\n  firstDate: NgbDate | null,\r\n  firstDayOfWeek: number,\r\n  focusDate: NgbDate | null,\r\n  focusVisible: boolean,\r\n  lastDate: NgbDate | null,\r\n  markDisabled: NgbMarkDisabled | null,\r\n  maxDate: NgbDate | null,\r\n  minDate: NgbDate | null,\r\n  months: MonthViewModel[],\r\n  navigation: 'select' | 'arrows' | 'none',\r\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\r\n  prevDisabled: boolean,\r\n  nextDisabled: boolean,\r\n  selectBoxes: {\r\n    years: number[],\r\n    months: number[]\r\n  },\r\n  selectedDate: NgbDate | null,\r\n  weekdayWidth: TranslationWidth,\r\n  weekdaysVisible: boolean\r\n};\r\n// clang-format on\r\n\r\nexport enum NavigationEvent {\r\n  PREV,\r\n  NEXT\r\n}\r\n","import {Injectable, TemplateRef} from '@angular/core';\r\nimport {TranslationWidth} from '@angular/common';\r\nimport {DayTemplateContext} from './datepicker-day-template-context';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\n\r\n/**\r\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the datepickers used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbDatepickerConfig {\r\n  dayTemplate: TemplateRef<DayTemplateContext>;\r\n  dayTemplateData: (date: NgbDateStruct, current?: {year: number, month: number}) => any;\r\n  footerTemplate: TemplateRef<any>;\r\n  displayMonths = 1;\r\n  firstDayOfWeek = 1;\r\n  markDisabled: (date: NgbDateStruct, current?: {year: number, month: number}) => boolean;\r\n  minDate: NgbDateStruct;\r\n  maxDate: NgbDateStruct;\r\n  navigation: 'select' | 'arrows' | 'none' = 'select';\r\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\r\n  showWeekdays = true;\r\n  showWeekNumbers = false;\r\n  startDate: {year: number, month: number};\r\n  weekdays: TranslationWidth | boolean = TranslationWidth.Short;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbDateStruct} from '../ngb-date-struct';\r\nimport {isInteger} from '../../util/util';\r\n\r\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\r\n  return new NgbDateStructAdapter();\r\n}\r\n\r\n/**\r\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\r\n * any provided user date model `D`, ex. a string, a native date, etc.\r\n *\r\n * The adapter is used **only** for conversion when binding datepicker to a form control,\r\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\r\n *\r\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\r\n *\r\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\r\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\r\n */\r\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\r\nexport abstract class NgbDateAdapter<D> {\r\n  /**\r\n   * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\r\n   */\r\n  abstract fromModel(value: D | null): NgbDateStruct | null;\r\n\r\n  /**\r\n   * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\r\n   */\r\n  abstract toModel(date: NgbDateStruct | null): D | null;\r\n}\r\n\r\n@Injectable()\r\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\r\n  /**\r\n   * Converts a NgbDateStruct value into NgbDateStruct value\r\n   */\r\n  fromModel(date: NgbDateStruct | null): NgbDateStruct | null {\r\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\r\n        {year: date.year, month: date.month, day: date.day} :\r\n        null;\r\n  }\r\n\r\n  /**\r\n   * Converts a NgbDateStruct value into NgbDateStruct value\r\n   */\r\n  toModel(date: NgbDateStruct | null): NgbDateStruct | null {\r\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\r\n        {year: date.year, month: date.month, day: date.day} :\r\n        null;\r\n  }\r\n}\r\n","import {fromEvent, merge, Subject} from 'rxjs';\r\nimport {filter, take, takeUntil} from 'rxjs/operators';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {TranslationWidth} from '@angular/common';\r\n\r\nimport {NgbCalendar} from './ngb-calendar';\r\nimport {NgbDate} from './ngb-date';\r\nimport {DatepickerServiceInputs, NgbDatepickerService} from './datepicker-service';\r\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\r\nimport {DayTemplateContext} from './datepicker-day-template-context';\r\nimport {NgbDatepickerConfig} from './datepicker-config';\r\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\nimport {isChangedDate, isChangedMonth} from './datepicker-tools';\r\nimport {hasClassName} from '../util/util';\r\n\r\n/**\r\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\r\n */\r\nexport interface NgbDatepickerNavigateEvent {\r\n  /**\r\n   * The currently displayed month.\r\n   */\r\n  current: {year: number, month: number} | null;\r\n\r\n  /**\r\n   * The month we're navigating to.\r\n   */\r\n  next: {year: number, month: number};\r\n\r\n  /**\r\n   * Calling this function will prevent navigation from happening.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  preventDefault: () => void;\r\n}\r\n\r\n/**\r\n * An interface that represents the readonly public state of the datepicker.\r\n *\r\n * Accessible via the `datepicker.state` getter\r\n *\r\n * @since 5.2.0\r\n */\r\nexport interface NgbDatepickerState {\r\n  /**\r\n   * The earliest date that can be displayed or selected\r\n   */\r\n  readonly minDate: NgbDate | null;\r\n\r\n  /**\r\n   * The latest date that can be displayed or selected\r\n   */\r\n  readonly maxDate: NgbDate | null;\r\n\r\n  /**\r\n   * The first visible date of currently displayed months\r\n   */\r\n  readonly firstDate: NgbDate;\r\n\r\n  /**\r\n   * The last visible date of currently displayed months\r\n   */\r\n  readonly lastDate: NgbDate;\r\n\r\n  /**\r\n   * The date currently focused by the datepicker\r\n   */\r\n  readonly focusedDate: NgbDate;\r\n\r\n  /**\r\n   * First dates of months currently displayed by the datepicker\r\n   *\r\n   * @since 5.3.0\r\n   */\r\n  readonly months: NgbDate[];\r\n}\r\n\r\n/**\r\n * A directive that marks the content template that customizes the way datepicker months are displayed\r\n *\r\n * @since 5.3.0\r\n */\r\n@Directive({selector: 'ng-template[ngbDatepickerContent]'})\r\nexport class NgbDatepickerContent {\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n\r\n/**\r\n * A highly configurable component that helps you with selecting calendar dates.\r\n *\r\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\r\n */\r\n@Component({\r\n  exportAs: 'ngbDatepicker',\r\n  selector: 'ngb-datepicker',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./datepicker.scss'],\r\n  template: `\r\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\"\r\n                 let-disabled=\"disabled\" let-focused=\"focused\">\r\n      <div ngbDatepickerDayView\r\n        [date]=\"date\"\r\n        [currentMonth]=\"currentMonth\"\r\n        [selected]=\"selected\"\r\n        [disabled]=\"disabled\"\r\n        [focused]=\"focused\">\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #defaultContentTemplate>\r\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\r\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\r\n          {{ i18n.getMonthLabel(month.firstDate) }}\r\n        </div>\r\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <div class=\"ngb-dp-header\">\r\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\r\n        [date]=\"model.firstDate!\"\r\n        [months]=\"model.months\"\r\n        [disabled]=\"model.disabled\"\r\n        [showSelect]=\"model.navigation === 'select'\"\r\n        [prevDisabled]=\"model.prevDisabled\"\r\n        [nextDisabled]=\"model.nextDisabled\"\r\n        [selectBoxes]=\"model.selectBoxes\"\r\n        (navigate)=\"onNavigateEvent($event)\"\r\n        (select)=\"onNavigateDateSelect($event)\">\r\n      </ngb-datepicker-navigation>\r\n    </div>\r\n\r\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\r\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\r\n    </div>\r\n\r\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\r\n  `,\r\n  providers:\r\n      [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbDatepicker), multi: true}, NgbDatepickerService]\r\n})\r\nexport class NgbDatepicker implements OnDestroy,\r\n    OnChanges, OnInit, ControlValueAccessor {\r\n  static ngAcceptInputType_autoClose: boolean | string;\r\n  static ngAcceptInputType_navigation: string;\r\n  static ngAcceptInputType_outsideDays: string;\r\n  static ngAcceptInputType_weekdays: boolean | number;\r\n\r\n  model: DatepickerViewModel;\r\n\r\n  @ViewChild('defaultDayTemplate', {static: true}) private _defaultDayTemplate: TemplateRef<DayTemplateContext>;\r\n  @ViewChild('content', {static: true}) private _contentEl: ElementRef<HTMLElement>;\r\n  @ContentChild(NgbDatepickerContent, {static: true}) contentTemplate: NgbDatepickerContent;\r\n\r\n  private _controlValue: NgbDate | null = null;\r\n  private _destroyed$ = new Subject<void>();\r\n  private _publicState: NgbDatepickerState = <any>{};\r\n  private _showWeekdays: boolean;\r\n\r\n  /**\r\n   * The reference to a custom template for the day.\r\n   *\r\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\r\n   *\r\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\r\n   */\r\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\r\n\r\n  /**\r\n   * The callback to pass any arbitrary data to the template cell via the\r\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\r\n   *\r\n   * `current` is the month that is currently displayed by the datepicker.\r\n   *\r\n   * @since 3.3.0\r\n   */\r\n  @Input() dayTemplateData: (date: NgbDate, current?: {year: number, month: number}) => any;\r\n\r\n  /**\r\n   * The number of months to display.\r\n   */\r\n  @Input() displayMonths: number;\r\n\r\n  /**\r\n   * The first day of the week.\r\n   *\r\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\r\n   */\r\n  @Input() firstDayOfWeek: number;\r\n\r\n  /**\r\n   * The reference to the custom template for the datepicker footer.\r\n   *\r\n   * @since 3.3.0\r\n   */\r\n  @Input() footerTemplate: TemplateRef<any>;\r\n\r\n  /**\r\n   * The callback to mark some dates as disabled.\r\n   *\r\n   * It is called for each new date when navigating to a different month.\r\n   *\r\n   * `current` is the month that is currently displayed by the datepicker.\r\n   */\r\n  @Input() markDisabled: (date: NgbDate, current?: {year: number, month: number}) => boolean;\r\n\r\n  /**\r\n   * The latest date that can be displayed or selected.\r\n   *\r\n   * If not provided, 'year' select box will display 10 years after the current month.\r\n   */\r\n  @Input() maxDate: NgbDateStruct;\r\n\r\n  /**\r\n   * The earliest date that can be displayed or selected.\r\n   *\r\n   * If not provided, 'year' select box will display 10 years before the current month.\r\n   */\r\n  @Input() minDate: NgbDateStruct;\r\n\r\n  /**\r\n   * Navigation type.\r\n   *\r\n   * * `\"select\"` - select boxes for month and navigation arrows\r\n   * * `\"arrows\"` - only navigation arrows\r\n   * * `\"none\"` - no navigation visible at all\r\n   */\r\n  @Input() navigation: 'select' | 'arrows' | 'none';\r\n\r\n  /**\r\n   * The way of displaying days that don't belong to the current month.\r\n   *\r\n   * * `\"visible\"` - days are visible\r\n   * * `\"hidden\"` - days are hidden, white space preserved\r\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\r\n   *\r\n   * For the 2+ months view, days in between months are never shown.\r\n   */\r\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\r\n\r\n  /**\r\n   * If `true`, weekdays will be displayed.\r\n   *\r\n   * @deprecated 9.1.0, please use 'weekdays' instead\r\n   */\r\n  @Input()\r\n  set showWeekdays(weekdays: boolean) {\r\n    this.weekdays = weekdays;\r\n    this._showWeekdays = weekdays;\r\n  }\r\n\r\n  get showWeekdays(): boolean { return this._showWeekdays; }\r\n\r\n  /**\r\n   * If `true`, week numbers will be displayed.\r\n   */\r\n  @Input() showWeekNumbers: boolean;\r\n\r\n  /**\r\n   * The date to open calendar with.\r\n   *\r\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   * If nothing or invalid date is provided, calendar will open with current month.\r\n   *\r\n   * You could use `navigateTo(date)` method as an alternative.\r\n   */\r\n  @Input() startDate: {year: number, month: number, day?: number};\r\n\r\n  /**\r\n   * The way weekdays should be displayed.\r\n   *\r\n   * * `true` - weekdays are displayed using default width\r\n   * * `false` - weekdays are not displayed\r\n   * * `TranslationWidth` - weekdays are displayed using specified width\r\n   *\r\n   * @since 9.1.0\r\n   */\r\n  @Input() weekdays: TranslationWidth | boolean;\r\n\r\n  /**\r\n   * An event emitted right before the navigation happens and displayed month changes.\r\n   *\r\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\r\n   */\r\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\r\n\r\n  /**\r\n   * An event emitted when user selects a date using keyboard or mouse.\r\n   *\r\n   * The payload of the event is currently selected `NgbDate`.\r\n   *\r\n   * @since 5.2.0\r\n   */\r\n  @Output() dateSelect = new EventEmitter<NgbDate>();\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  constructor(\r\n      private _service: NgbDatepickerService, private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n,\r\n      config: NgbDatepickerConfig, cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\r\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\r\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\r\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate', 'weekdays']\r\n        .forEach(input => this[input] = config[input]);\r\n\r\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.dateSelect.emit(date); });\r\n\r\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\r\n      const newDate = model.firstDate !;\r\n      const oldDate = this.model ? this.model.firstDate : null;\r\n\r\n      // update public state\r\n      this._publicState = {\r\n        maxDate: model.maxDate,\r\n        minDate: model.minDate,\r\n        firstDate: model.firstDate !,\r\n        lastDate: model.lastDate !,\r\n        focusedDate: model.focusDate !,\r\n        months: model.months.map(viewModel => viewModel.firstDate)\r\n      };\r\n\r\n      let navigationPrevented = false;\r\n      // emitting navigation event if the first month changes\r\n      if (!newDate.equals(oldDate)) {\r\n        this.navigate.emit({\r\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\r\n          next: {year: newDate.year, month: newDate.month},\r\n          preventDefault: () => navigationPrevented = true\r\n        });\r\n\r\n        // can't prevent the very first navigation\r\n        if (navigationPrevented && oldDate !== null) {\r\n          this._service.open(oldDate);\r\n          return;\r\n        }\r\n      }\r\n\r\n      const newSelectedDate = model.selectedDate;\r\n      const newFocusedDate = model.focusDate;\r\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\r\n\r\n      this.model = model;\r\n\r\n      // handling selection change\r\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\r\n        this._controlValue = newSelectedDate;\r\n        this.onTouched();\r\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\r\n      }\r\n\r\n      // handling focus change\r\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\r\n        this.focus();\r\n      }\r\n\r\n      cd.markForCheck();\r\n    });\r\n  }\r\n\r\n  /**\r\n   *  Returns the readonly public state of the datepicker\r\n   *\r\n   * @since 5.2.0\r\n   */\r\n  get state(): NgbDatepickerState { return this._publicState; }\r\n\r\n  /**\r\n   *  Returns the calendar service used in the specific datepicker instance.\r\n   *\r\n   *  @since 5.3.0\r\n   */\r\n  get calendar(): NgbCalendar { return this._calendar; }\r\n\r\n  /**\r\n   *  Focuses on given date.\r\n   */\r\n  focusDate(date?: NgbDateStruct | null): void { this._service.focus(NgbDate.from(date)); }\r\n\r\n  /**\r\n   *  Selects focused date.\r\n   */\r\n  focusSelect(): void { this._service.focusSelect(); }\r\n\r\n  focus() {\r\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n      const elementToFocus =\r\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\r\n      if (elementToFocus) {\r\n        elementToFocus.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Navigates to the provided date.\r\n   *\r\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   * If nothing or invalid date provided calendar will open current month.\r\n   *\r\n   * Use the `[startDate]` input as an alternative.\r\n   */\r\n  navigateTo(date?: {year: number, month: number, day?: number}) {\r\n    this._service.open(NgbDate.from(date ? date.day ? date as NgbDateStruct : {...date, day: 1} : null));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      const focusIns$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusin');\r\n      const focusOuts$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusout');\r\n      const {nativeElement} = this._elementRef;\r\n\r\n      // we're changing 'focusVisible' only when entering or leaving months view\r\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\r\n      merge(focusIns$, focusOuts$)\r\n          .pipe(\r\n              filter(\r\n                  ({target, relatedTarget}) =>\r\n                      !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\r\n                        nativeElement.contains(target as Node) && nativeElement.contains(relatedTarget as Node))),\r\n              takeUntil(this._destroyed$))\r\n          .subscribe(({type}) => this._ngZone.run(() => this._service.set({focusVisible: type === 'focusin'})));\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() { this._destroyed$.next(); }\r\n\r\n  ngOnInit() {\r\n    if (this.model === undefined) {\r\n      const inputs: DatepickerServiceInputs = {};\r\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\r\n       'outsideDays', 'weekdays']\r\n          .forEach(name => inputs[name] = this[name]);\r\n      this._service.set(inputs);\r\n\r\n      this.navigateTo(this.startDate);\r\n    }\r\n    if (!this.dayTemplate) {\r\n      this.dayTemplate = this._defaultDayTemplate;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const inputs: DatepickerServiceInputs = {};\r\n\r\n    if (changes.showWeekdays) {\r\n      inputs['weekdays'] = this.weekdays;\r\n    }\r\n\r\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\r\n     'outsideDays', 'weekdays']\r\n        .filter(name => name in changes)\r\n        .forEach(name => inputs[name] = this[name]);\r\n    this._service.set(inputs);\r\n\r\n    if ('startDate' in changes) {\r\n      const {currentValue, previousValue} = changes.startDate;\r\n      if (isChangedMonth(previousValue, currentValue)) {\r\n        this.navigateTo(this.startDate);\r\n      }\r\n    }\r\n  }\r\n\r\n  onDateSelect(date: NgbDate) {\r\n    this._service.focus(date);\r\n    this._service.select(date, {emitEvent: true});\r\n  }\r\n\r\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\r\n\r\n  onNavigateEvent(event: NavigationEvent) {\r\n    switch (event) {\r\n      case NavigationEvent.PREV:\r\n        this._service.open(this._calendar.getPrev(this.model.firstDate !, 'm', 1));\r\n        break;\r\n      case NavigationEvent.NEXT:\r\n        this._service.open(this._calendar.getNext(this.model.firstDate !, 'm', 1));\r\n        break;\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\r\n\r\n  setDisabledState(disabled: boolean) { this._service.set({disabled}); }\r\n\r\n  writeValue(value) {\r\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\r\n    this._service.select(this._controlValue);\r\n  }\r\n}\r\n","export enum Key {\r\n  Tab = 9,\r\n  Enter = 13,\r\n  Escape = 27,\r\n  Space = 32,\r\n  PageUp = 33,\r\n  PageDown = 34,\r\n  End = 35,\r\n  Home = 36,\r\n  ArrowLeft = 37,\r\n  ArrowUp = 38,\r\n  ArrowRight = 39,\r\n  ArrowDown = 40\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbDatepicker} from './datepicker';\r\nimport {Key} from '../util/key';\r\n\r\n/**\r\n * A service that represents the keyboard navigation.\r\n *\r\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\r\n *\r\n * @since 5.2.0\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbDatepickerKeyboardService {\r\n  /**\r\n   * Processes a keyboard event.\r\n   */\r\n  processKey(event: KeyboardEvent, datepicker: NgbDatepicker) {\r\n    const {state, calendar} = datepicker;\r\n    // tslint:disable-next-line:deprecation\r\n    switch (event.which) {\r\n      case Key.PageUp:\r\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\r\n        break;\r\n      case Key.PageDown:\r\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\r\n        break;\r\n      case Key.End:\r\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\r\n        break;\r\n      case Key.Home:\r\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\r\n        break;\r\n      case Key.ArrowLeft:\r\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\r\n        break;\r\n      case Key.ArrowUp:\r\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\r\n        break;\r\n      case Key.ArrowRight:\r\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\r\n        break;\r\n      case Key.ArrowDown:\r\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\r\n        break;\r\n      case Key.Enter:\r\n      case Key.Space:\r\n        datepicker.focusSelect();\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {NgbDatepicker} from './datepicker';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\nimport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\r\nimport {NgbDatepickerService} from './datepicker-service';\r\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\n\r\n/**\r\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\r\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\r\n *\r\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\r\n *\r\n * @since 5.3.0\r\n */\r\n@Component({\r\n  selector: 'ngb-datepicker-month',\r\n  host: {'role': 'grid', '(keydown)': 'onKeyDown($event)'},\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./datepicker-month.scss'],\r\n  template: `\r\n    <div *ngIf=\"viewModel.weekdays.length > 0\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\r\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek small\">{{ i18n.getWeekLabel() }}</div>\r\n      <div *ngFor=\"let weekday of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">{{ weekday }}</div>\r\n    </div>\r\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\r\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\r\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\r\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\r\n             [class.disabled]=\"day.context.disabled\"\r\n             [tabindex]=\"day.tabindex\"\r\n             [class.hidden]=\"day.hidden\"\r\n             [class.ngb-dp-today]=\"day.context.today\"\r\n             [attr.aria-label]=\"day.ariaLabel\">\r\n          <ng-template [ngIf]=\"!day.hidden\">\r\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class NgbDatepickerMonth {\r\n  /**\r\n   * The first date of month to be rendered.\r\n   *\r\n   * This month must one of the months present in the\r\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\r\n   */\r\n  @Input()\r\n  set month(month: NgbDateStruct) {\r\n    this.viewModel = this._service.getMonth(month);\r\n  }\r\n\r\n  viewModel: MonthViewModel;\r\n\r\n  constructor(\r\n      public i18n: NgbDatepickerI18n, public datepicker: NgbDatepicker,\r\n      private _keyboardService: NgbDatepickerKeyboardService, private _service: NgbDatepickerService) {}\r\n\r\n  onKeyDown(event: KeyboardEvent) { this._keyboardService.processKey(event, this.datepicker); }\r\n\r\n  doSelect(day: DayViewModel) {\r\n    if (!day.context.disabled && !day.hidden) {\r\n      this.datepicker.onDateSelect(day.date);\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\r\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\n\r\n@Component({\r\n  selector: 'ngb-datepicker-navigation',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./datepicker-navigation.scss'],\r\n  template: `\r\n    <div class=\"ngb-dp-arrow\">\r\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\r\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\r\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\r\n        <span class=\"ngb-dp-navigation-chevron\"></span>\r\n      </button>\r\n    </div>\r\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\r\n      [date]=\"date\"\r\n      [disabled] = \"disabled\"\r\n      [months]=\"selectBoxes.months\"\r\n      [years]=\"selectBoxes.years\"\r\n      (select)=\"select.emit($event)\">\r\n    </ngb-datepicker-navigation-select>\r\n\r\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\r\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\r\n      <div class=\"ngb-dp-month-name\">\r\n        {{ i18n.getMonthLabel(month.firstDate) }}\r\n      </div>\r\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\r\n    </ng-template>\r\n    <div class=\"ngb-dp-arrow right\">\r\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\r\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\r\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\r\n        <span class=\"ngb-dp-navigation-chevron\"></span>\r\n      </button>\r\n    </div>\r\n    `\r\n})\r\nexport class NgbDatepickerNavigation {\r\n  navigation = NavigationEvent;\r\n\r\n  @Input() date: NgbDate;\r\n  @Input() disabled: boolean;\r\n  @Input() months: MonthViewModel[] = [];\r\n  @Input() showSelect: boolean;\r\n  @Input() prevDisabled: boolean;\r\n  @Input() nextDisabled: boolean;\r\n  @Input() selectBoxes: {years: number[], months: number[]};\r\n\r\n  @Output() navigate = new EventEmitter<NavigationEvent>();\r\n  @Output() select = new EventEmitter<NgbDate>();\r\n\r\n  constructor(public i18n: NgbDatepickerI18n) {}\r\n\r\n  onClickPrev(event: MouseEvent) {\r\n    (event.currentTarget as HTMLElement).focus();\r\n    this.navigate.emit(this.navigation.PREV);\r\n  }\r\n\r\n  onClickNext(event: MouseEvent) {\r\n    (event.currentTarget as HTMLElement).focus();\r\n    this.navigate.emit(this.navigation.NEXT);\r\n  }\r\n}\r\n","import {NgZone} from '@angular/core';\r\nimport {fromEvent, Observable, race} from 'rxjs';\r\nimport {delay, filter, map, takeUntil, tap, withLatestFrom} from 'rxjs/operators';\r\nimport {Key} from './key';\r\nimport {closest} from './util';\r\n\r\nconst isContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\r\n    array ? array.some(item => item.contains(element)) : false;\r\n\r\nconst matchesSelectorIfAny = (element: HTMLElement, selector?: string) =>\r\n    !selector || closest(element, selector) != null;\r\n\r\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\r\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\r\nconst isMobile = (() => {\r\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\r\n      (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\r\n  const isAndroid = () => /Android/.test(navigator.userAgent);\r\n\r\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\r\n})();\r\n\r\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\r\n// when tapping on the triggering element\r\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\r\n\r\nexport const enum SOURCE {ESCAPE, CLICK}\r\n\r\nexport function ngbAutoClose(\r\n    zone: NgZone, document: any, type: boolean | 'inside' | 'outside', close: (source: SOURCE) => void,\r\n    closed$: Observable<any>, insideElements: HTMLElement[], ignoreElements?: HTMLElement[], insideSelector?: string) {\r\n  // closing on ESC and outside clicks\r\n  if (type) {\r\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\r\n\r\n      const shouldCloseOnClick = (event: MouseEvent) => {\r\n        const element = event.target as HTMLElement;\r\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\r\n          return false;\r\n        }\r\n        if (type === 'inside') {\r\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\r\n        } else if (type === 'outside') {\r\n          return !isContainedIn(element, insideElements);\r\n        } else /* if (type === true) */ {\r\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\r\n        }\r\n      };\r\n\r\n      const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown')\r\n                           .pipe(\r\n                               takeUntil(closed$),\r\n                               // tslint:disable-next-line:deprecation\r\n                               filter(e => e.which === Key.Escape), tap(e => e.preventDefault()));\r\n\r\n\r\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\r\n      // because on 'mouseup' DOM nodes might be detached\r\n      const mouseDowns$ =\r\n          fromEvent<MouseEvent>(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\r\n\r\n      const closeableClicks$ = fromEvent<MouseEvent>(document, 'mouseup')\r\n                                   .pipe(\r\n                                       withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0),\r\n                                       takeUntil(closed$)) as Observable<MouseEvent>;\r\n\r\n\r\n      race<SOURCE>([\r\n        escapes$.pipe(map(_ => SOURCE.ESCAPE)), closeableClicks$.pipe(map(_ => SOURCE.CLICK))\r\n      ]).subscribe((source: SOURCE) => zone.run(() => close(source)));\r\n    }));\r\n  }\r\n}\r\n","import {NgZone} from '@angular/core';\r\n\r\nimport {fromEvent, Observable} from 'rxjs';\r\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\r\n\r\nimport {Key} from './key';\r\n\r\n\r\nexport const FOCUSABLE_ELEMENTS_SELECTOR = [\r\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\r\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\r\n].join(', ');\r\n\r\n/**\r\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\r\n */\r\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\r\n  const list: HTMLElement[] =\r\n      Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>)\r\n          .filter(el => el.tabIndex !== -1);\r\n  return [list[0], list[list.length - 1]];\r\n}\r\n\r\n/**\r\n * Function that enforces browser focus to be trapped inside a DOM element.\r\n *\r\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\r\n *\r\n * @param zone Angular zone\r\n * @param element The element around which focus will be trapped inside\r\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\r\n * and free internal resources\r\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\r\n * false)\r\n */\r\nexport const ngbFocusTrap =\r\n    (zone: NgZone, element: HTMLElement, stopFocusTrap$: Observable<any>, refocusOnClick = false) => {\r\n      zone.runOutsideAngular(() => {\r\n        // last focused element\r\n        const lastFocusedElement$ =\r\n            fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\r\n\r\n        // 'tab' / 'shift+tab' stream\r\n        fromEvent<KeyboardEvent>(element, 'keydown')\r\n            .pipe(\r\n                takeUntil(stopFocusTrap$),\r\n                // tslint:disable:deprecation\r\n                filter(e => e.which === Key.Tab),\r\n                // tslint:enable:deprecation\r\n                withLatestFrom(lastFocusedElement$))\r\n            .subscribe(([tabEvent, focusedElement]) => {\r\n              const[first, last] = getFocusableBoundaryElements(element);\r\n\r\n              if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\r\n                last.focus();\r\n                tabEvent.preventDefault();\r\n              }\r\n\r\n              if (focusedElement === last && !tabEvent.shiftKey) {\r\n                first.focus();\r\n                tabEvent.preventDefault();\r\n              }\r\n            });\r\n\r\n        // inside click\r\n        if (refocusOnClick) {\r\n          fromEvent(element, 'click')\r\n              .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\r\n              .subscribe(lastFocusedElement => lastFocusedElement.focus());\r\n        }\r\n      });\r\n    };\r\n","// previous version:\r\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\r\nexport class Positioning {\r\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\r\n\r\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\r\n\r\n  private isStaticPositioned(element: HTMLElement): boolean {\r\n    return (this.getStyle(element, 'position') || 'static') === 'static';\r\n  }\r\n\r\n  private offsetParent(element: HTMLElement): HTMLElement {\r\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\r\n\r\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\r\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\r\n    }\r\n\r\n    return offsetParentEl || document.documentElement;\r\n  }\r\n\r\n  position(element: HTMLElement, round = true): ClientRect {\r\n    let elPosition: ClientRect;\r\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\r\n\r\n    if (this.getStyle(element, 'position') === 'fixed') {\r\n      elPosition = element.getBoundingClientRect();\r\n      elPosition = {\r\n        top: elPosition.top,\r\n        bottom: elPosition.bottom,\r\n        left: elPosition.left,\r\n        right: elPosition.right,\r\n        height: elPosition.height,\r\n        width: elPosition.width\r\n      };\r\n    } else {\r\n      const offsetParentEl = this.offsetParent(element);\r\n\r\n      elPosition = this.offset(element, false);\r\n\r\n      if (offsetParentEl !== document.documentElement) {\r\n        parentOffset = this.offset(offsetParentEl, false);\r\n      }\r\n\r\n      parentOffset.top += offsetParentEl.clientTop;\r\n      parentOffset.left += offsetParentEl.clientLeft;\r\n    }\r\n\r\n    elPosition.top -= parentOffset.top;\r\n    elPosition.bottom -= parentOffset.top;\r\n    elPosition.left -= parentOffset.left;\r\n    elPosition.right -= parentOffset.left;\r\n\r\n    if (round) {\r\n      elPosition.top = Math.round(elPosition.top);\r\n      elPosition.bottom = Math.round(elPosition.bottom);\r\n      elPosition.left = Math.round(elPosition.left);\r\n      elPosition.right = Math.round(elPosition.right);\r\n    }\r\n\r\n    return elPosition;\r\n  }\r\n\r\n  offset(element: HTMLElement, round = true): ClientRect {\r\n    const elBcr = element.getBoundingClientRect();\r\n    const viewportOffset = {\r\n      top: window.pageYOffset - document.documentElement.clientTop,\r\n      left: window.pageXOffset - document.documentElement.clientLeft\r\n    };\r\n\r\n    let elOffset = {\r\n      height: elBcr.height || element.offsetHeight,\r\n      width: elBcr.width || element.offsetWidth,\r\n      top: elBcr.top + viewportOffset.top,\r\n      bottom: elBcr.bottom + viewportOffset.top,\r\n      left: elBcr.left + viewportOffset.left,\r\n      right: elBcr.right + viewportOffset.left\r\n    };\r\n\r\n    if (round) {\r\n      elOffset.height = Math.round(elOffset.height);\r\n      elOffset.width = Math.round(elOffset.width);\r\n      elOffset.top = Math.round(elOffset.top);\r\n      elOffset.bottom = Math.round(elOffset.bottom);\r\n      elOffset.left = Math.round(elOffset.left);\r\n      elOffset.right = Math.round(elOffset.right);\r\n    }\r\n\r\n    return elOffset;\r\n  }\r\n\r\n  /*\r\n    Return false if the element to position is outside the viewport\r\n  */\r\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\r\n      boolean {\r\n    const[placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\r\n\r\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\r\n    const targetElStyles = this.getAllStyles(targetElement);\r\n\r\n    const marginTop = parseFloat(targetElStyles.marginTop);\r\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\r\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\r\n    const marginRight = parseFloat(targetElStyles.marginRight);\r\n\r\n    let topPosition = 0;\r\n    let leftPosition = 0;\r\n\r\n    switch (placementPrimary) {\r\n      case 'top':\r\n        topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\r\n        break;\r\n      case 'bottom':\r\n        topPosition = (hostElPosition.top + hostElPosition.height);\r\n        break;\r\n      case 'left':\r\n        leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\r\n        break;\r\n      case 'right':\r\n        leftPosition = (hostElPosition.left + hostElPosition.width);\r\n        break;\r\n    }\r\n\r\n    switch (placementSecondary) {\r\n      case 'top':\r\n        topPosition = hostElPosition.top;\r\n        break;\r\n      case 'bottom':\r\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\r\n        break;\r\n      case 'left':\r\n        leftPosition = hostElPosition.left;\r\n        break;\r\n      case 'right':\r\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\r\n        break;\r\n      case 'center':\r\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\r\n          leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\r\n        } else {\r\n          topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\r\n        }\r\n        break;\r\n    }\r\n\r\n    /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\r\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\r\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\r\n\r\n    // Check if the targetElement is inside the viewport\r\n    const targetElBCR = targetElement.getBoundingClientRect();\r\n    const html = document.documentElement;\r\n    const windowHeight = window.innerHeight || html.clientHeight;\r\n    const windowWidth = window.innerWidth || html.clientWidth;\r\n\r\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\r\n        targetElBCR.bottom <= windowHeight;\r\n  }\r\n}\r\n\r\nconst placementSeparator = /\\s+/;\r\nexport const positionService = new Positioning();\r\n\r\n/*\r\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\r\n * Returns the applied placement.\r\n * In case of auto placement, placements are selected in order\r\n *   'top', 'bottom', 'left', 'right',\r\n *   'top-left', 'top-right',\r\n *   'bottom-left', 'bottom-right',\r\n *   'left-top', 'left-bottom',\r\n *   'right-top', 'right-bottom'.\r\n * */\r\nexport function positionElements(\r\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\r\n    appendToBody?: boolean, baseClass?: string): Placement |\r\n    null {\r\n  let placementVals: Array<Placement> =\r\n      Array.isArray(placement) ? placement : placement.split(placementSeparator) as Array<Placement>;\r\n\r\n  const allowedPlacements = [\r\n    'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\r\n    'right-top', 'right-bottom'\r\n  ];\r\n\r\n  const classList = targetElement.classList;\r\n  const addClassesToTarget = (targetPlacement: Placement): Array<string> => {\r\n    const[primary, secondary] = targetPlacement.split('-');\r\n    const classes: string[] = [];\r\n    if (baseClass) {\r\n      classes.push(`${baseClass}-${primary}`);\r\n      if (secondary) {\r\n        classes.push(`${baseClass}-${primary}-${secondary}`);\r\n      }\r\n\r\n      classes.forEach((classname) => { classList.add(classname); });\r\n    }\r\n    return classes;\r\n  };\r\n\r\n  // Remove old placement classes to avoid issues\r\n  if (baseClass) {\r\n    allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\r\n  }\r\n\r\n  // replace auto placement with other placements\r\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\r\n  if (hasAuto >= 0) {\r\n    allowedPlacements.forEach(function(obj) {\r\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\r\n        placementVals.splice(hasAuto++, 1, obj as Placement);\r\n      }\r\n    });\r\n  }\r\n\r\n  // coordinates where to position\r\n\r\n  // Required for transform:\r\n  const style = targetElement.style;\r\n  style.position = 'absolute';\r\n  style.top = '0';\r\n  style.left = '0';\r\n  style['will-change'] = 'transform';\r\n\r\n  let testPlacement: Placement | null = null;\r\n  let isInViewport = false;\r\n  for (testPlacement of placementVals) {\r\n    let addedClasses = addClassesToTarget(testPlacement);\r\n\r\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\r\n      isInViewport = true;\r\n      break;\r\n    }\r\n\r\n    // Remove the baseClasses for further calculation\r\n    if (baseClass) {\r\n      addedClasses.forEach((classname) => { classList.remove(classname); });\r\n    }\r\n  }\r\n\r\n  if (!isInViewport) {\r\n    // If nothing match, the first placement is the default one\r\n    testPlacement = placementVals[0];\r\n    addClassesToTarget(testPlacement);\r\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\r\n  }\r\n\r\n  return testPlacement;\r\n}\r\n\r\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\r\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\r\n\r\nexport type PlacementArray = Placement | Array<Placement>| string;\r\n","import {padNumber, toInteger, isNumber} from '../util/util';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\nimport {Injectable} from '@angular/core';\r\n\r\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\r\n  return new NgbDateISOParserFormatter();\r\n}\r\n\r\n/**\r\n * An abstract service for parsing and formatting dates for the\r\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\r\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\r\n * input element.\r\n *\r\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\r\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\r\n * in the input.\r\n *\r\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\r\n * to use an alternative string format or a custom parsing logic.\r\n *\r\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\r\n */\r\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\r\nexport abstract class NgbDateParserFormatter {\r\n  /**\r\n   * Parses the given `string` to an `NgbDateStruct`.\r\n   *\r\n   * Implementations should try their best to provide a result, even\r\n   * partial. They must return `null` if the value can't be parsed.\r\n   */\r\n  abstract parse(value: string): NgbDateStruct | null;\r\n\r\n  /**\r\n   * Formats the given `NgbDateStruct` to a `string`.\r\n   *\r\n   * Implementations should return an empty string if the given date is `null`,\r\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\r\n   */\r\n  abstract format(date: NgbDateStruct | null): string;\r\n}\r\n\r\n@Injectable()\r\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\r\n  parse(value: string): NgbDateStruct | null {\r\n    if (value != null) {\r\n      const dateParts = value.trim().split('-');\r\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n        return {year: toInteger(dateParts[0]), month: <any>null, day: <any>null};\r\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: <any>null};\r\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  format(date: NgbDateStruct | null): string {\r\n    return date ?\r\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\r\n        '';\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {NgbDatepickerConfig} from './datepicker-config';\r\nimport {PlacementArray} from '../util/positioning';\r\n\r\n/**\r\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the datepicker inputs used in the application.\r\n *\r\n * @since 5.2.0\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbInputDatepickerConfig extends NgbDatepickerConfig {\r\n  autoClose: boolean | 'inside' | 'outside' = true;\r\n  container: null | 'body';\r\n  positionTarget: string | HTMLElement;\r\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\r\n  restoreFocus: true | HTMLElement | string = true;\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport {DOCUMENT, TranslationWidth} from '@angular/common';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NG_VALIDATORS,\r\n  NG_VALUE_ACCESSOR,\r\n  ValidationErrors,\r\n  Validator\r\n} from '@angular/forms';\r\n\r\nimport {ngbAutoClose} from '../util/autoclose';\r\nimport {ngbFocusTrap} from '../util/focus-trap';\r\nimport {PlacementArray, positionElements} from '../util/positioning';\r\n\r\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\r\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\r\nimport {DayTemplateContext} from './datepicker-day-template-context';\r\nimport {NgbCalendar} from './ngb-calendar';\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\r\nimport {NgbDateStruct} from './ngb-date-struct';\r\nimport {NgbInputDatepickerConfig} from './datepicker-input-config';\r\nimport {NgbDatepickerConfig} from './datepicker-config';\r\nimport {isString} from '../util/util';\r\n\r\n/**\r\n * A directive that allows to stick a datepicker popup to an input field.\r\n *\r\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\r\n */\r\n@Directive({\r\n  selector: 'input[ngbDatepicker]',\r\n  exportAs: 'ngbDatepicker',\r\n  host: {\r\n    '(input)': 'manualDateChange($event.target.value)',\r\n    '(change)': 'manualDateChange($event.target.value, true)',\r\n    '(focus)': 'onFocus()',\r\n    '(blur)': 'onBlur()',\r\n    '[disabled]': 'disabled'\r\n  },\r\n  providers: [\r\n    {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbInputDatepicker), multi: true},\r\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => NgbInputDatepicker), multi: true},\r\n    {provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig}\r\n  ],\r\n})\r\nexport class NgbInputDatepicker implements OnChanges,\r\n    OnDestroy, ControlValueAccessor, Validator {\r\n  static ngAcceptInputType_autoClose: boolean | string;\r\n  static ngAcceptInputType_disabled: boolean | '';\r\n  static ngAcceptInputType_navigation: string;\r\n  static ngAcceptInputType_outsideDays: string;\r\n  static ngAcceptInputType_weekdays: boolean | number;\r\n\r\n  private _cRef: ComponentRef<NgbDatepicker>| null = null;\r\n  private _disabled = false;\r\n  private _elWithFocus: HTMLElement | null = null;\r\n  private _model: NgbDate | null = null;\r\n  private _inputValue: string;\r\n  private _showWeekdays: boolean;\r\n  private _zoneSubscription: any;\r\n\r\n  /**\r\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\r\n   *\r\n   * * `true` - the popup will close on both date selection and outside click.\r\n   * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\r\n   * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\r\n   * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  @Input() autoClose: boolean | 'inside' | 'outside';\r\n\r\n  /**\r\n   * An optional class applied to the datepicker popup element.\r\n   *\r\n   * @since 9.1.0\r\n   */\r\n  @Input() datepickerClass: string;\r\n\r\n  /**\r\n   * The reference to a custom template for the day.\r\n   *\r\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\r\n   *\r\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\r\n   */\r\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\r\n\r\n  /**\r\n   * The callback to pass any arbitrary data to the template cell via the\r\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\r\n   *\r\n   * `current` is the month that is currently displayed by the datepicker.\r\n   *\r\n   * @since 3.3.0\r\n   */\r\n  @Input() dayTemplateData: (date: NgbDate, current?: {year: number, month: number}) => any;\r\n\r\n  /**\r\n   * The number of months to display.\r\n   */\r\n  @Input() displayMonths: number;\r\n\r\n  /**\r\n   * The first day of the week.\r\n   *\r\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\r\n   */\r\n  @Input() firstDayOfWeek: number;\r\n\r\n  /**\r\n   * The reference to the custom template for the datepicker footer.\r\n   *\r\n   * @since 3.3.0\r\n   */\r\n  @Input() footerTemplate: TemplateRef<any>;\r\n\r\n  /**\r\n   * The callback to mark some dates as disabled.\r\n   *\r\n   * It is called for each new date when navigating to a different month.\r\n   *\r\n   * `current` is the month that is currently displayed by the datepicker.\r\n   */\r\n  @Input() markDisabled: (date: NgbDate, current?: {year: number, month: number}) => boolean;\r\n\r\n  /**\r\n   * The earliest date that can be displayed or selected. Also used for form validation.\r\n   *\r\n   * If not provided, 'year' select box will display 10 years before the current month.\r\n   */\r\n  @Input() minDate: NgbDateStruct;\r\n\r\n  /**\r\n   * The latest date that can be displayed or selected. Also used for form validation.\r\n   *\r\n   * If not provided, 'year' select box will display 10 years after the current month.\r\n   */\r\n  @Input() maxDate: NgbDateStruct;\r\n\r\n  /**\r\n   * Navigation type.\r\n   *\r\n   * * `\"select\"` - select boxes for month and navigation arrows\r\n   * * `\"arrows\"` - only navigation arrows\r\n   * * `\"none\"` - no navigation visible at all\r\n   */\r\n  @Input() navigation: 'select' | 'arrows' | 'none';\r\n\r\n  /**\r\n   * The way of displaying days that don't belong to the current month.\r\n   *\r\n   * * `\"visible\"` - days are visible\r\n   * * `\"hidden\"` - days are hidden, white space preserved\r\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\r\n   *\r\n   * For the 2+ months view, days in between months are never shown.\r\n   */\r\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\r\n\r\n  /**\r\n   * The preferred placement of the datepicker popup.\r\n   *\r\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\r\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\r\n   * `\"right-bottom\"`\r\n   *\r\n   * Accepts an array of strings or a string with space separated possible values.\r\n   *\r\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\r\n   *\r\n   * Please see the [positioning overview](#/positioning) for more details.\r\n   */\r\n  @Input() placement: PlacementArray;\r\n\r\n  /**\r\n   * If `true`, when closing datepicker will focus element that was focused before datepicker was opened.\r\n   *\r\n   * Alternatively you could provide a selector or an `HTMLElement` to focus. If the element doesn't exist or invalid,\r\n   * we'll fallback to focus document body.\r\n   *\r\n   * @since 5.2.0\r\n   */\r\n  @Input() restoreFocus: true | string | HTMLElement;\r\n\r\n  /**\r\n   * If `true`, weekdays will be displayed.\r\n   *\r\n   * @deprecated 9.1.0, please use 'weekdays' instead\r\n   */\r\n  @Input()\r\n  set showWeekdays(weekdays: boolean) {\r\n    this.weekdays = weekdays;\r\n    this._showWeekdays = weekdays;\r\n  }\r\n\r\n  get showWeekdays(): boolean { return this._showWeekdays; }\r\n\r\n  /**\r\n   * If `true`, week numbers will be displayed.\r\n   */\r\n  @Input() showWeekNumbers: boolean;\r\n\r\n  /**\r\n   * The date to open calendar with.\r\n   *\r\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   * If nothing or invalid date is provided, calendar will open with current month.\r\n   *\r\n   * You could use `navigateTo(date)` method as an alternative.\r\n   */\r\n  @Input() startDate: {year: number, month: number, day?: number};\r\n\r\n  /**\r\n   * A selector specifying the element the datepicker popup should be appended to.\r\n   *\r\n   * Currently only supports `\"body\"`.\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * A css selector or html element specifying the element the datepicker popup should be positioned against.\r\n   *\r\n   * By default the input is used as a target.\r\n   *\r\n   * @since 4.2.0\r\n   */\r\n  @Input() positionTarget: string | HTMLElement;\r\n\r\n  /**\r\n   * The way weekdays should be displayed.\r\n   *\r\n   * * `true` - weekdays are displayed using default width\r\n   * * `false` - weekdays are not displayed\r\n   * * `TranslationWidth` - weekdays are displayed using specified width\r\n   *\r\n   * @since 9.1.0\r\n   */\r\n  @Input() weekdays: TranslationWidth | boolean;\r\n\r\n  /**\r\n   * An event emitted when user selects a date using keyboard or mouse.\r\n   *\r\n   * The payload of the event is currently selected `NgbDate`.\r\n   *\r\n   * @since 1.1.1\r\n   */\r\n  @Output() dateSelect = new EventEmitter<NgbDate>();\r\n\r\n  /**\r\n   * Event emitted right after the navigation happens and displayed month changes.\r\n   *\r\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\r\n   */\r\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\r\n\r\n  /**\r\n   * An event fired after closing datepicker window.\r\n   *\r\n   * @since 4.2.0\r\n   */\r\n  @Output() closed = new EventEmitter<void>();\r\n\r\n  @Input()\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: any) {\r\n    this._disabled = value === '' || (value && value !== 'false');\r\n\r\n    if (this.isOpen()) {\r\n      this._cRef !.instance.setDisabledState(this._disabled);\r\n    }\r\n  }\r\n\r\n  private _onChange = (_: any) => {};\r\n  private _onTouched = () => {};\r\n  private _validatorChange = () => {};\r\n\r\n\r\n  constructor(\r\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\r\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\r\n      private _ngZone: NgZone, private _calendar: NgbCalendar, private _dateAdapter: NgbDateAdapter<any>,\r\n      @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\r\n      config: NgbInputDatepickerConfig) {\r\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\r\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\r\n\r\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\r\n\r\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\r\n\r\n  validate(c: AbstractControl): ValidationErrors | null {\r\n    const {value} = c;\r\n\r\n    if (value != null) {\r\n      const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\r\n\r\n      if (!ngbDate) {\r\n        return {'ngbDate': {invalid: value}};\r\n      }\r\n\r\n      if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\r\n        return {'ngbDate': {minDate: {minDate: this.minDate, actual: value}}};\r\n      }\r\n\r\n      if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\r\n        return {'ngbDate': {maxDate: {maxDate: this.maxDate, actual: value}}};\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  writeValue(value) {\r\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\r\n    this._writeModelValue(this._model);\r\n  }\r\n\r\n  manualDateChange(value: string, updateView = false) {\r\n    const inputValueChanged = value !== this._inputValue;\r\n    if (inputValueChanged) {\r\n      this._inputValue = value;\r\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\r\n    }\r\n    if (inputValueChanged || !updateView) {\r\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\r\n    }\r\n    if (updateView && this._model) {\r\n      this._writeModelValue(this._model);\r\n    }\r\n  }\r\n\r\n  isOpen() { return !!this._cRef; }\r\n\r\n  /**\r\n   * Opens the datepicker popup.\r\n   *\r\n   * If the related form control contains a valid date, the corresponding month will be opened.\r\n   */\r\n  open() {\r\n    if (!this.isOpen()) {\r\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\r\n      this._cRef = this._vcRef.createComponent(cf);\r\n\r\n      this._applyPopupStyling(this._cRef.location.nativeElement);\r\n      this._applyDatepickerInputs(this._cRef.instance);\r\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\r\n      this._cRef.instance.ngOnInit();\r\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\r\n\r\n      // date selection event handling\r\n      this._cRef.instance.registerOnChange((selectedDate) => {\r\n        this.writeValue(selectedDate);\r\n        this._onChange(selectedDate);\r\n        this._onTouched();\r\n      });\r\n\r\n      this._cRef.changeDetectorRef.detectChanges();\r\n\r\n      this._cRef.instance.setDisabledState(this.disabled);\r\n\r\n      if (this.container === 'body') {\r\n        this._document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\r\n      }\r\n\r\n      // focus handling\r\n      this._elWithFocus = this._document.activeElement;\r\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\r\n      this._cRef.instance.focus();\r\n\r\n      ngbAutoClose(\r\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [],\r\n          [this._elRef.nativeElement, this._cRef.location.nativeElement]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the datepicker popup.\r\n   */\r\n  close() {\r\n    if (this.isOpen()) {\r\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef !.hostView));\r\n      this._cRef = null;\r\n      this.closed.emit();\r\n      this._changeDetector.markForCheck();\r\n\r\n      // restore focus\r\n      let elementToFocus: HTMLElement | null = this._elWithFocus;\r\n      if (isString(this.restoreFocus)) {\r\n        elementToFocus = this._document.querySelector(this.restoreFocus);\r\n      } else if (this.restoreFocus !== undefined) {\r\n        elementToFocus = this.restoreFocus as HTMLElement;\r\n      }\r\n\r\n      // in IE document.activeElement can contain an object without 'focus()' sometimes\r\n      if (elementToFocus && elementToFocus['focus']) {\r\n        elementToFocus.focus();\r\n      } else {\r\n        this._document.body.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the datepicker popup.\r\n   */\r\n  toggle() {\r\n    if (this.isOpen()) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigates to the provided date.\r\n   *\r\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\r\n   * If nothing or invalid date provided calendar will open current month.\r\n   *\r\n   * Use the `[startDate]` input as an alternative.\r\n   */\r\n  navigateTo(date?: {year: number, month: number, day?: number}) {\r\n    if (this.isOpen()) {\r\n      this._cRef !.instance.navigateTo(date);\r\n    }\r\n  }\r\n\r\n  onBlur() { this._onTouched(); }\r\n\r\n  onFocus() { this._elWithFocus = this._elRef.nativeElement; }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['minDate'] || changes['maxDate']) {\r\n      this._validatorChange();\r\n\r\n      if (this.isOpen()) {\r\n        if (changes['minDate']) {\r\n          this._cRef !.instance.minDate = this.minDate;\r\n        }\r\n        if (changes['maxDate']) {\r\n          this._cRef !.instance.maxDate = this.maxDate;\r\n        }\r\n        this._cRef !.instance.ngOnChanges(changes);\r\n      }\r\n    }\r\n\r\n    if (changes['datepickerClass']) {\r\n      const {currentValue, previousValue} = changes['datepickerClass'];\r\n      this._applyPopupClass(currentValue, previousValue);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n\r\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\r\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\r\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekNumbers', 'weekdays']\r\n        .forEach((optionName: string) => {\r\n          if (this[optionName] !== undefined) {\r\n            datepickerInstance[optionName] = this[optionName];\r\n          }\r\n        });\r\n    datepickerInstance.startDate = this.startDate || this._model;\r\n  }\r\n\r\n  private _applyPopupClass(newClass: string, oldClass?: string) {\r\n    const popupEl = this._cRef ?.location.nativeElement;\r\n    if (popupEl) {\r\n      if (newClass) {\r\n        this._renderer.addClass(popupEl, newClass);\r\n      }\r\n      if (oldClass) {\r\n        this._renderer.removeClass(popupEl, oldClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _applyPopupStyling(nativeElement: any) {\r\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\r\n    this._renderer.addClass(nativeElement, 'show');\r\n\r\n    if (this.container === 'body') {\r\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\r\n    }\r\n\r\n    this._applyPopupClass(this.datepickerClass);\r\n  }\r\n\r\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\r\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\r\n    datepickerInstance.dateSelect.subscribe(date => {\r\n      this.dateSelect.emit(date);\r\n      if (this.autoClose === true || this.autoClose === 'inside') {\r\n        this.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  private _writeModelValue(model: NgbDate | null) {\r\n    const value = this._parserFormatter.format(model);\r\n    this._inputValue = value;\r\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\r\n    if (this.isOpen()) {\r\n      this._cRef !.instance.writeValue(this._dateAdapter.toModel(model));\r\n      this._onTouched();\r\n    }\r\n  }\r\n\r\n  private _fromDateStruct(date: NgbDateStruct | null): NgbDate | null {\r\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\r\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\r\n  }\r\n\r\n  private _updatePopupPosition() {\r\n    if (!this._cRef) {\r\n      return;\r\n    }\r\n\r\n    let hostElement: HTMLElement;\r\n    if (isString(this.positionTarget)) {\r\n      hostElement = this._document.querySelector(this.positionTarget);\r\n    } else if (this.positionTarget instanceof HTMLElement) {\r\n      hostElement = this.positionTarget;\r\n    } else {\r\n      hostElement = this._elRef.nativeElement;\r\n    }\r\n\r\n    if (this.positionTarget && !hostElement) {\r\n      throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\r\n    }\r\n\r\n    positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\r\n  }\r\n}\r\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {NgbDate} from './ngb-date';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\n\r\n@Component({\r\n  selector: '[ngbDatepickerDayView]',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./datepicker-day-view.scss'],\r\n  host: {\r\n    'class': 'btn-light',\r\n    '[class.bg-primary]': 'selected',\r\n    '[class.text-white]': 'selected',\r\n    '[class.text-muted]': 'isMuted()',\r\n    '[class.outside]': 'isMuted()',\r\n    '[class.active]': 'focused'\r\n  },\r\n  template: `{{ i18n.getDayNumerals(date) }}`\r\n})\r\nexport class NgbDatepickerDayView {\r\n  @Input() currentMonth: number;\r\n  @Input() date: NgbDate;\r\n  @Input() disabled: boolean;\r\n  @Input() focused: boolean;\r\n  @Input() selected: boolean;\r\n\r\n  constructor(public i18n: NgbDatepickerI18n) {}\r\n\r\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ViewEncapsulation,\r\n  AfterViewChecked,\r\n  ViewChild,\r\n  ElementRef,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport {NgbDate} from './ngb-date';\r\nimport {toInteger} from '../util/util';\r\nimport {NgbDatepickerI18n} from './datepicker-i18n';\r\n\r\n@Component({\r\n  selector: 'ngb-datepicker-navigation-select',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./datepicker-navigation-select.scss'],\r\n  template: `\r\n    <select #month\r\n      [disabled]=\"disabled\"\r\n      class=\"custom-select\"\r\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\r\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\r\n      (change)=\"changeMonth($any($event).target.value)\">\r\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\r\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\r\n    </select><select #year\r\n      [disabled]=\"disabled\"\r\n      class=\"custom-select\"\r\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\r\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\r\n      (change)=\"changeYear($any($event).target.value)\">\r\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\r\n    </select>\r\n  `\r\n})\r\nexport class NgbDatepickerNavigationSelect implements AfterViewChecked {\r\n  @Input() date: NgbDate;\r\n  @Input() disabled: boolean;\r\n  @Input() months: number[];\r\n  @Input() years: number[];\r\n\r\n  @Output() select = new EventEmitter<NgbDate>();\r\n\r\n  @ViewChild('month', {static: true, read: ElementRef}) monthSelect: ElementRef;\r\n  @ViewChild('year', {static: true, read: ElementRef}) yearSelect: ElementRef;\r\n\r\n  private _month = -1;\r\n  private _year = -1;\r\n\r\n  constructor(public i18n: NgbDatepickerI18n, private _renderer: Renderer2) {}\r\n\r\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\r\n\r\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\r\n\r\n  ngAfterViewChecked() {\r\n    if (this.date) {\r\n      if (this.date.month !== this._month) {\r\n        this._month = this.date.month;\r\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\r\n      }\r\n      if (this.date.year !== this._year) {\r\n        this._year = this.date.year;\r\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {NgbDate} from '../ngb-date';\r\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\r\nimport {Injectable} from '@angular/core';\r\nimport {isNumber} from '../../util/util';\r\n\r\n@Injectable()\r\nexport abstract class NgbCalendarHijri extends NgbCalendar {\r\n  /**\r\n   * Returns the number of days in a specific Hijri month.\r\n   * `month` is 1 for Muharram, 2 for Safar, etc.\r\n   * `year` is any Hijri year.\r\n   */\r\n  abstract getDaysPerMonth(month: number, year: number): number;\r\n\r\n  /**\r\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\r\n   * `gDate` is s JS Date to be converted to Hijri.\r\n   */\r\n  abstract fromGregorian(gDate: Date): NgbDate;\r\n\r\n  /**\r\n   * Converts the current Hijri date to Gregorian.\r\n   */\r\n  abstract toGregorian(hDate: NgbDate): Date;\r\n\r\n  getDaysPerWeek() { return 7; }\r\n\r\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\r\n\r\n  getWeeksPerMonth() { return 6; }\r\n\r\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\r\n    date = new NgbDate(date.year, date.month, date.day);\r\n\r\n    switch (period) {\r\n      case 'y':\r\n        date = this._setYear(date, date.year + number);\r\n        date.month = 1;\r\n        date.day = 1;\r\n        return date;\r\n      case 'm':\r\n        date = this._setMonth(date, date.month + number);\r\n        date.day = 1;\r\n        return date;\r\n      case 'd':\r\n        return this._setDay(date, date.day + number);\r\n      default:\r\n        return date;\r\n    }\r\n  }\r\n\r\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\r\n\r\n  getWeekday(date: NgbDate) {\r\n    const day = this.toGregorian(date).getDay();\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    return day === 0 ? 7 : day;\r\n  }\r\n\r\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    if (firstDayOfWeek === 7) {\r\n      firstDayOfWeek = 0;\r\n    }\r\n\r\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\r\n    const date = week[thursdayIndex];\r\n\r\n    const jsDate = this.toGregorian(date);\r\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\r\n    const time = jsDate.getTime();\r\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\r\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\r\n  }\r\n\r\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\r\n\r\n\r\n  isValid(date?: NgbDate | null): boolean {\r\n    return date != null && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\r\n        !isNaN(this.toGregorian(date).getTime());\r\n  }\r\n\r\n  private _setDay(date: NgbDate, day: number): NgbDate {\r\n    day = +day;\r\n    let mDays = this.getDaysPerMonth(date.month, date.year);\r\n    if (day <= 0) {\r\n      while (day <= 0) {\r\n        date = this._setMonth(date, date.month - 1);\r\n        mDays = this.getDaysPerMonth(date.month, date.year);\r\n        day += mDays;\r\n      }\r\n    } else if (day > mDays) {\r\n      while (day > mDays) {\r\n        day -= mDays;\r\n        date = this._setMonth(date, date.month + 1);\r\n        mDays = this.getDaysPerMonth(date.month, date.year);\r\n      }\r\n    }\r\n    date.day = day;\r\n    return date;\r\n  }\r\n\r\n  private _setMonth(date: NgbDate, month: number): NgbDate {\r\n    month = +month;\r\n    date.year = date.year + Math.floor((month - 1) / 12);\r\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\r\n    return date;\r\n  }\r\n\r\n  private _setYear(date: NgbDate, year: number): NgbDate {\r\n    date.year = +year;\r\n    return date;\r\n  }\r\n}\r\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\r\nimport {NgbDate} from '../ngb-date';\r\nimport {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Checks if islamic year is a leap year\r\n */\r\nfunction isIslamicLeapYear(hYear: number): boolean {\r\n  return (14 + 11 * hYear) % 30 < 11;\r\n}\r\n\r\n/**\r\n * Checks if gregorian years is a leap year\r\n */\r\nfunction isGregorianLeapYear(gDate: Date): boolean {\r\n  const year = gDate.getFullYear();\r\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\r\n}\r\n\r\n/**\r\n * Returns the start of Hijri Month.\r\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\r\n * `hYear` is any Hijri hYear.\r\n */\r\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\r\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\r\n}\r\n\r\n/**\r\n * Returns the start of Hijri year.\r\n * `year` is any Hijri year.\r\n */\r\nfunction getIslamicYearStart(year: number): number {\r\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\r\n}\r\n\r\nfunction mod(a: number, b: number): number {\r\n  return a - b * Math.floor(a / b);\r\n}\r\n\r\n/**\r\n * The civil calendar is one type of Hijri calendars used in islamic countries.\r\n * Uses a fixed cycle of alternating 29- and 30-day months,\r\n * with a leap day added to the last month of 11 out of every 30 years.\r\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\r\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\r\n * Dershowitz.\r\n */\r\n\r\nconst GREGORIAN_EPOCH = 1721425.5;\r\nconst ISLAMIC_EPOCH = 1948439.5;\r\n\r\n@Injectable()\r\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\r\n  /**\r\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\r\n   * `gDate` is a JS Date to be converted to Hijri.\r\n   */\r\n  fromGregorian(gDate: Date): NgbDate {\r\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\r\n\r\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\r\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\r\n        Math.floor(\r\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\r\n    julianDay = Math.floor(julianDay) + 0.5;\r\n\r\n    const days = julianDay - ISLAMIC_EPOCH;\r\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\r\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\r\n    hMonth = Math.min(hMonth, 11);\r\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\r\n    return new NgbDate(hYear, hMonth + 1, hDay);\r\n  }\r\n\r\n  /**\r\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\r\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\r\n   */\r\n  toGregorian(hDate: NgbDate): Date {\r\n    const hYear = hDate.year;\r\n    const hMonth = hDate.month - 1;\r\n    const hDay = hDate.day;\r\n    const julianDay =\r\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\r\n\r\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\r\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\r\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\r\n          yindex = Math.floor(dquad / 365);\r\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\r\n    if (!(cent === 4 || yindex === 4)) {\r\n      year++;\r\n    }\r\n\r\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\r\n        Math.floor((year - 1) / 400);\r\n\r\n    const yearday = wjd - gYearStart;\r\n\r\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\r\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\r\n\r\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\r\n\r\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\r\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\r\n        Math.floor((year - 1) / 400) +\r\n        Math.floor(\r\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\r\n            1);\r\n\r\n    const day = wjd - tjd2 + 1;\r\n\r\n    return new Date(year, month - 1, day);\r\n  }\r\n\r\n  /**\r\n   * Returns the number of days in a specific Hijri month.\r\n   * `month` is 1 for Muharram, 2 for Safar, etc.\r\n   * `year` is any Hijri year.\r\n   */\r\n  getDaysPerMonth(month: number, year: number): number {\r\n    year = year + Math.floor(month / 13);\r\n    month = ((month - 1) % 12) + 1;\r\n    let length = 29 + month % 2;\r\n    if (month === 12 && isIslamicLeapYear(year)) {\r\n      length++;\r\n    }\r\n    return length;\r\n  }\r\n}\r\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\r\nimport {NgbDate} from '../ngb-date';\r\nimport {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\r\n * This Calendar is used by Saudi Arabia for administrative purpose.\r\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\r\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\r\n */\r\n\r\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\r\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\r\nconst HIJRI_BEGIN = 1300;\r\nconst HIJRI_END = 1600;\r\nconst ONE_DAY = 1000 * 60 * 60 * 24;\r\n\r\nconst MONTH_LENGTH = [\r\n  // 1300-1304\r\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\r\n  // 1305-1309\r\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\r\n  // 1310-1314\r\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\r\n  // 1315-1319\r\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\r\n  // 1320-1324\r\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\r\n  // 1325-1329\r\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\r\n  // 1330-1334\r\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\r\n  // 1335-1339\r\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\r\n  // 1340-1344\r\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\r\n  // 1345-1349\r\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\r\n  // 1350-1354\r\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\r\n  // 1355-1359\r\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\r\n  // 1360-1364\r\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\r\n  // 1365-1369\r\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\r\n  // 1370-1374\r\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\r\n  // 1375-1379\r\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\r\n  // 1380-1384\r\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\r\n  // 1385-1389\r\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\r\n  // 1390-1394\r\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\r\n  // 1395-1399\r\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\r\n  // 1400-1404\r\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\r\n  // 1405-1409\r\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\r\n  // 1410-1414\r\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\r\n  // 1415-1419\r\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\r\n  // 1420-1424\r\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\r\n  // 1425-1429\r\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\r\n  // 1430-1434\r\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\r\n  // 1435-1439\r\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\r\n  // 1440-1444\r\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\r\n  // 1445-1449\r\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\r\n  // 1450-1454\r\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\r\n  // 1455-1459\r\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\r\n  // 1460-1464\r\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\r\n  // 1465-1469\r\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\r\n  // 1470-1474\r\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\r\n  // 1475-1479\r\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\r\n  // 1480-1484\r\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\r\n  // 1485-1489\r\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\r\n  // 1490-1494\r\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\r\n  // 1495-1499\r\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\r\n  // 1500-1504\r\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\r\n  // 1505-1509\r\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\r\n  // 1510-1514\r\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\r\n  // 1515-1519\r\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\r\n  // 1520-1524\r\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\r\n  // 1525-1529\r\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\r\n  // 1530-1534\r\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\r\n  // 1535-1539\r\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\r\n  // 1540-1544\r\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\r\n  // 1545-1549\r\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\r\n  // 1550-1554\r\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\r\n  // 1555-1559\r\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\r\n  // 1560-1564\r\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\r\n  // 1565-1569\r\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\r\n  // 1570-1574\r\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\r\n  // 1575-1579\r\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\r\n  // 1580-1584\r\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\r\n  // 1585-1589\r\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\r\n  // 1590-1594\r\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\r\n  // 1595-1599\r\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\r\n  // 1600\r\n  '001010011101'\r\n];\r\n\r\nfunction getDaysDiff(date1: Date, date2: Date): number {\r\n  // Ignores the time part in date1 and date2:\r\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\r\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\r\n  const diff = Math.abs(time1 - time2);\r\n  return Math.round(diff / ONE_DAY);\r\n}\r\n\r\n@Injectable()\r\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\r\n  /**\r\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\r\n  * `gdate` is s JS Date to be converted to Hijri.\r\n  */\r\n  fromGregorian(gDate: Date): NgbDate {\r\n    let hDay = 1, hMonth = 0, hYear = 1300;\r\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\r\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\r\n      let year = 1300;\r\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\r\n        for (let j = 0; j < 12; j++) {\r\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\r\n          if (daysDiff <= numOfDays) {\r\n            hDay = daysDiff + 1;\r\n            if (hDay > numOfDays) {\r\n              hDay = 1;\r\n              j++;\r\n            }\r\n            if (j > 11) {\r\n              j = 0;\r\n              year++;\r\n            }\r\n            hMonth = j;\r\n            hYear = year;\r\n            return new NgbDate(hYear, hMonth + 1, hDay);\r\n          }\r\n          daysDiff = daysDiff - numOfDays;\r\n        }\r\n      }\r\n      return null as any;\r\n    } else {\r\n      return super.fromGregorian(gDate);\r\n    }\r\n  }\r\n  /**\r\n  * Converts the current Hijri date to Gregorian.\r\n  */\r\n  toGregorian(hDate: NgbDate): Date {\r\n    const hYear = hDate.year;\r\n    const hMonth = hDate.month - 1;\r\n    const hDay = hDate.day;\r\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\r\n    let dayDiff = hDay - 1;\r\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\r\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\r\n        for (let m = 0; m < 12; m++) {\r\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\r\n        }\r\n      }\r\n      for (let m = 0; m < hMonth; m++) {\r\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\r\n      }\r\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\r\n    } else {\r\n      gDate = super.toGregorian(hDate);\r\n    }\r\n    return gDate;\r\n  }\r\n  /**\r\n  * Returns the number of days in a specific Hijri hMonth.\r\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\r\n  * `hYear` is any Hijri hYear.\r\n  */\r\n  getDaysPerMonth(hMonth: number, hYear: number): number {\r\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\r\n      const pos = hYear - HIJRI_BEGIN;\r\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\r\n    }\r\n    return super.getDaysPerMonth(hMonth, hYear);\r\n  }\r\n}\r\n","import {NgbDate} from '../ngb-date';\r\n\r\n/**\r\n * Returns the equivalent JS date value for a give input Jalali date.\r\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\r\n */\r\nexport function toGregorian(jalaliDate: NgbDate): Date {\r\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\r\n  let date = julianToGregorian(jdn);\r\n  date.setHours(6, 30, 3, 200);\r\n  return date;\r\n}\r\n\r\n/**\r\n * Returns the equivalent jalali date value for a give input Gregorian date.\r\n * `gdate` is a JS Date to be converted to jalali.\r\n * utc to local\r\n */\r\nexport function fromGregorian(gdate: Date): NgbDate {\r\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\r\n  return julianToJalali(g2d);\r\n}\r\n\r\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\r\n  date.year = +yearValue;\r\n  return date;\r\n}\r\n\r\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\r\n  month = +month;\r\n  date.year = date.year + Math.floor((month - 1) / 12);\r\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\r\n  return date;\r\n}\r\n\r\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\r\n  let mDays = getDaysPerMonth(date.month, date.year);\r\n  if (day <= 0) {\r\n    while (day <= 0) {\r\n      date = setJalaliMonth(date, date.month - 1);\r\n      mDays = getDaysPerMonth(date.month, date.year);\r\n      day += mDays;\r\n    }\r\n  } else if (day > mDays) {\r\n    while (day > mDays) {\r\n      day -= mDays;\r\n      date = setJalaliMonth(date, date.month + 1);\r\n      mDays = getDaysPerMonth(date.month, date.year);\r\n    }\r\n  }\r\n  date.day = day;\r\n  return date;\r\n}\r\n\r\nfunction mod(a: number, b: number): number {\r\n  return a - b * Math.floor(a / b);\r\n}\r\n\r\nfunction div(a: number, b: number) {\r\n  return Math.trunc(a / b);\r\n}\r\n\r\n/*\r\n This function determines if the Jalali (Persian) year is\r\n leap (366-day long) or is the common year (365 days), and\r\n finds the day in March (Gregorian calendar) of the first\r\n day of the Jalali year (jalaliYear).\r\n @param jalaliYear Jalali calendar year (-61 to 3177)\r\n @return\r\n leap: number of years since the last leap year (0 to 4)\r\n gYear: Gregorian year of the beginning of Jalali year\r\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\r\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\r\n @see: http://www.fourmilab.ch/documents/calendar/\r\n */\r\nfunction jalCal(jalaliYear: number) {\r\n  // Jalali years starting the 33-year rule.\r\n  let breaks =\r\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\r\n  const breaksLength = breaks.length;\r\n  const gYear = jalaliYear + 621;\r\n  let leapJ = -14;\r\n  let jp = breaks[0];\r\n\r\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\r\n    throw new Error('Invalid Jalali year ' + jalaliYear);\r\n  }\r\n\r\n  // Find the limiting years for the Jalali year jalaliYear.\r\n  let jump;\r\n  for (let i = 1; i < breaksLength; i += 1) {\r\n    const jm = breaks[i];\r\n    jump = jm - jp;\r\n    if (jalaliYear < jm) {\r\n      break;\r\n    }\r\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\r\n    jp = jm;\r\n  }\r\n  let n = jalaliYear - jp;\r\n\r\n  // Find the number of leap years from AD 621 to the beginning\r\n  // of the current Jalali year in the Persian calendar.\r\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\r\n  if (mod(jump, 33) === 4 && jump - n === 4) {\r\n    leapJ += 1;\r\n  }\r\n\r\n  // And the same in the Gregorian calendar (until the year gYear).\r\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\r\n\r\n  // Determine the Gregorian date of Farvardin the 1st.\r\n  const march = 20 + leapJ - leapG;\r\n\r\n  // Find how many years have passed since the last leap year.\r\n  if (jump - n < 6) {\r\n    n = n - jump + div(jump + 4, 33) * 33;\r\n  }\r\n  let leap = mod(mod(n + 1, 33) - 1, 4);\r\n  if (leap === -1) {\r\n    leap = 4;\r\n  }\r\n\r\n  return {leap: leap, gy: gYear, march: march};\r\n}\r\n\r\n/*\r\n Calculates Gregorian and Julian calendar dates from the Julian Day number\r\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\r\n calendars) to some millions years ahead of the present.\r\n @param jdn Julian Day number\r\n @return\r\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\r\n gMonth: Calendar month (1 to 12)\r\n gDay: Calendar day of the month M (1 to 28/29/30/31)\r\n */\r\nfunction julianToGregorian(julianDayNumber: number) {\r\n  let j = 4 * julianDayNumber + 139361631;\r\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\r\n  const i = div(mod(j, 1461), 4) * 5 + 308;\r\n  const gDay = div(mod(i, 153), 5) + 1;\r\n  const gMonth = mod(div(i, 153), 12) + 1;\r\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\r\n\r\n  return new Date(gYear, gMonth - 1, gDay);\r\n}\r\n\r\n/*\r\n Converts a date of the Jalali calendar to the Julian Day number.\r\n @param jy Jalali year (1 to 3100)\r\n @param jm Jalali month (1 to 12)\r\n @param jd Jalali day (1 to 29/31)\r\n @return Julian Day number\r\n */\r\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\r\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\r\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\r\n  return d;\r\n}\r\n\r\n/*\r\n Converts the Julian Day number to a date in the Jalali calendar.\r\n @param julianDayNumber Julian Day number\r\n @return\r\n jalaliYear: Jalali year (1 to 3100)\r\n jalaliMonth: Jalali month (1 to 12)\r\n jalaliDay: Jalali day (1 to 29/31)\r\n */\r\nfunction julianToJalali(julianDayNumber: number) {\r\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\r\n      ,\r\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\r\n      jalaliMonth, numberOfDays;\r\n\r\n  // Find number of days that passed since 1 Farvardin.\r\n  numberOfDays = julianDayNumber - gregorianDay;\r\n  if (numberOfDays >= 0) {\r\n    if (numberOfDays <= 185) {\r\n      // The first 6 months.\r\n      jalaliMonth = 1 + div(numberOfDays, 31);\r\n      jalaliDay = mod(numberOfDays, 31) + 1;\r\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\r\n    } else {\r\n      // The remaining months.\r\n      numberOfDays -= 186;\r\n    }\r\n  } else {\r\n    // Previous Jalali year.\r\n    jalaliYear -= 1;\r\n    numberOfDays += 179;\r\n    if (r.leap === 1) {\r\n      numberOfDays += 1;\r\n    }\r\n  }\r\n  jalaliMonth = 7 + div(numberOfDays, 30);\r\n  jalaliDay = mod(numberOfDays, 30) + 1;\r\n\r\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\r\n}\r\n\r\n/*\r\n Converts a date of the Jalali calendar to the Julian Day number.\r\n @param jYear Jalali year (1 to 3100)\r\n @param jMonth Jalali month (1 to 12)\r\n @param jDay Jalali day (1 to 29/31)\r\n @return Julian Day number\r\n */\r\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\r\n  let r = jalCal(jYear);\r\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\r\n}\r\n\r\n/**\r\n * Returns the number of days in a specific jalali month.\r\n */\r\nfunction getDaysPerMonth(month: number, year: number): number {\r\n  if (month <= 6) {\r\n    return 31;\r\n  }\r\n  if (month <= 11) {\r\n    return 30;\r\n  }\r\n  if (jalCal(year).leap === 0) {\r\n    return 30;\r\n  }\r\n  return 29;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbDate} from '../ngb-date';\r\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\r\nimport {isInteger} from '../../util/util';\r\n\r\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\r\n\r\n@Injectable()\r\nexport class NgbCalendarPersian extends NgbCalendar {\r\n  getDaysPerWeek() { return 7; }\r\n\r\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\r\n\r\n  getWeeksPerMonth() { return 6; }\r\n\r\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\r\n    date = new NgbDate(date.year, date.month, date.day);\r\n\r\n    switch (period) {\r\n      case 'y':\r\n        date = setJalaliYear(date, date.year + number);\r\n        date.month = 1;\r\n        date.day = 1;\r\n        return date;\r\n      case 'm':\r\n        date = setJalaliMonth(date, date.month + number);\r\n        date.day = 1;\r\n        return date;\r\n      case 'd':\r\n        return setJalaliDay(date, date.day + number);\r\n      default:\r\n        return date;\r\n    }\r\n  }\r\n\r\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\r\n\r\n  getWeekday(date: NgbDate) {\r\n    const day = toGregorian(date).getDay();\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    return day === 0 ? 7 : day;\r\n  }\r\n\r\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    if (firstDayOfWeek === 7) {\r\n      firstDayOfWeek = 0;\r\n    }\r\n\r\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\r\n    const date = week[thursdayIndex];\r\n\r\n    const jsDate = toGregorian(date);\r\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\r\n    const time = jsDate.getTime();\r\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\r\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\r\n  }\r\n\r\n  getToday(): NgbDate { return fromGregorian(new Date()); }\r\n\r\n  isValid(date?: NgbDate | null): boolean {\r\n    return date != null && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\r\n        !isNaN(toGregorian(date).getTime());\r\n  }\r\n}\r\n","import {NgbDate} from '../ngb-date';\r\nimport {NgbDateStruct} from '../ngb-date-struct';\r\n\r\nconst PARTS_PER_HOUR = 1080;\r\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\r\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\r\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\r\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\r\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\r\nconst GREGORIAN_EPOCH = 1721425.5;\r\n\r\nfunction isGregorianLeapYear(year: number): boolean {\r\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\r\n}\r\n\r\nfunction numberOfFirstDayInYear(year: number): number {\r\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\r\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\r\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\r\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\r\n\r\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\r\n\r\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\r\n    dayNumber++;\r\n    dayOfWeek = dayNumber % 7;\r\n  }\r\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\r\n    dayNumber += 2;\r\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\r\n    dayNumber++;\r\n  }\r\n  return dayNumber;\r\n}\r\n\r\nfunction getDaysInGregorianMonth(month: number, year: number): number {\r\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  if (isGregorianLeapYear(year)) {\r\n    days[1]++;\r\n  }\r\n  return days[month - 1];\r\n}\r\n\r\nfunction getHebrewMonths(year: number): number {\r\n  return isHebrewLeapYear(year) ? 13 : 12;\r\n}\r\n\r\n/**\r\n * Returns the number of days in a specific Hebrew year.\r\n * `year` is any Hebrew year.\r\n */\r\nfunction getDaysInHebrewYear(year: number): number {\r\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\r\n}\r\n\r\nexport function isHebrewLeapYear(year?: number): boolean {\r\n  if (year != null) {\r\n    let b = (year * 12 + 17) % 19;\r\n    return b >= ((b < 0) ? -7 : 12);\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Returns the number of days in a specific Hebrew month.\r\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\r\n * `year` is any Hebrew year.\r\n */\r\nexport function getDaysInHebrewMonth(month: number, year: number): number {\r\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\r\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\r\n  let leapYear = isHebrewLeapYear(year);\r\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\r\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\r\n  if (yearType > 0) {\r\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\r\n  }\r\n  if (yearType > 1) {\r\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\r\n  }\r\n  return daysInMonth[month - 1];\r\n}\r\n\r\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\r\n  let numberOfDay = 0;\r\n  for (let i = 1; i < date.month; i++) {\r\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\r\n  }\r\n  return numberOfDay + date.day;\r\n}\r\n\r\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\r\n  let after = val >= 0;\r\n  if (!after) {\r\n    val = -val;\r\n  }\r\n  while (val > 0) {\r\n    if (after) {\r\n      if (val > getHebrewMonths(date.year) - date.month) {\r\n        val -= getHebrewMonths(date.year) - date.month + 1;\r\n        date.year++;\r\n        date.month = 1;\r\n      } else {\r\n        date.month += val;\r\n        val = 0;\r\n      }\r\n    } else {\r\n      if (val >= date.month) {\r\n        date.year--;\r\n        val -= date.month;\r\n        date.month = getHebrewMonths(date.year);\r\n      } else {\r\n        date.month -= val;\r\n        val = 0;\r\n      }\r\n    }\r\n  }\r\n  return date;\r\n}\r\n\r\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\r\n  let after = val >= 0;\r\n  if (!after) {\r\n    val = -val;\r\n  }\r\n  while (val > 0) {\r\n    if (after) {\r\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\r\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\r\n        date.year++;\r\n        date.month = 1;\r\n        date.day = 1;\r\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\r\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\r\n        date.month++;\r\n        date.day = 1;\r\n      } else {\r\n        date.day += val;\r\n        val = 0;\r\n      }\r\n    } else {\r\n      if (val >= date.day) {\r\n        val -= date.day;\r\n        date.month--;\r\n        if (date.month === 0) {\r\n          date.year--;\r\n          date.month = getHebrewMonths(date.year);\r\n        }\r\n        date.day = getDaysInHebrewMonth(date.month, date.year);\r\n      } else {\r\n        date.day -= val;\r\n        val = 0;\r\n      }\r\n    }\r\n  }\r\n  return date;\r\n}\r\n\r\n/**\r\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\r\n * `gdate` is a JS Date to be converted to Hebrew date.\r\n */\r\nexport function fromGregorian(gdate: Date): NgbDate {\r\n  const date = new Date(gdate);\r\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\r\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\r\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\r\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\r\n  julianDay = Math.floor(julianDay + 0.5);\r\n  let daysSinceHebEpoch = julianDay - 347997;\r\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\r\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\r\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\r\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\r\n  while (dayOfYear < 1) {\r\n    hYear--;\r\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\r\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\r\n  }\r\n  let hMonth = 1;\r\n  let hDay = dayOfYear;\r\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\r\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\r\n    hMonth++;\r\n  }\r\n  return new NgbDate(hYear, hMonth, hDay);\r\n}\r\n\r\n/**\r\n * Returns the equivalent JS date value for a given Hebrew date.\r\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\r\n */\r\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\r\n  const hYear = hebrewDate.year;\r\n  const hMonth = hebrewDate.month;\r\n  const hDay = hebrewDate.day;\r\n  let days = numberOfFirstDayInYear(hYear);\r\n  for (let i = 1; i < hMonth; i++) {\r\n    days += getDaysInHebrewMonth(i, hYear);\r\n  }\r\n  days += hDay;\r\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\r\n  let after = diffDays >= 0;\r\n  if (!after) {\r\n    diffDays = -diffDays;\r\n  }\r\n  let gYear = 1970;\r\n  let gMonth = 1;\r\n  let gDay = 1;\r\n  while (diffDays > 0) {\r\n    if (after) {\r\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\r\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\r\n        gYear++;\r\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\r\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\r\n        gMonth++;\r\n      } else {\r\n        gDay += diffDays;\r\n        diffDays = 0;\r\n      }\r\n    } else {\r\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\r\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\r\n        gYear--;\r\n      } else {\r\n        if (gMonth > 1) {\r\n          gMonth--;\r\n        } else {\r\n          gMonth = 12;\r\n          gYear--;\r\n        }\r\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\r\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\r\n        } else {\r\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\r\n          diffDays = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return new Date(gYear, gMonth - 1, gDay);\r\n}\r\n\r\nexport function hebrewNumerals(numerals: number): string {\r\n  if (!numerals) {\r\n    return '';\r\n  }\r\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\r\n  const hArray10_19 = [\r\n    '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\r\n    '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\r\n  ];\r\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\r\n  const hArray100_900 = [\r\n    '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\r\n    '\\u05ea\\u05ea\\u05e7'\r\n  ];\r\n  const hArray1000_9000 = [\r\n    '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\r\n    '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\r\n  ];\r\n  const geresh = '\\u05f3', gershaim = '\\u05f4';\r\n  let mem = 0;\r\n  let result: string[] = [];\r\n  let step = 0;\r\n  while (numerals > 0) {\r\n    let m = numerals % 10;\r\n    if (step === 0) {\r\n      mem = m;\r\n    } else if (step === 1) {\r\n      if (m !== 1) {\r\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\r\n      } else {\r\n        result.unshift(hArray10_19[mem]);\r\n      }\r\n    } else if (step === 2) {\r\n      result.unshift(hArray100_900[m]);\r\n    } else {\r\n      if (m !== 5) {\r\n        result.unshift(hArray1000_9000[m], geresh, ' ');\r\n      }\r\n      break;\r\n    }\r\n    numerals = Math.floor(numerals / 10);\r\n    if (step === 0 && numerals === 0) {\r\n      result.unshift(hArray0_9[m]);\r\n    }\r\n    step++;\r\n  }\r\n  result = result.join('').split('');\r\n  if (result.length === 1) {\r\n    result.push(geresh);\r\n  } else if (result.length > 1) {\r\n    result.splice(result.length - 1, 0, gershaim);\r\n  }\r\n  return result.join('');\r\n}\r\n","import {NgbDate} from '../ngb-date';\r\nimport {fromJSDate, NgbCalendar, NgbPeriod, toJSDate} from '../ngb-calendar';\r\nimport {Injectable} from '@angular/core';\r\nimport {isNumber} from '../../util/util';\r\nimport {\r\n  fromGregorian,\r\n  getDayNumberInHebrewYear,\r\n  getDaysInHebrewMonth,\r\n  isHebrewLeapYear,\r\n  toGregorian,\r\n  setHebrewDay,\r\n  setHebrewMonth\r\n} from './hebrew';\r\n\r\n/**\r\n * @since 3.2.0\r\n */\r\n@Injectable()\r\nexport class NgbCalendarHebrew extends NgbCalendar {\r\n  getDaysPerWeek() { return 7; }\r\n\r\n  getMonths(year?: number) {\r\n    if (year && isHebrewLeapYear(year)) {\r\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\r\n    } else {\r\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n    }\r\n  }\r\n\r\n  getWeeksPerMonth() { return 6; }\r\n\r\n  isValid(date?: NgbDate | null): boolean {\r\n    if (date != null) {\r\n      let b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\r\n      b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\r\n      b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\r\n      return b && !isNaN(toGregorian(date).getTime());\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\r\n    date = new NgbDate(date.year, date.month, date.day);\r\n\r\n    switch (period) {\r\n      case 'y':\r\n        date.year += number;\r\n        date.month = 1;\r\n        date.day = 1;\r\n        return date;\r\n      case 'm':\r\n        date = setHebrewMonth(date, number);\r\n        date.day = 1;\r\n        return date;\r\n      case 'd':\r\n        return setHebrewDay(date, number);\r\n      default:\r\n        return date;\r\n    }\r\n  }\r\n\r\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\r\n\r\n  getWeekday(date: NgbDate) {\r\n    const day = toGregorian(date).getDay();\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    return day === 0 ? 7 : day;\r\n  }\r\n\r\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\r\n    const date = week[week.length - 1];\r\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\r\n  }\r\n\r\n  getToday(): NgbDate { return fromGregorian(new Date()); }\r\n\r\n  /**\r\n   * @since 3.4.0\r\n   */\r\n  toGregorian(date: NgbDate): NgbDate { return fromJSDate(toGregorian(date)); }\r\n\r\n  /**\r\n   * @since 3.4.0\r\n   */\r\n  fromGregorian(date: NgbDate): NgbDate { return fromGregorian(toJSDate(date)); }\r\n}\r\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\r\nimport {NgbDateStruct} from '../../index';\r\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\r\nimport {Injectable} from '@angular/core';\r\n\r\n\r\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\r\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\r\nconst MONTHS_LEAP =\r\n    ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\r\n\r\n/**\r\n * @since 3.2.0\r\n */\r\n@Injectable()\r\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\r\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\r\n\r\n  getMonthFullName(month: number, year?: number): string {\r\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS[month - 1] || '';\r\n  }\r\n\r\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1] || ''; }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\r\n  }\r\n\r\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\r\n\r\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\r\n\r\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\r\n}\r\n","import {NgbDate} from '../ngb-date';\r\n\r\n/**\r\n * Returns the equivalent JS date value for a give input Buddhist date.\r\n * `date` is an Buddhist date to be converted to Gregorian.\r\n */\r\nexport function toGregorian(date: NgbDate): Date {\r\n  return new Date(date.year - 543, date.month - 1, date.day);\r\n}\r\n\r\n/**\r\n * Returns the equivalent Buddhist date value for a give input Gregorian date.\r\n * `gdate` is a JS Date to be converted to Buddhist.\r\n * utc to local\r\n */\r\nexport function fromGregorian(gdate: Date): NgbDate {\r\n  return new NgbDate(gdate.getFullYear() + 543, gdate.getMonth() + 1, gdate.getDate());\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {isInteger} from '../../util/util';\r\nimport {NgbCalendarGregorian, NgbPeriod} from '../ngb-calendar';\r\nimport {NgbDate} from '../ngb-date';\r\nimport {fromGregorian, toGregorian} from './buddhist';\r\n\r\n/**\r\n * @since 9.1.0\r\n */\r\n@Injectable()\r\nexport class NgbCalendarBuddhist extends NgbCalendarGregorian {\r\n  getToday(): NgbDate { return fromGregorian(new Date()); }\r\n\r\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\r\n    let jsDate = toGregorian(date);\r\n    let checkMonth = true;\r\n    let expectedMonth = jsDate.getMonth();\r\n\r\n    switch (period) {\r\n      case 'y':\r\n        jsDate.setFullYear(jsDate.getFullYear() + number);\r\n        break;\r\n      case 'm':\r\n        expectedMonth += number;\r\n        jsDate.setMonth(expectedMonth);\r\n        expectedMonth = expectedMonth % 12;\r\n        if (expectedMonth < 0) {\r\n          expectedMonth = expectedMonth + 12;\r\n        }\r\n        break;\r\n      case 'd':\r\n        jsDate.setDate(jsDate.getDate() + number);\r\n        checkMonth = false;\r\n        break;\r\n      default:\r\n        return date;\r\n    }\r\n\r\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\r\n      // this means the destination month has less days than the initial month\r\n      // let's go back to the end of the previous month:\r\n      jsDate.setDate(0);\r\n    }\r\n\r\n    return fromGregorian(jsDate);\r\n  }\r\n\r\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\r\n\r\n  getWeekday(date: NgbDate) {\r\n    let jsDate = toGregorian(date);\r\n    let day = jsDate.getDay();\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    return day === 0 ? 7 : day;\r\n  }\r\n\r\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\r\n    // in JS Date Sun=0, in ISO 8601 Sun=7\r\n    if (firstDayOfWeek === 7) {\r\n      firstDayOfWeek = 0;\r\n    }\r\n\r\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\r\n    let date = week[thursdayIndex];\r\n\r\n    const jsDate = toGregorian(date);\r\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\r\n    const time = jsDate.getTime();\r\n    jsDate.setMonth(0);  // Compare with Jan 1\r\n    jsDate.setDate(1);\r\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\r\n  }\r\n\r\n  isValid(date?: NgbDate | null): boolean {\r\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\r\n      return false;\r\n    }\r\n\r\n    // year 0 doesn't exist in Gregorian calendar\r\n    if (date.year === 0) {\r\n      return false;\r\n    }\r\n\r\n    const jsDate = toGregorian(date);\r\n\r\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year - 543 &&\r\n        jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbDateAdapter} from './ngb-date-adapter';\r\nimport {NgbDateStruct} from '../ngb-date-struct';\r\nimport {isInteger} from '../../util/util';\r\n\r\n/**\r\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\r\n * native javascript dates as a user date model.\r\n */\r\n@Injectable()\r\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\r\n  /**\r\n   * Converts a native `Date` to a `NgbDateStruct`.\r\n   */\r\n  fromModel(date: Date | null): NgbDateStruct | null {\r\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\r\n  }\r\n\r\n  /**\r\n   * Converts a `NgbDateStruct` to a native `Date`.\r\n   */\r\n  toModel(date: NgbDateStruct | null): Date | null {\r\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\r\n                                                                                          null;\r\n  }\r\n\r\n  protected _fromNativeDate(date: Date): NgbDateStruct {\r\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\r\n  }\r\n\r\n  protected _toNativeDate(date: NgbDateStruct): Date {\r\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\r\n    // avoid 30 -> 1930 conversion\r\n    jsDate.setFullYear(date.year);\r\n    return jsDate;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbDateStruct} from '../ngb-date-struct';\r\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\r\n\r\n/**\r\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\r\n *\r\n * @since 3.2.0\r\n */\r\n@Injectable()\r\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\r\n  protected _fromNativeDate(date: Date): NgbDateStruct {\r\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\r\n  }\r\n\r\n  protected _toNativeDate(date: NgbDateStruct): Date {\r\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\r\n    // avoid 30 -> 1930 conversion\r\n    jsDate.setUTCFullYear(date.year);\r\n    return jsDate;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {NgbDatepicker, NgbDatepickerContent} from './datepicker';\r\nimport {NgbDatepickerMonth} from './datepicker-month';\r\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\r\nimport {NgbInputDatepicker} from './datepicker-input';\r\nimport {NgbDatepickerDayView} from './datepicker-day-view';\r\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\r\n\r\nexport {NgbDatepicker, NgbDatepickerContent, NgbDatepickerNavigateEvent, NgbDatepickerState} from './datepicker';\r\nexport {NgbInputDatepicker} from './datepicker-input';\r\nexport {NgbCalendar, NgbPeriod, NgbCalendarGregorian} from './ngb-calendar';\r\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\r\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\r\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\r\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\r\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\r\nexport {NgbCalendarBuddhist} from './buddhist/ngb-calendar-buddhist';\r\nexport {NgbDatepickerMonth} from './datepicker-month';\r\nexport {NgbDatepickerDayView} from './datepicker-day-view';\r\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\r\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\r\nexport {NgbDatepickerConfig} from './datepicker-config';\r\nexport {NgbInputDatepickerConfig} from './datepicker-input-config';\r\nexport {NgbDatepickerI18n, NgbDatepickerI18nDefault} from './datepicker-i18n';\r\nexport {NgbDateStruct} from './ngb-date-struct';\r\nexport {NgbDate} from './ngb-date';\r\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\r\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\r\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\r\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\r\nexport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect,\r\n    NgbDatepickerDayView, NgbInputDatepicker\r\n  ],\r\n  exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\r\n  imports: [CommonModule, FormsModule],\r\n  entryComponents: [NgbDatepicker]\r\n})\r\nexport class NgbDatepickerModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {PlacementArray} from '../util/positioning';\r\n\r\n/**\r\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the dropdowns used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbDropdownConfig {\r\n  autoClose: boolean | 'outside' | 'inside' = true;\r\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\r\n  container: null | 'body';\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  ContentChild,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  AfterContentInit,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  Optional\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {fromEvent, Subject, Subscription} from 'rxjs';\r\nimport {take} from 'rxjs/operators';\r\n\r\nimport {Placement, PlacementArray, positionElements} from '../util/positioning';\r\nimport {ngbAutoClose, SOURCE} from '../util/autoclose';\r\nimport {Key} from '../util/key';\r\n\r\nimport {NgbDropdownConfig} from './dropdown-config';\r\nimport {FOCUSABLE_ELEMENTS_SELECTOR} from '../util/focus-trap';\r\n\r\n@Directive({selector: '.navbar'})\r\nexport class NgbNavbar {\r\n}\r\n\r\n/**\r\n * A directive you should put on a dropdown item to enable keyboard navigation.\r\n * Arrow keys will move focus between items marked with this directive.\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({selector: '[ngbDropdownItem]', host: {'class': 'dropdown-item', '[class.disabled]': 'disabled'}})\r\nexport class NgbDropdownItem {\r\n  static ngAcceptInputType_disabled: boolean | '';\r\n\r\n  private _disabled = false;\r\n\r\n  @Input()\r\n  set disabled(value: boolean) {\r\n    this._disabled = <any>value === '' || value === true;  // accept an empty attribute as true\r\n  }\r\n\r\n  get disabled(): boolean { return this._disabled; }\r\n\r\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\r\n}\r\n\r\n/**\r\n * A directive that wraps dropdown menu content and dropdown items.\r\n */\r\n@Directive({\r\n  selector: '[ngbDropdownMenu]',\r\n  host: {\r\n    '[class.dropdown-menu]': 'true',\r\n    '[class.show]': 'dropdown.isOpen()',\r\n    '[attr.x-placement]': 'placement',\r\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.Space)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.Tab)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\r\n  }\r\n})\r\nexport class NgbDropdownMenu {\r\n  nativeElement: HTMLElement;\r\n  placement: Placement | null = 'bottom';\r\n  isOpen = false;\r\n\r\n  @ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\r\n\r\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, _elementRef: ElementRef<HTMLElement>) {\r\n    this.nativeElement = _elementRef.nativeElement;\r\n  }\r\n}\r\n\r\n/**\r\n * A directive to mark an element to which dropdown menu will be anchored.\r\n *\r\n * This is a simple version of the `NgbDropdownToggle` directive.\r\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\r\n * for events other than click.\r\n *\r\n * @since 1.1.0\r\n */\r\n@Directive(\r\n    {selector: '[ngbDropdownAnchor]', host: {'class': 'dropdown-toggle', '[attr.aria-expanded]': 'dropdown.isOpen()'}})\r\nexport class NgbDropdownAnchor {\r\n  nativeElement: HTMLElement;\r\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, _elementRef: ElementRef<HTMLElement>) {\r\n    this.nativeElement = _elementRef.nativeElement;\r\n  }\r\n}\r\n\r\n/**\r\n * A directive to mark an element that will toggle dropdown via the `click` event.\r\n *\r\n * You can also use `NgbDropdownAnchor` as an alternative.\r\n */\r\n@Directive({\r\n  selector: '[ngbDropdownToggle]',\r\n  host: {\r\n    'class': 'dropdown-toggle',\r\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\r\n    '(click)': 'dropdown.toggle()',\r\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.Tab)': 'dropdown.onKeyDown($event)',\r\n    '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\r\n  },\r\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\r\n})\r\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\r\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\r\n    super(dropdown, elementRef);\r\n  }\r\n}\r\n\r\n/**\r\n * A directive that provides contextual overlays for displaying lists of links and more.\r\n */\r\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\r\nexport class NgbDropdown implements AfterContentInit, OnDestroy {\r\n  static ngAcceptInputType_autoClose: boolean | string;\r\n  static ngAcceptInputType_display: string;\r\n  private _closed$ = new Subject<void>();\r\n  private _zoneSubscription: Subscription;\r\n  private _bodyContainer: HTMLElement | null = null;\r\n\r\n  @ContentChild(NgbDropdownMenu, {static: false}) private _menu: NgbDropdownMenu;\r\n  @ContentChild(NgbDropdownAnchor, {static: false}) private _anchor: NgbDropdownAnchor;\r\n\r\n  /**\r\n   * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\r\n   *\r\n   * * `true` - the dropdown will close on both outside and inside (menu) clicks.\r\n   * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\r\n   * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\r\n   * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\r\n   */\r\n  @Input() autoClose: boolean | 'outside' | 'inside';\r\n\r\n  /**\r\n   * A custom class that is applied only to the `ngbDropdownMenu` parent element.\r\n   * * In case of the inline dropdown it will be the `<div ngbDropdown>`\r\n   * * In case of the dropdown with  `container=\"body\"` it will be the `<div class=\"dropdown\">` attached to the `<body>`\r\n   *\r\n   * Useful mainly when dropdown is attached to the body.\r\n   * If the dropdown is inline just use `<div ngbDropdown class=\"custom-class\">` instead.\r\n   *\r\n   * @since 9.1.0\r\n   */\r\n  @Input() dropdownClass: string;\r\n\r\n  /**\r\n   * Defines whether or not the dropdown menu is opened initially.\r\n   */\r\n  @Input('open') _open = false;\r\n\r\n  /**\r\n   * The preferred placement of the dropdown.\r\n   *\r\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\r\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\r\n   * `\"right-bottom\"`\r\n   *\r\n   * Accepts an array of strings or a string with space separated possible values.\r\n   *\r\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\r\n   *\r\n   * Please see the [positioning overview](#/positioning) for more details.\r\n   */\r\n  @Input() placement: PlacementArray;\r\n\r\n  /**\r\n  * A selector specifying the element the dropdown should be appended to.\r\n  * Currently only supports \"body\".\r\n  *\r\n  * @since 4.1.0\r\n  */\r\n  @Input() container: null | 'body';\r\n\r\n  /**\r\n   * Enable or disable the dynamic positioning. The default value is dynamic unless the dropdown is used\r\n   * inside a Bootstrap navbar. If you need custom placement for a dropdown in a navbar, set it to\r\n   * dynamic explicitly. See the [positioning of dropdown](#/positioning#dropdown)\r\n   * and the [navbar demo](/#/components/dropdown/examples#navbar) for more details.\r\n   *\r\n   * @since 4.2.0\r\n   */\r\n  @Input() display: 'dynamic' | 'static';\r\n\r\n  /**\r\n   * An event fired when the dropdown is opened or closed.\r\n   *\r\n   * The event payload is a `boolean`:\r\n   * * `true` - the dropdown was opened\r\n   * * `false` - the dropdown was closed\r\n   */\r\n  @Output() openChange = new EventEmitter<boolean>();\r\n\r\n  constructor(\r\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\r\n      private _ngZone: NgZone, private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2,\r\n      @Optional() ngbNavbar: NgbNavbar) {\r\n    this.placement = config.placement;\r\n    this.container = config.container;\r\n    this.autoClose = config.autoClose;\r\n\r\n    this.display = ngbNavbar ? 'static' : 'dynamic';\r\n\r\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\r\n      this._applyPlacementClasses();\r\n      if (this._open) {\r\n        this._setCloseHandlers();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.container && this._open) {\r\n      this._applyContainer(this.container);\r\n    }\r\n\r\n    if (changes.placement && !changes.placement.isFirstChange) {\r\n      this._applyPlacementClasses();\r\n    }\r\n\r\n    if (changes.dropdownClass) {\r\n      const {currentValue, previousValue} = changes.dropdownClass;\r\n      this._applyCustomDropdownClass(currentValue, previousValue);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if the dropdown menu is open.\r\n   */\r\n  isOpen(): boolean { return this._open; }\r\n\r\n  /**\r\n   * Opens the dropdown menu.\r\n   */\r\n  open(): void {\r\n    if (!this._open) {\r\n      this._open = true;\r\n      this._applyContainer(this.container);\r\n      this.openChange.emit(true);\r\n      this._setCloseHandlers();\r\n      if (this._anchor) {\r\n        this._anchor.nativeElement.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _setCloseHandlers() {\r\n    ngbAutoClose(\r\n        this._ngZone, this._document, this.autoClose,\r\n        (source: SOURCE) => {\r\n          this.close();\r\n          if (source === SOURCE.ESCAPE) {\r\n            this._anchor.nativeElement.focus();\r\n          }\r\n        },\r\n        this._closed$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [],\r\n        '.dropdown-item,.dropdown-divider');\r\n  }\r\n\r\n  /**\r\n   * Closes the dropdown menu.\r\n   */\r\n  close(): void {\r\n    if (this._open) {\r\n      this._open = false;\r\n      this._resetContainer();\r\n      this._closed$.next();\r\n      this.openChange.emit(false);\r\n      this._changeDetector.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the dropdown menu.\r\n   */\r\n  toggle(): void {\r\n    if (this.isOpen()) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._resetContainer();\r\n\r\n    this._closed$.next();\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent) {\r\n    // tslint:disable-next-line:deprecation\r\n    const key = event.which;\r\n    const itemElements = this._getMenuElements();\r\n\r\n    let position = -1;\r\n    let itemElement: HTMLElement | null = null;\r\n    const isEventFromToggle = this._isEventFromToggle(event);\r\n\r\n    if (!isEventFromToggle && itemElements.length) {\r\n      itemElements.forEach((item, index) => {\r\n        if (item.contains(event.target as HTMLElement)) {\r\n          itemElement = item;\r\n        }\r\n        if (item === this._document.activeElement) {\r\n          position = index;\r\n        }\r\n      });\r\n    }\r\n\r\n    // closing on Enter / Space\r\n    if (key === Key.Space || key === Key.Enter) {\r\n      if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\r\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\r\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\r\n        // to close the dropdown\r\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (key === Key.Tab) {\r\n      if (event.target && this.isOpen() && this.autoClose) {\r\n        if (this._anchor.nativeElement === event.target) {\r\n          if (this.container === 'body' && !event.shiftKey) {\r\n            /* This case is special: user is using [Tab] from the anchor/toggle.\r\n               User expects the next focusable element in the dropdown menu to get focus.\r\n               But the menu is not a sibling to anchor/toggle, it is at the end of the body.\r\n               Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\r\n               so that browser will focus the proper element (first one focusable in the menu) */\r\n            this._renderer.setAttribute(this._menu.nativeElement, 'tabindex', '0');\r\n            this._menu.nativeElement.focus();\r\n            this._renderer.removeAttribute(this._menu.nativeElement, 'tabindex');\r\n          } else if (event.shiftKey) {\r\n            this.close();\r\n          }\r\n          return;\r\n        } else if (this.container === 'body') {\r\n          const focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\r\n          if (event.shiftKey && event.target === focusableElements[0]) {\r\n            this._anchor.nativeElement.focus();\r\n            event.preventDefault();\r\n          } else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\r\n            this._anchor.nativeElement.focus();\r\n            this.close();\r\n          }\r\n        } else {\r\n          fromEvent<FocusEvent>(event.target as HTMLElement, 'focusout').pipe(take(1)).subscribe(({relatedTarget}) => {\r\n            if (!this._elementRef.nativeElement.contains(relatedTarget as HTMLElement)) {\r\n              this.close();\r\n            }\r\n          });\r\n        }\r\n      }\r\n      return;\r\n    }\r\n\r\n    // opening / navigating\r\n    if (isEventFromToggle || itemElement) {\r\n      this.open();\r\n\r\n      if (itemElements.length) {\r\n        switch (key) {\r\n          case Key.ArrowDown:\r\n            position = Math.min(position + 1, itemElements.length - 1);\r\n            break;\r\n          case Key.ArrowUp:\r\n            if (this._isDropup() && position === -1) {\r\n              position = itemElements.length - 1;\r\n              break;\r\n            }\r\n            position = Math.max(position - 1, 0);\r\n            break;\r\n          case Key.Home:\r\n            position = 0;\r\n            break;\r\n          case Key.End:\r\n            position = itemElements.length - 1;\r\n            break;\r\n        }\r\n        itemElements[position].focus();\r\n      }\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  private _isDropup(): boolean { return this._elementRef.nativeElement.classList.contains('dropup'); }\r\n\r\n  private _isEventFromToggle(event: KeyboardEvent) {\r\n    return this._anchor.nativeElement.contains(event.target as HTMLElement);\r\n  }\r\n\r\n  private _getMenuElements(): HTMLElement[] {\r\n    const menu = this._menu;\r\n    if (menu == null) {\r\n      return [];\r\n    }\r\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\r\n  }\r\n\r\n  private _positionMenu() {\r\n    const menu = this._menu;\r\n    if (this.isOpen() && menu) {\r\n      this._applyPlacementClasses(\r\n          this.display === 'dynamic' ? positionElements(\r\n                                           this._anchor.nativeElement, this._bodyContainer || this._menu.nativeElement,\r\n                                           this.placement, this.container === 'body') :\r\n                                       this._getFirstPlacement(this.placement));\r\n    }\r\n  }\r\n\r\n  private _getFirstPlacement(placement: PlacementArray): Placement {\r\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0] as Placement;\r\n  }\r\n\r\n  private _resetContainer() {\r\n    const renderer = this._renderer;\r\n    if (this._menu) {\r\n      const dropdownElement = this._elementRef.nativeElement;\r\n      const dropdownMenuElement = this._menu.nativeElement;\r\n\r\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\r\n      renderer.removeStyle(dropdownMenuElement, 'position');\r\n      renderer.removeStyle(dropdownMenuElement, 'transform');\r\n    }\r\n    if (this._bodyContainer) {\r\n      renderer.removeChild(this._document.body, this._bodyContainer);\r\n      this._bodyContainer = null;\r\n    }\r\n  }\r\n\r\n  private _applyContainer(container: null | 'body' = null) {\r\n    this._resetContainer();\r\n    if (container === 'body') {\r\n      const renderer = this._renderer;\r\n      const dropdownMenuElement = this._menu.nativeElement;\r\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\r\n\r\n      // Override some styles to have the positioning working\r\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\r\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\r\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\r\n\r\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\r\n      renderer.appendChild(this._document.body, bodyContainer);\r\n    }\r\n\r\n    this._applyCustomDropdownClass(this.dropdownClass);\r\n  }\r\n\r\n  private _applyCustomDropdownClass(newClass: string, oldClass?: string) {\r\n    const targetElement = this.container === 'body' ? this._bodyContainer : this._elementRef.nativeElement;\r\n    if (targetElement) {\r\n      if (oldClass) {\r\n        this._renderer.removeClass(targetElement, oldClass);\r\n      }\r\n      if (newClass) {\r\n        this._renderer.addClass(targetElement, newClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _applyPlacementClasses(placement?: Placement | null) {\r\n    const menu = this._menu;\r\n    if (menu) {\r\n      if (!placement) {\r\n        placement = this._getFirstPlacement(this.placement);\r\n      }\r\n\r\n      const renderer = this._renderer;\r\n      const dropdownElement = this._elementRef.nativeElement;\r\n\r\n      // remove the current placement classes\r\n      renderer.removeClass(dropdownElement, 'dropup');\r\n      renderer.removeClass(dropdownElement, 'dropdown');\r\n      menu.placement = this.display === 'static' ? null : placement;\r\n\r\n      /*\r\n      * apply the new placement\r\n      * in case of top use up-arrow or down-arrow otherwise\r\n      */\r\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\r\n      renderer.addClass(dropdownElement, dropdownClass);\r\n\r\n      const bodyContainer = this._bodyContainer;\r\n      if (bodyContainer) {\r\n        renderer.removeClass(bodyContainer, 'dropup');\r\n        renderer.removeClass(bodyContainer, 'dropdown');\r\n        renderer.addClass(bodyContainer, dropdownClass);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {\r\n  NgbDropdown,\r\n  NgbDropdownAnchor,\r\n  NgbDropdownToggle,\r\n  NgbDropdownMenu,\r\n  NgbDropdownItem,\r\n  NgbNavbar\r\n} from './dropdown';\r\n\r\nexport {\r\n  NgbDropdown,\r\n  NgbDropdownAnchor,\r\n  NgbDropdownToggle,\r\n  NgbDropdownMenu,\r\n  NgbDropdownItem,\r\n  NgbNavbar\r\n} from './dropdown';\r\nexport {NgbDropdownConfig} from './dropdown-config';\r\n\r\nconst NGB_DROPDOWN_DIRECTIVES =\r\n    [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\r\n\r\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\r\nexport class NgbDropdownModule {\r\n}\r\n","import {Injectable, Injector} from '@angular/core';\r\nimport {NgbConfig} from '../ngb-config';\r\n\r\n/**\r\n * Options available when opening new modal windows with `NgbModal.open()` method.\r\n */\r\nexport interface NgbModalOptions {\r\n  /**\r\n   * If `true`, modal opening and closing will be animated.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  animation?: boolean;\r\n\r\n  /**\r\n   * `aria-labelledby` attribute value to set on the modal window.\r\n   *\r\n   * @since 2.2.0\r\n   */\r\n  ariaLabelledBy?: string;\r\n\r\n  /**\r\n   * `aria-describedby` attribute value to set on the modal window.\r\n   *\r\n   * @since 6.1.0\r\n   */\r\n  ariaDescribedBy?: string;\r\n\r\n  /**\r\n   * If `true`, the backdrop element will be created for a given modal.\r\n   *\r\n   * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\r\n   *\r\n   * Default value is `true`.\r\n   */\r\n  backdrop?: boolean | 'static';\r\n\r\n  /**\r\n   * Callback right before the modal will be dismissed.\r\n   *\r\n   * If this function returns:\r\n   * * `false`\r\n   * * a promise resolved with `false`\r\n   * * a promise that is rejected\r\n   *\r\n   * then the modal won't be dismissed.\r\n   */\r\n  beforeDismiss?: () => boolean | Promise<boolean>;\r\n\r\n  /**\r\n   * If `true`, the modal will be centered vertically.\r\n   *\r\n   * Default value is `false`.\r\n   *\r\n   * @since 1.1.0\r\n   */\r\n  centered?: boolean;\r\n\r\n  /**\r\n   * A selector specifying the element all new modal windows should be appended to.\r\n   * Since v5.3.0 it is also possible to pass the reference to an `HTMLElement`.\r\n   *\r\n   * If not specified, will be `body`.\r\n   */\r\n  container?: string | HTMLElement;\r\n\r\n  /**\r\n   * The `Injector` to use for modal content.\r\n   */\r\n  injector?: Injector;\r\n\r\n  /**\r\n   * If `true`, the modal will be closed when `Escape` key is pressed\r\n   *\r\n   * Default value is `true`.\r\n   */\r\n  keyboard?: boolean;\r\n\r\n  /**\r\n   * Scrollable modal content (false by default).\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  scrollable?: boolean;\r\n\r\n  /**\r\n   * Size of a new modal window.\r\n   */\r\n  size?: 'sm' | 'lg' | 'xl' | string;\r\n\r\n  /**\r\n   * A custom class to append to the modal window.\r\n   */\r\n  windowClass?: string;\r\n\r\n  /**\r\n   * A custom class to append to the modal dialog.\r\n   *\r\n   * @since 9.1.0\r\n   */\r\n  modalDialogClass?: string;\r\n\r\n  /**\r\n   * A custom class to append to the modal backdrop.\r\n   *\r\n   * @since 1.1.0\r\n   */\r\n  backdropClass?: string;\r\n}\r\n\r\n/**\r\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all modals used in the application.\r\n*\r\n* @since 3.1.0\r\n*/\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbModalConfig implements Required<NgbModalOptions> {\r\n  ariaLabelledBy: string;\r\n  ariaDescribedBy: string;\r\n  backdrop: boolean | 'static' = true;\r\n  beforeDismiss: () => boolean | Promise<boolean>;\r\n  centered: boolean;\r\n  container: string;\r\n  injector: Injector;\r\n  keyboard = true;\r\n  scrollable: boolean;\r\n  size: 'sm' | 'lg' | 'xl' | string;\r\n  windowClass: string;\r\n  modalDialogClass: string;\r\n  backdropClass: string;\r\n\r\n  private _animation: boolean;\r\n\r\n  constructor(private _ngbConfig: NgbConfig) {}\r\n\r\n  get animation(): boolean { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\r\n  set animation(animation: boolean) { this._animation = animation; }\r\n}\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Injector,\r\n  NgZone,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  ViewRef\r\n} from '@angular/core';\r\n\r\nimport {Observable, of} from 'rxjs';\r\nimport {mergeMap, take, tap} from 'rxjs/operators';\r\n\r\nimport {ngbRunTransition} from './transition/ngbTransition';\r\n\r\nexport class ContentRef {\r\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\r\n}\r\n\r\nexport class PopupService<T> {\r\n  private _windowRef: ComponentRef<T>| null = null;\r\n  private _contentRef: ContentRef | null = null;\r\n\r\n  constructor(\r\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\r\n      private _renderer: Renderer2, private _ngZone: NgZone,\r\n      private _componentFactoryResolver: ComponentFactoryResolver, private _applicationRef: ApplicationRef) {}\r\n\r\n  open(content?: string | TemplateRef<any>, context?: any, animation = false):\r\n      {windowRef: ComponentRef<T>, transition$: Observable<void>} {\r\n    if (!this._windowRef) {\r\n      this._contentRef = this._getContentRef(content, context);\r\n      this._windowRef = this._viewContainerRef.createComponent(\r\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), this._viewContainerRef.length,\r\n          this._injector, this._contentRef.nodes);\r\n    }\r\n\r\n    const {nativeElement} = this._windowRef.location;\r\n    const transition$ = this._ngZone.onStable.pipe(\r\n        take(1), mergeMap(\r\n                     () => ngbRunTransition(\r\n                         this._ngZone, nativeElement, ({classList}) => classList.add('show'),\r\n                         {animation, runningTransition: 'continue'})));\r\n\r\n    return {windowRef: this._windowRef, transition$};\r\n  }\r\n\r\n  close(animation = false): Observable<void> {\r\n    if (!this._windowRef) {\r\n      return of(undefined);\r\n    }\r\n\r\n    return ngbRunTransition(\r\n               this._ngZone, this._windowRef.location.nativeElement, ({classList}) => classList.remove('show'),\r\n               {animation, runningTransition: 'stop'})\r\n        .pipe(tap(() => {\r\n          if (this._windowRef) {\r\n            // this is required because of the container='body' option\r\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\r\n            this._windowRef = null;\r\n          }\r\n          if (this._contentRef?.viewRef) {\r\n            this._applicationRef.detachView(this._contentRef.viewRef);\r\n            this._contentRef.viewRef.destroy();\r\n            this._contentRef = null;\r\n          }\r\n        }));\r\n  }\r\n\r\n  private _getContentRef(content?: string | TemplateRef<any>, context?: any): ContentRef {\r\n    if (!content) {\r\n      return new ContentRef([]);\r\n    } else if (content instanceof TemplateRef) {\r\n      const viewRef = content.createEmbeddedView(context);\r\n      this._applicationRef.attachView(viewRef);\r\n      return new ContentRef([viewRef.rootNodes], viewRef);\r\n    } else {\r\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\r\n    }\r\n  }\r\n}\r\n","import {Injectable, Inject} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n\r\nconst noop = () => {};\r\n\r\n\r\n\r\n/** Type for the callback used to revert the scrollbar compensation. */\r\nexport type CompensationReverter = () => void;\r\n\r\n\r\n\r\n/**\r\n * Utility to handle the scrollbar.\r\n *\r\n * It allows to compensate the lack of a vertical scrollbar by adding an\r\n * equivalent padding on the right of the body, and to remove this compensation.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class ScrollBar {\r\n  constructor(@Inject(DOCUMENT) private _document: any) {}\r\n\r\n  /**\r\n   * To be called right before a potential vertical scrollbar would be removed:\r\n   *\r\n   * - if there was a scrollbar, adds some compensation padding to the body\r\n   * to keep the same layout as when the scrollbar is there\r\n   * - if there was none, there is nothing to do\r\n   *\r\n   * @return a callback used to revert the compensation (noop if there was none,\r\n   * otherwise a function removing the padding)\r\n   */\r\n  compensate(): CompensationReverter {\r\n    const width = this._getWidth();\r\n    return !this._isPresent(width) ? noop : this._adjustBody(width);\r\n  }\r\n\r\n  /**\r\n   * Adds a padding of the given width on the right of the body.\r\n   *\r\n   * @return a callback used to revert the padding to its previous value\r\n   */\r\n  private _adjustBody(scrollbarWidth: number): CompensationReverter {\r\n    const body = this._document.body;\r\n    const userSetPaddingStyle = body.style.paddingRight;\r\n    const actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\r\n    body.style['padding-right'] = `${actualPadding + scrollbarWidth}px`;\r\n    return () => body.style['padding-right'] = userSetPaddingStyle;\r\n  }\r\n\r\n  /**\r\n   * Tells whether a scrollbar is currently present on the body.\r\n   *\r\n   * @return true if scrollbar is present, false otherwise\r\n   */\r\n  private _isPresent(scrollbarWidth: number): boolean {\r\n    const rect = this._document.body.getBoundingClientRect();\r\n    const bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\r\n    const uncertainty = 0.1 * scrollbarWidth;\r\n    return bodyToViewportGap >= scrollbarWidth - uncertainty;\r\n  }\r\n\r\n  /**\r\n   * Calculates and returns the width of a scrollbar.\r\n   *\r\n   * @return the width of a scrollbar on this page\r\n   */\r\n  private _getWidth(): number {\r\n    const measurer = this._document.createElement('div');\r\n    measurer.className = 'modal-scrollbar-measure';\r\n\r\n    const body = this._document.body;\r\n    body.appendChild(measurer);\r\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\r\n    body.removeChild(measurer);\r\n\r\n    return width;\r\n  }\r\n}\r\n","import {Component, ElementRef, Input, NgZone, OnInit, ViewEncapsulation} from '@angular/core';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {take} from 'rxjs/operators';\r\n\r\nimport {ngbRunTransition} from '../util/transition/ngbTransition';\r\nimport {reflow} from '../util/util';\r\n\r\n@Component({\r\n  selector: 'ngb-modal-backdrop',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: '',\r\n  host: {\r\n    '[class]': '\"modal-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\r\n    '[class.show]': '!animation',\r\n    '[class.fade]': 'animation',\r\n    'style': 'z-index: 1050'\r\n  }\r\n})\r\nexport class NgbModalBackdrop implements OnInit {\r\n  @Input() animation: boolean;\r\n  @Input() backdropClass: string;\r\n\r\n  constructor(private _el: ElementRef<HTMLElement>, private _zone: NgZone) {}\r\n\r\n  ngOnInit() {\r\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n      ngbRunTransition(this._zone, this._el.nativeElement, (element: HTMLElement, animation: boolean) => {\r\n        if (animation) {\r\n          reflow(element);\r\n        }\r\n        element.classList.add('show');\r\n      }, {animation: this.animation, runningTransition: 'continue'});\r\n    });\r\n  }\r\n\r\n  hide(): Observable<void> {\r\n    return ngbRunTransition(\r\n        this._zone, this._el.nativeElement, ({classList}) => classList.remove('show'),\r\n        {animation: this.animation, runningTransition: 'stop'});\r\n  }\r\n}\r\n","import {ComponentRef} from '@angular/core';\r\n\r\nimport {Observable, of, Subject, zip} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\n\r\nimport {NgbModalBackdrop} from './modal-backdrop';\r\nimport {NgbModalWindow} from './modal-window';\r\n\r\nimport {ContentRef} from '../util/popup';\r\n\r\n/**\r\n * A reference to the currently opened (active) modal.\r\n *\r\n * Instances of this class can be injected into your component passed as modal content.\r\n * So you can `.close()` or `.dismiss()` the modal window from your component.\r\n */\r\nexport class NgbActiveModal {\r\n  /**\r\n   * Closes the modal with an optional `result` value.\r\n   *\r\n   * The `NgbModalRef.result` promise will be resolved with the provided value.\r\n   */\r\n  close(result?: any): void {}\r\n\r\n  /**\r\n   * Dismisses the modal with an optional `reason` value.\r\n   *\r\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\r\n   */\r\n  dismiss(reason?: any): void {}\r\n}\r\n\r\n/**\r\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\r\n */\r\nexport class NgbModalRef {\r\n  private _closed = new Subject<any>();\r\n  private _dismissed = new Subject<any>();\r\n  private _hidden = new Subject<void>();\r\n  private _resolve: (result?: any) => void;\r\n  private _reject: (reason?: any) => void;\r\n\r\n  /**\r\n   * The instance of a component used for the modal content.\r\n   *\r\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\r\n   */\r\n  get componentInstance(): any {\r\n    if (this._contentRef && this._contentRef.componentRef) {\r\n      return this._contentRef.componentRef.instance;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\r\n   */\r\n  result: Promise<any>;\r\n\r\n  /**\r\n   * The observable that emits when the modal is closed via the `.close()` method.\r\n   *\r\n   * It will emit the result passed to the `.close()` method.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  get closed(): Observable<any> { return this._closed.asObservable().pipe(takeUntil(this._hidden)); }\r\n\r\n  /**\r\n   * The observable that emits when the modal is dismissed via the `.dismiss()` method.\r\n   *\r\n   * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\r\n   * reasons like backdrop click or ESC key press.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  get dismissed(): Observable<any> { return this._dismissed.asObservable().pipe(takeUntil(this._hidden)); }\r\n\r\n  /**\r\n   * The observable that emits when both modal window and backdrop are closed and animations were finished.\r\n   * At this point modal and backdrop elements will be removed from the DOM tree.\r\n   *\r\n   * This observable will be completed after emitting.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  get hidden(): Observable<void> { return this._hidden.asObservable(); }\r\n\r\n  /**\r\n   * The observable that emits when modal is fully visible and animation was finished.\r\n   * Modal DOM element is always available synchronously after calling 'modal.open()' service.\r\n   *\r\n   * This observable will be completed after emitting.\r\n   * It will not emit, if modal is closed before open animation is finished.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  get shown(): Observable<void> { return this._windowCmptRef.instance.shown.asObservable(); }\r\n\r\n  constructor(\r\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\r\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\r\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\r\n\r\n    this.result = new Promise((resolve, reject) => {\r\n      this._resolve = resolve;\r\n      this._reject = reject;\r\n    });\r\n    this.result.then(null, () => {});\r\n  }\r\n\r\n  /**\r\n   * Closes the modal with an optional `result` value.\r\n   *\r\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\r\n   */\r\n  close(result?: any): void {\r\n    if (this._windowCmptRef) {\r\n      this._closed.next(result);\r\n      this._resolve(result);\r\n      this._removeModalElements();\r\n    }\r\n  }\r\n\r\n  private _dismiss(reason?: any) {\r\n    this._dismissed.next(reason);\r\n    this._reject(reason);\r\n    this._removeModalElements();\r\n  }\r\n\r\n  /**\r\n   * Dismisses the modal with an optional `reason` value.\r\n   *\r\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\r\n   */\r\n  dismiss(reason?: any): void {\r\n    if (this._windowCmptRef) {\r\n      if (!this._beforeDismiss) {\r\n        this._dismiss(reason);\r\n      } else {\r\n        const dismiss = this._beforeDismiss();\r\n        if (dismiss && dismiss.then) {\r\n          dismiss.then(\r\n              result => {\r\n                if (result !== false) {\r\n                  this._dismiss(reason);\r\n                }\r\n              },\r\n              () => {});\r\n        } else if (dismiss !== false) {\r\n          this._dismiss(reason);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private _removeModalElements() {\r\n    const windowTransition$ = this._windowCmptRef.instance.hide();\r\n    const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\r\n\r\n    // hiding window\r\n    windowTransition$.subscribe(() => {\r\n      const {nativeElement} = this._windowCmptRef.location;\r\n      nativeElement.parentNode.removeChild(nativeElement);\r\n      this._windowCmptRef.destroy();\r\n\r\n      if (this._contentRef && this._contentRef.viewRef) {\r\n        this._contentRef.viewRef.destroy();\r\n      }\r\n\r\n      this._windowCmptRef = <any>null;\r\n      this._contentRef = <any>null;\r\n    });\r\n\r\n    // hiding backdrop\r\n    backdropTransition$.subscribe(() => {\r\n      if (this._backdropCmptRef) {\r\n        const {nativeElement} = this._backdropCmptRef.location;\r\n        nativeElement.parentNode.removeChild(nativeElement);\r\n        this._backdropCmptRef.destroy();\r\n        this._backdropCmptRef = <any>null;\r\n      }\r\n    });\r\n\r\n    // all done\r\n    zip(windowTransition$, backdropTransition$).subscribe(() => {\r\n      this._hidden.next();\r\n      this._hidden.complete();\r\n    });\r\n  }\r\n}\r\n","export enum ModalDismissReasons {\r\n  BACKDROP_CLICK,\r\n  ESC\r\n}\r\n","import {DOCUMENT} from '@angular/common';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport {fromEvent, Observable, Subject, zip} from 'rxjs';\r\nimport {filter, switchMap, take, takeUntil, tap} from 'rxjs/operators';\r\n\r\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\r\nimport {Key} from '../util/key';\r\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\r\nimport {ngbRunTransition, NgbTransitionOptions} from '../util/transition/ngbTransition';\r\nimport {reflow} from '../util/util';\r\n\r\n@Component({\r\n  selector: 'ngb-modal-window',\r\n  host: {\r\n    '[class]': '\"modal d-block\" + (windowClass ? \" \" + windowClass : \"\")',\r\n    '[class.fade]': 'animation',\r\n    'role': 'dialog',\r\n    'tabindex': '-1',\r\n    '[attr.aria-modal]': 'true',\r\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\r\n    '[attr.aria-describedby]': 'ariaDescribedBy'\r\n  },\r\n  template: `\r\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\r\n     (scrollable ? ' modal-dialog-scrollable' : '') + (modalDialogClass ? ' ' + modalDialogClass : '')\" role=\"document\">\r\n        <div class=\"modal-content\"><ng-content></ng-content></div>\r\n    </div>\r\n    `,\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./modal.scss']\r\n})\r\nexport class NgbModalWindow implements OnInit,\r\n    OnDestroy {\r\n  private _closed$ = new Subject<void>();\r\n  private _elWithFocus: Element | null = null;  // element that is focused prior to modal opening\r\n\r\n  @ViewChild('dialog', {static: true}) private _dialogEl: ElementRef<HTMLElement>;\r\n\r\n  @Input() animation: boolean;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() ariaDescribedBy: string;\r\n  @Input() backdrop: boolean | string = true;\r\n  @Input() centered: string;\r\n  @Input() keyboard = true;\r\n  @Input() scrollable: string;\r\n  @Input() size: string;\r\n  @Input() windowClass: string;\r\n  @Input() modalDialogClass: string;\r\n\r\n  @Output('dismiss') dismissEvent = new EventEmitter();\r\n\r\n  shown = new Subject<void>();\r\n  hidden = new Subject<void>();\r\n\r\n  constructor(\r\n      @Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>, private _zone: NgZone) {}\r\n\r\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\r\n\r\n  ngOnInit() {\r\n    this._elWithFocus = this._document.activeElement;\r\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => { this._show(); });\r\n  }\r\n\r\n  ngOnDestroy() { this._disableEventHandling(); }\r\n\r\n  hide(): Observable<any> {\r\n    const {nativeElement} = this._elRef;\r\n    const context: NgbTransitionOptions<any> = {animation: this.animation, runningTransition: 'stop'};\r\n\r\n    const windowTransition$ =\r\n        ngbRunTransition(this._zone, nativeElement, () => nativeElement.classList.remove('show'), context);\r\n    const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => {}, context);\r\n\r\n    const transitions$ = zip(windowTransition$, dialogTransition$);\r\n    transitions$.subscribe(() => {\r\n      this.hidden.next();\r\n      this.hidden.complete();\r\n    });\r\n\r\n    this._disableEventHandling();\r\n    this._restoreFocus();\r\n\r\n    return transitions$;\r\n  }\r\n\r\n  private _show() {\r\n    const context: NgbTransitionOptions<any> = {animation: this.animation, runningTransition: 'continue'};\r\n\r\n    const windowTransition$ =\r\n        ngbRunTransition(this._zone, this._elRef.nativeElement, (element: HTMLElement, animation: boolean) => {\r\n          if (animation) {\r\n            reflow(element);\r\n          }\r\n          element.classList.add('show');\r\n        }, context);\r\n    const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => {}, context);\r\n\r\n    zip(windowTransition$, dialogTransition$).subscribe(() => {\r\n      this.shown.next();\r\n      this.shown.complete();\r\n    });\r\n\r\n    this._enableEventHandling();\r\n    this._setFocus();\r\n  }\r\n\r\n  private _enableEventHandling() {\r\n    const {nativeElement} = this._elRef;\r\n    this._zone.runOutsideAngular(() => {\r\n      fromEvent<KeyboardEvent>(nativeElement, 'keydown')\r\n          .pipe(\r\n              takeUntil(this._closed$),\r\n              // tslint:disable-next-line:deprecation\r\n              filter(e => e.which === Key.Escape))\r\n          .subscribe(event => {\r\n            if (this.keyboard) {\r\n              requestAnimationFrame(() => {\r\n                if (!event.defaultPrevented) {\r\n                  this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\r\n                }\r\n              });\r\n            } else if (this.backdrop === 'static') {\r\n              this._bumpBackdrop();\r\n            }\r\n          });\r\n\r\n      // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\r\n      // inside the modal dialog and releasing it outside\r\n      let preventClose = false;\r\n      fromEvent<MouseEvent>(this._dialogEl.nativeElement, 'mousedown')\r\n          .pipe(\r\n              takeUntil(this._closed$), tap(() => preventClose = false),\r\n              switchMap(() => fromEvent<MouseEvent>(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))),\r\n              filter(({target}) => nativeElement === target))\r\n          .subscribe(() => { preventClose = true; });\r\n\r\n      // We're listening to 'click' to dismiss modal on modal window click, except when:\r\n      // 1. clicking on modal dialog itself\r\n      // 2. closing was prevented by mousedown/up handlers\r\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\r\n      fromEvent<MouseEvent>(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({target}) => {\r\n        if (nativeElement === target) {\r\n          if (this.backdrop === 'static') {\r\n            this._bumpBackdrop();\r\n          } else if (this.backdrop === true && !preventClose) {\r\n            this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\r\n          }\r\n        }\r\n\r\n        preventClose = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  private _disableEventHandling() { this._closed$.next(); }\r\n\r\n  private _setFocus() {\r\n    const {nativeElement} = this._elRef;\r\n    if (!nativeElement.contains(document.activeElement)) {\r\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\r\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\r\n\r\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\r\n      elementToFocus.focus();\r\n    }\r\n  }\r\n\r\n  private _restoreFocus() {\r\n    const body = this._document.body;\r\n    const elWithFocus = this._elWithFocus;\r\n\r\n    let elementToFocus;\r\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\r\n      elementToFocus = elWithFocus;\r\n    } else {\r\n      elementToFocus = body;\r\n    }\r\n    this._zone.runOutsideAngular(() => {\r\n      setTimeout(() => elementToFocus.focus());\r\n      this._elWithFocus = null;\r\n    });\r\n  }\r\n\r\n  private _bumpBackdrop() {\r\n    if (this.backdrop === 'static') {\r\n      ngbRunTransition(this._zone, this._elRef.nativeElement, ({classList}) => {\r\n        classList.add('modal-static');\r\n        return () => classList.remove('modal-static');\r\n      }, {animation: this.animation, runningTransition: 'continue'});\r\n    }\r\n  }\r\n}\r\n","import {DOCUMENT} from '@angular/common';\r\nimport {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Injectable,\r\n  Injector,\r\n  NgZone,\r\n  RendererFactory2,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport {ngbFocusTrap} from '../util/focus-trap';\r\nimport {ContentRef} from '../util/popup';\r\nimport {ScrollBar} from '../util/scrollbar';\r\nimport {isDefined, isString} from '../util/util';\r\nimport {NgbModalBackdrop} from './modal-backdrop';\r\nimport {NgbModalOptions} from './modal-config';\r\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\r\nimport {NgbModalWindow} from './modal-window';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbModalStack {\r\n  private _activeWindowCmptHasChanged = new Subject();\r\n  private _ariaHiddenValues: Map<Element, string | null> = new Map();\r\n  private _backdropAttributes = ['animation', 'backdropClass'];\r\n  private _modalRefs: NgbModalRef[] = [];\r\n  private _windowAttributes = [\r\n    'animation', 'ariaLabelledBy', 'ariaDescribedBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size',\r\n    'windowClass', 'modalDialogClass'\r\n  ];\r\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\r\n  private _activeInstances: EventEmitter<NgbModalRef[]> = new EventEmitter();\r\n\r\n  constructor(\r\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\r\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2, private _ngZone: NgZone) {\r\n    // Trap focus on active WindowCmpt\r\n    this._activeWindowCmptHasChanged.subscribe(() => {\r\n      if (this._windowCmpts.length) {\r\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\r\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\r\n        this._revertAriaHidden();\r\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\r\n      }\r\n    });\r\n  }\r\n\r\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\r\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\r\n                                                                   this._document.querySelector(options.container) :\r\n                                                                   this._document.body;\r\n    const renderer = this._rendererFactory.createRenderer(null, null);\r\n\r\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\r\n    const removeBodyClass = () => {\r\n      if (!this._modalRefs.length) {\r\n        renderer.removeClass(this._document.body, 'modal-open');\r\n        this._revertAriaHidden();\r\n      }\r\n    };\r\n\r\n    if (!containerEl) {\r\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\r\n    }\r\n\r\n    const activeModal = new NgbActiveModal();\r\n    const contentRef =\r\n        this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\r\n\r\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop>| undefined =\r\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : undefined;\r\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\r\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\r\n\r\n    this._registerModalRef(ngbModalRef);\r\n    this._registerWindowCmpt(windowCmptRef);\r\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\r\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\r\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\r\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\r\n\r\n    this._applyWindowOptions(windowCmptRef.instance, options);\r\n    if (this._modalRefs.length === 1) {\r\n      renderer.addClass(this._document.body, 'modal-open');\r\n    }\r\n\r\n    if (backdropCmptRef && backdropCmptRef.instance) {\r\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\r\n      backdropCmptRef.changeDetectorRef.detectChanges();\r\n    }\r\n    windowCmptRef.changeDetectorRef.detectChanges();\r\n    return ngbModalRef;\r\n  }\r\n\r\n  get activeInstances() { return this._activeInstances; }\r\n\r\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\r\n\r\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\r\n\r\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\r\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\r\n    let backdropCmptRef = backdropFactory.create(this._injector);\r\n    this._applicationRef.attachView(backdropCmptRef.hostView);\r\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\r\n    return backdropCmptRef;\r\n  }\r\n\r\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\r\n      ComponentRef<NgbModalWindow> {\r\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\r\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\r\n    this._applicationRef.attachView(windowCmptRef.hostView);\r\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\r\n    return windowCmptRef;\r\n  }\r\n\r\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\r\n    this._windowAttributes.forEach((optionName: string) => {\r\n      if (isDefined(options[optionName])) {\r\n        windowInstance[optionName] = options[optionName];\r\n      }\r\n    });\r\n  }\r\n\r\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\r\n    this._backdropAttributes.forEach((optionName: string) => {\r\n      if (isDefined(options[optionName])) {\r\n        backdropInstance[optionName] = options[optionName];\r\n      }\r\n    });\r\n  }\r\n\r\n  private _getContentRef(\r\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, activeModal: NgbActiveModal,\r\n      options: NgbModalOptions): ContentRef {\r\n    if (!content) {\r\n      return new ContentRef([]);\r\n    } else if (content instanceof TemplateRef) {\r\n      return this._createFromTemplateRef(content, activeModal);\r\n    } else if (isString(content)) {\r\n      return this._createFromString(content);\r\n    } else {\r\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\r\n    }\r\n  }\r\n\r\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\r\n    const context = {\r\n      $implicit: activeModal,\r\n      close(result) { activeModal.close(result); },\r\n      dismiss(reason) { activeModal.dismiss(reason); }\r\n    };\r\n    const viewRef = content.createEmbeddedView(context);\r\n    this._applicationRef.attachView(viewRef);\r\n    return new ContentRef([viewRef.rootNodes], viewRef);\r\n  }\r\n\r\n  private _createFromString(content: string): ContentRef {\r\n    const component = this._document.createTextNode(`${content}`);\r\n    return new ContentRef([[component]]);\r\n  }\r\n\r\n  private _createFromComponent(\r\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, context: NgbActiveModal,\r\n      options: NgbModalOptions): ContentRef {\r\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\r\n    const modalContentInjector =\r\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\r\n    const componentRef = contentCmptFactory.create(modalContentInjector);\r\n    const componentNativeEl = componentRef.location.nativeElement;\r\n    if (options.scrollable) {\r\n      (componentNativeEl as HTMLElement).classList.add('component-host-scrollable');\r\n    }\r\n    this._applicationRef.attachView(componentRef.hostView);\r\n    // FIXME: we should here get rid of the component nativeElement\r\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\r\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\r\n  }\r\n\r\n  private _setAriaHidden(element: Element) {\r\n    const parent = element.parentElement;\r\n    if (parent && element !== this._document.body) {\r\n      Array.from(parent.children).forEach(sibling => {\r\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\r\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\r\n          sibling.setAttribute('aria-hidden', 'true');\r\n        }\r\n      });\r\n\r\n      this._setAriaHidden(parent);\r\n    }\r\n  }\r\n\r\n  private _revertAriaHidden() {\r\n    this._ariaHiddenValues.forEach((value, element) => {\r\n      if (value) {\r\n        element.setAttribute('aria-hidden', value);\r\n      } else {\r\n        element.removeAttribute('aria-hidden');\r\n      }\r\n    });\r\n    this._ariaHiddenValues.clear();\r\n  }\r\n\r\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\r\n    const unregisterModalRef = () => {\r\n      const index = this._modalRefs.indexOf(ngbModalRef);\r\n      if (index > -1) {\r\n        this._modalRefs.splice(index, 1);\r\n        this._activeInstances.emit(this._modalRefs);\r\n      }\r\n    };\r\n    this._modalRefs.push(ngbModalRef);\r\n    this._activeInstances.emit(this._modalRefs);\r\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\r\n  }\r\n\r\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\r\n    this._windowCmpts.push(ngbWindowCmpt);\r\n    this._activeWindowCmptHasChanged.next();\r\n\r\n    ngbWindowCmpt.onDestroy(() => {\r\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\r\n      if (index > -1) {\r\n        this._windowCmpts.splice(index, 1);\r\n        this._activeWindowCmptHasChanged.next();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\r\n\r\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\r\nimport {NgbModalRef} from './modal-ref';\r\nimport {NgbModalStack} from './modal-stack';\r\n\r\n/**\r\n * A service for opening modal windows.\r\n *\r\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\r\n * the `.open()` method.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbModal {\r\n  constructor(\r\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\r\n      private _config: NgbModalConfig) {}\r\n\r\n  /**\r\n   * Opens a new modal window with the specified content and supplied options.\r\n   *\r\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\r\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\r\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\r\n   *\r\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\r\n   */\r\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\r\n    const combinedOptions = {...this._config, animation: this._config.animation, ...options};\r\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\r\n  }\r\n\r\n  /**\r\n   * Returns an observable that holds the active modal instances.\r\n   */\r\n  get activeInstances() { return this._modalStack.activeInstances; }\r\n\r\n  /**\r\n   * Dismisses all currently displayed modal windows with the supplied reason.\r\n   *\r\n   * @since 3.1.0\r\n   */\r\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\r\n\r\n  /**\r\n   * Indicates if there are currently any open modal windows in the application.\r\n   *\r\n   * @since 3.3.0\r\n   */\r\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\r\n}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {NgbModal} from './modal';\r\nimport {NgbModalBackdrop} from './modal-backdrop';\r\nimport {NgbModalWindow} from './modal-window';\r\n\r\nexport {NgbModal} from './modal';\r\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\r\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\r\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\r\n\r\n@NgModule({\r\n  declarations: [NgbModalBackdrop, NgbModalWindow],\r\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\r\n  providers: [NgbModal]\r\n})\r\nexport class NgbModalModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbConfig} from '../ngb-config';\r\n\r\n/**\r\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the navs used in the application.\r\n *\r\n * @since 5.2.0\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbNavConfig {\r\n  destroyOnHide = true;\r\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\r\n  roles: 'tablist' | false = 'tablist';\r\n  keyboard: boolean | 'changeWithArrows' = false;\r\n\r\n  private _animation: boolean;\r\n\r\n  constructor(private _ngbConfig: NgbConfig) {}\r\n\r\n  get animation(): boolean { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\r\n  set animation(animation: boolean) { this._animation = animation; }\r\n}\r\n","import {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  Attribute,\r\n  ChangeDetectorRef,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  SimpleChanges,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nimport {Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\n\r\nimport {isDefined} from '../util/util';\r\nimport {NgbNavConfig} from './nav-config';\r\nimport {Key} from '../util/key';\r\n\r\nconst isValidNavId = (id: any) => isDefined(id) && id !== '';\r\n\r\nlet navCounter = 0;\r\n\r\n/**\r\n * Context passed to the nav content template.\r\n *\r\n * See [this demo](#/components/nav/examples#keep-content) as the example.\r\n *\r\n * @since 5.2.0\r\n */\r\nexport interface NgbNavContentContext {\r\n  /**\r\n   * If `true`, current nav content is visible and active\r\n   */\r\n  $implicit: boolean;\r\n}\r\n\r\n\r\n/**\r\n * This directive must be used to wrap content to be displayed in the nav.\r\n *\r\n * @since 5.2.0\r\n */\r\n@Directive({selector: 'ng-template[ngbNavContent]'})\r\nexport class NgbNavContent {\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n\r\n\r\n/**\r\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\r\n *\r\n * @since 5.2.0\r\n */\r\n@Directive({selector: '[ngbNavItem]', exportAs: 'ngbNavItem', host: {'[class.nav-item]': 'true'}})\r\nexport class NgbNavItem implements AfterContentChecked, OnInit {\r\n  private _nav: NgbNav;\r\n\r\n  /**\r\n   * If `true`, non-active current nav item content will be removed from DOM\r\n   * Otherwise it will just be hidden\r\n   */\r\n  @Input() destroyOnHide;\r\n\r\n  /**\r\n   * If `true`, the current nav item is disabled and can't be toggled by user.\r\n   *\r\n   * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   * The id used for the DOM elements.\r\n   * Must be unique inside the document in case you have multiple `ngbNav`s on the page.\r\n   *\r\n   * Autogenerated as `ngb-nav-XXX` if not provided.\r\n   */\r\n  @Input() domId: string;\r\n\r\n  /**\r\n   * The id used as a model for active nav.\r\n   * It can be anything, but must be unique inside one `ngbNav`.\r\n   *\r\n   * The only limitation is that it is not possible to have the `''` (empty string) as id,\r\n   * because ` ngbNavItem `, `ngbNavItem=''` and `[ngbNavItem]=\"''\"` are indistinguishable\r\n   */\r\n  @Input('ngbNavItem') _id: any;\r\n\r\n  /**\r\n   * An event emitted when the fade in transition is finished on the related nav content\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() shown = new EventEmitter<void>();\r\n\r\n  /**\r\n   * An event emitted when the fade out transition is finished on the related nav content\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() hidden = new EventEmitter<void>();\r\n\r\n  contentTpl: NgbNavContent | null;\r\n\r\n  @ContentChildren(NgbNavContent, {descendants: false}) contentTpls: QueryList<NgbNavContent>;\r\n\r\n  constructor(@Inject(forwardRef(() => NgbNav)) nav, public elementRef: ElementRef<any>) {\r\n    // TODO: cf https://github.com/angular/angular/issues/30106\r\n    this._nav = nav;\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\r\n    // only @ContentChildren allows us to specify the {descendants: false} option.\r\n    // Without {descendants: false} we are hitting bugs described in:\r\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\r\n    this.contentTpl = this.contentTpls.first;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!isDefined(this.domId)) {\r\n      this.domId = `ngb-nav-${navCounter++}`;\r\n    }\r\n  }\r\n\r\n  get active() { return this._nav.activeId === this.id; }\r\n\r\n  get id() { return isValidNavId(this._id) ? this._id : this.domId; }\r\n\r\n  get panelDomId() { return `${this.domId}-panel`; }\r\n\r\n  isPanelInDom() {\r\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * A nav directive that helps with implementing tabbed navigation components.\r\n *\r\n * @since 5.2.0\r\n */\r\n@Directive({\r\n  selector: '[ngbNav]',\r\n  exportAs: 'ngbNav',\r\n  host: {\r\n    '[class.nav]': 'true',\r\n    '[class.flex-column]': `orientation === 'vertical'`,\r\n    '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\r\n    '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\r\n    '(keydown.arrowLeft)': 'onKeyDown($event)',\r\n    '(keydown.arrowRight)': 'onKeyDown($event)',\r\n    '(keydown.arrowDown)': 'onKeyDown($event)',\r\n    '(keydown.arrowUp)': 'onKeyDown($event)',\r\n    '(keydown.Home)': 'onKeyDown($event)',\r\n    '(keydown.End)': 'onKeyDown($event)'\r\n  }\r\n})\r\nexport class NgbNav implements AfterContentInit,\r\n    OnDestroy {\r\n  static ngAcceptInputType_orientation: string;\r\n  static ngAcceptInputType_roles: boolean | string;\r\n\r\n  /**\r\n   * The id of the nav that should be active\r\n   *\r\n   * You could also use the `.select()` method and the `(navChange)` event\r\n   */\r\n  @Input() activeId: any;\r\n\r\n  /**\r\n   * The event emitted after the active nav changes\r\n   * The payload of the event is the newly active nav id\r\n   *\r\n   * If you want to prevent nav change, you should use `(navChange)` event\r\n   */\r\n  @Output() activeIdChange = new EventEmitter<any>();\r\n\r\n  /**\r\n   * If `true`, nav change will be animated.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Input() animation: boolean;\r\n\r\n  /**\r\n   * If `true`, non-active nav content will be removed from DOM\r\n   * Otherwise it will just be hidden\r\n   */\r\n  @Input() destroyOnHide;\r\n\r\n  /**\r\n   * The orientation of navs.\r\n   *\r\n   * Using `vertical` will also add the `aria-orientation` attribute\r\n   */\r\n  @Input() orientation: 'horizontal' | 'vertical';\r\n\r\n  /**\r\n   * Role attribute generating strategy:\r\n   * - `false` - no role attributes will be generated\r\n   * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\r\n   */\r\n  @Input() roles: 'tablist' | false;\r\n\r\n  /**\r\n   * Keyboard support for nav focus/selection using arrow keys.\r\n   *\r\n   * * `false` - no keyboard support.\r\n   * * `true` - navs will be focused using keyboard arrow keys\r\n   * * `'changeWithArrows'` -  nav will be selected using keyboard arrow keys\r\n   *\r\n   * See the [list of available keyboard shortcuts](#/components/nav/overview#keyboard-shortcuts).\r\n   *\r\n   * @since 6.1.0\r\n */\r\n  @Input() keyboard: boolean | 'changeWithArrows';\r\n\r\n  /**\r\n   * An event emitted when the fade in transition is finished for one of the items.\r\n   *\r\n   * Payload of the event is the nav id that was just shown.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() shown = new EventEmitter<any>();\r\n\r\n  /**\r\n   * An event emitted when the fade out transition is finished for one of the items.\r\n   *\r\n   * Payload of the event is the nav id that was just hidden.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() hidden = new EventEmitter<any>();\r\n\r\n  @ContentChildren(NgbNavItem) items: QueryList<NgbNavItem>;\r\n  @ContentChildren(forwardRef(() => NgbNavLink), {descendants: true}) links: QueryList<NgbNavLink>;\r\n\r\n  destroy$ = new Subject<void>();\r\n  navItemChange$ = new Subject<NgbNavItem | null>();\r\n\r\n  constructor(\r\n      @Attribute('role') public role: string, config: NgbNavConfig, private _cd: ChangeDetectorRef,\r\n      @Inject(DOCUMENT) private _document: any) {\r\n    this.animation = config.animation;\r\n    this.destroyOnHide = config.destroyOnHide;\r\n    this.orientation = config.orientation;\r\n    this.roles = config.roles;\r\n    this.keyboard = config.keyboard;\r\n  }\r\n\r\n  /**\r\n   * The nav change event emitted right before the nav change happens on user click.\r\n   *\r\n   * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\r\n   *\r\n   * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\r\n   */\r\n  @Output() navChange = new EventEmitter<NgbNavChangeEvent>();\r\n\r\n  click(item: NgbNavItem) {\r\n    if (!item.disabled) {\r\n      this._updateActiveId(item.id);\r\n    }\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent) {\r\n    if (this.roles !== 'tablist' || !this.keyboard) {\r\n      return;\r\n    }\r\n    // tslint:disable-next-line: deprecation\r\n    const key = event.which;\r\n    const enabledLinks = this.links.filter(link => !link.navItem.disabled);\r\n    const {length} = enabledLinks;\r\n\r\n    let position = -1;\r\n\r\n    enabledLinks.forEach((link, index) => {\r\n      if (link.elRef.nativeElement === this._document.activeElement) {\r\n        position = index;\r\n      }\r\n    });\r\n\r\n    if (length) {\r\n      switch (key) {\r\n        case Key.ArrowLeft:\r\n          if (this.orientation === 'vertical') {\r\n            return;\r\n          }\r\n          position = (position - 1 + length) % length;\r\n          break;\r\n        case Key.ArrowRight:\r\n          if (this.orientation === 'vertical') {\r\n            return;\r\n          }\r\n          position = (position + 1) % length;\r\n          break;\r\n        case Key.ArrowDown:\r\n          if (this.orientation === 'horizontal') {\r\n            return;\r\n          }\r\n          position = (position + 1) % length;\r\n          break;\r\n        case Key.ArrowUp:\r\n          if (this.orientation === 'horizontal') {\r\n            return;\r\n          }\r\n          position = (position - 1 + length) % length;\r\n          break;\r\n        case Key.Home:\r\n          position = 0;\r\n          break;\r\n        case Key.End:\r\n          position = length - 1;\r\n          break;\r\n      }\r\n      if (this.keyboard === 'changeWithArrows') {\r\n        this.select(enabledLinks[position].navItem.id);\r\n      }\r\n      enabledLinks[position].elRef.nativeElement.focus();\r\n\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selects the nav with the given id and shows its associated pane.\r\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\r\n   */\r\n  select(id: any) { this._updateActiveId(id, false); }\r\n\r\n  ngAfterContentInit() {\r\n    if (!isDefined(this.activeId)) {\r\n      const nextId = this.items.first ? this.items.first.id : null;\r\n      if (isValidNavId(nextId)) {\r\n        this._updateActiveId(nextId, false);\r\n        this._cd.detectChanges();\r\n      }\r\n    }\r\n\r\n    this.items.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this._notifyItemChanged(this.activeId));\r\n  }\r\n\r\n  ngOnChanges({activeId}: SimpleChanges): void {\r\n    if (activeId && !activeId.firstChange) {\r\n      this._notifyItemChanged(activeId.currentValue);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() { this.destroy$.next(); }\r\n\r\n  private _updateActiveId(nextId: any, emitNavChange = true) {\r\n    if (this.activeId !== nextId) {\r\n      let defaultPrevented = false;\r\n\r\n      if (emitNavChange) {\r\n        this.navChange.emit({activeId: this.activeId, nextId, preventDefault: () => { defaultPrevented = true; }});\r\n      }\r\n\r\n      if (!defaultPrevented) {\r\n        this.activeId = nextId;\r\n        this.activeIdChange.emit(nextId);\r\n        this._notifyItemChanged(nextId);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _notifyItemChanged(nextItemId: any) { this.navItemChange$.next(this._getItemById(nextItemId)); }\r\n\r\n  private _getItemById(itemId: any): NgbNavItem | null {\r\n    return this.items && this.items.find(item => item.id === itemId) || null;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * A directive to put on the nav link.\r\n *\r\n * @since 5.2.0\r\n */\r\n@Directive({\r\n  selector: 'a[ngbNavLink]',\r\n  host: {\r\n    '[id]': 'navItem.domId',\r\n    '[class.nav-link]': 'true',\r\n    '[class.nav-item]': 'hasNavItemClass()',\r\n    '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\r\n    'href': '',\r\n    '[class.active]': 'navItem.active',\r\n    '[class.disabled]': 'navItem.disabled',\r\n    '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\r\n    '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\r\n    '[attr.aria-selected]': 'navItem.active',\r\n    '[attr.aria-disabled]': 'navItem.disabled',\r\n    '(click)': 'nav.click(navItem); $event.preventDefault()'\r\n  }\r\n})\r\nexport class NgbNavLink {\r\n  constructor(\r\n      @Attribute('role') public role: string, public navItem: NgbNavItem, public nav: NgbNav,\r\n      public elRef: ElementRef) {}\r\n\r\n  hasNavItemClass() {\r\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\r\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * The payload of the change event emitted right before the nav change happens on user click.\r\n *\r\n * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\r\n *\r\n * @since 5.2.0\r\n */\r\nexport interface NgbNavChangeEvent<T = any> {\r\n  /**\r\n   * Id of the currently active nav.\r\n   */\r\n  activeId: T;\r\n\r\n  /**\r\n   * Id of the newly selected nav.\r\n   */\r\n  nextId: T;\r\n\r\n  /**\r\n   * Function that will prevent nav change if called.\r\n   */\r\n  preventDefault: () => void;\r\n}\r\n","import {NgbTransitionStartFn} from '../util/transition/ngbTransition';\r\nimport {reflow} from '../util/util';\r\n\r\nexport const ngbNavFadeOutTransition: NgbTransitionStartFn = ({classList}) => {\r\n  classList.remove('show');\r\n  return () => classList.remove('active');\r\n};\r\n\r\nexport const ngbNavFadeInTransition: NgbTransitionStartFn = (element: HTMLElement, animation: boolean) => {\r\n  if (animation) {\r\n    reflow(element);\r\n  }\r\n  element.classList.add('show');\r\n};\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  NgZone,\r\n  QueryList,\r\n  ViewChildren,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {distinctUntilChanged, skip, startWith, takeUntil} from 'rxjs/operators';\r\n\r\nimport {ngbNavFadeInTransition, ngbNavFadeOutTransition} from './nav-transition';\r\nimport {ngbRunTransition, NgbTransitionOptions} from '../util/transition/ngbTransition';\r\nimport {NgbNav, NgbNavItem} from './nav';\r\n\r\n@Directive({\r\n  selector: '[ngbNavPane]',\r\n  host: {\r\n    '[id]': 'item.panelDomId',\r\n    'class': 'tab-pane',\r\n    '[class.fade]': 'nav.animation',\r\n    '[attr.role]': 'role ? role : nav.roles ? \"tabpanel\" : undefined',\r\n    '[attr.aria-labelledby]': 'item.domId'\r\n  }\r\n})\r\nexport class NgbNavPane {\r\n  @Input() item: NgbNavItem;\r\n  @Input() nav: NgbNav;\r\n  @Input() role: string;\r\n\r\n  constructor(public elRef: ElementRef<HTMLElement>) {}\r\n}\r\n\r\n/**\r\n * The outlet where currently active nav content will be displayed.\r\n *\r\n * @since 5.2.0\r\n */\r\n@Component({\r\n  selector: '[ngbNavOutlet]',\r\n  host: {'[class.tab-content]': 'true'},\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <ng-template ngFor let-item [ngForOf]=\"nav.items\">\r\n      <div ngbNavPane *ngIf=\"item.isPanelInDom() || isPanelTransitioning(item)\" [item]=\"item\" [nav]=\"nav\" [role]=\"paneRole\">\r\n        <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\r\n                     [ngTemplateOutletContext]=\"{$implicit: item.active || isPanelTransitioning(item)}\"></ng-template>\r\n      </div>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class NgbNavOutlet implements AfterViewInit {\r\n  private _activePane: NgbNavPane | null = null;\r\n\r\n  @ViewChildren(NgbNavPane) private _panes: QueryList<NgbNavPane>;\r\n\r\n  /**\r\n   * A role to set on the nav pane\r\n   */\r\n  @Input() paneRole;\r\n\r\n  /**\r\n   * Reference to the `NgbNav`\r\n   */\r\n  @Input('ngbNavOutlet') nav: NgbNav;\r\n\r\n  constructor(private _cd: ChangeDetectorRef, private _ngZone: NgZone) {}\r\n\r\n  isPanelTransitioning(item: NgbNavItem) { return this._activePane ?.item === item; }\r\n\r\n  ngAfterViewInit() {\r\n    // initial display\r\n    this._updateActivePane();\r\n\r\n    // this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\r\n    this.nav.navItemChange$\r\n      .pipe(takeUntil(this.nav.destroy$), startWith(this._activePane ?.item || null), distinctUntilChanged(), skip(1))\r\n      .subscribe(nextItem => {\r\n      const options: NgbTransitionOptions<undefined> = {animation: this.nav.animation, runningTransition: 'stop'};\r\n\r\n      // next panel we're switching to will only appear in DOM after the change detection is done\r\n      // and `this._panes` will be updated\r\n      this._cd.detectChanges();\r\n\r\n      // fading out\r\n      if (this._activePane) {\r\n        ngbRunTransition(this._ngZone, this._activePane.elRef.nativeElement, ngbNavFadeOutTransition, options)\r\n            .subscribe(() => {\r\n              const activeItem = this._activePane ?.item;\r\n              this._activePane = this._getPaneForItem(nextItem);\r\n\r\n              // mark for check when transition finishes as outlet or parent containers might be OnPush\r\n              // without this the panes that have \"faded out\" will stay in DOM\r\n              this._cd.markForCheck();\r\n\r\n              // fading in\r\n              if (this._activePane) {\r\n                // we have to add the '.active' class before running the transition,\r\n                // because it should be in place before `ngbRunTransition` does `reflow()`\r\n                this._activePane.elRef.nativeElement.classList.add('active');\r\n                ngbRunTransition(this._ngZone, this._activePane.elRef.nativeElement, ngbNavFadeInTransition, options)\r\n                    .subscribe(() => {\r\n                      if (nextItem) {\r\n                        nextItem.shown.emit();\r\n                        this.nav.shown.emit(nextItem.id);\r\n                      }\r\n                    });\r\n              }\r\n\r\n              if (activeItem) {\r\n                activeItem.hidden.emit();\r\n                this.nav.hidden.emit(activeItem.id);\r\n              }\r\n            });\r\n      } else {\r\n        this._updateActivePane();\r\n      }\r\n      });\r\n  }\r\n\r\n  private _updateActivePane() {\r\n    this._activePane = this._getActivePane();\r\n    this._activePane ?.elRef.nativeElement.classList.add('show');\r\n    this._activePane ?.elRef.nativeElement.classList.add('active');\r\n  }\r\n\r\n  private _getPaneForItem(item: NgbNavItem | null) {\r\n    return this._panes && this._panes.find(pane => pane.item === item) || null;\r\n  }\r\n\r\n  private _getActivePane(): NgbNavPane | null {\r\n    return this._panes && this._panes.find(pane => pane.item.active) || null;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbNav, NgbNavContent, NgbNavItem, NgbNavLink} from './nav';\r\nimport {NgbNavOutlet, NgbNavPane} from './nav-outlet';\r\n\r\nexport {NgbNav, NgbNavContent, NgbNavContentContext, NgbNavItem, NgbNavLink, NgbNavChangeEvent} from './nav';\r\nexport {NgbNavOutlet, NgbNavPane} from './nav-outlet';\r\nexport {NgbNavConfig} from './nav-config';\r\n\r\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane];\r\n\r\n@NgModule({declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule]})\r\nexport class NgbNavModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the paginations used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbPaginationConfig {\r\n  disabled = false;\r\n  boundaryLinks = false;\r\n  directionLinks = true;\r\n  ellipses = true;\r\n  maxSize = 0;\r\n  pageSize = 10;\r\n  rotate = false;\r\n  size: 'sm' | 'lg';\r\n}\r\n","import {\r\n  Component,\r\n  ContentChild,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  SimpleChanges,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport {getValueInRange, isNumber} from '../util/util';\r\nimport {NgbPaginationConfig} from './pagination-config';\r\n\r\n/**\r\n * A context for the\r\n * * `NgbPaginationFirst`\r\n * * `NgbPaginationPrevious`\r\n * * `NgbPaginationNext`\r\n * * `NgbPaginationLast`\r\n * * `NgbPaginationEllipsis`\r\n * * `NgbPaginationPages`\r\n *\r\n * link templates in case you want to override one.\r\n *\r\n * @since 4.1.0\r\n */\r\nexport interface NgbPaginationLinkContext {\r\n  /**\r\n   * Page number displayed by the current link.\r\n   */\r\n  currentPage: number;\r\n\r\n  /**\r\n   * If `true`, the current link is disabled.\r\n   */\r\n  disabled: boolean;\r\n}\r\n\r\n/**\r\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\r\n *\r\n * Extends `NgbPaginationLinkContext`.\r\n *\r\n * @since 4.1.0\r\n */\r\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\r\n  /**\r\n   * The page number, displayed by the current page link.\r\n   */\r\n  $implicit: number;\r\n}\r\n\r\n/**\r\n * A context for the `NgbPaginationPages` pages template in case you want to override\r\n * the way all pages are displayed.\r\n *\r\n * @since 9.1.0\r\n */\r\nexport interface NgbPaginationPagesContext {\r\n  /**\r\n   * The currently selected page number.\r\n   */\r\n  $implicit: number;\r\n\r\n  /**\r\n   * If `true`, pagination is disabled.\r\n   */\r\n  disabled: boolean;\r\n\r\n  /**\r\n   * Pages numbers that should be rendered starting with 1.\r\n   */\r\n  pages: number[];\r\n}\r\n\r\n/**\r\n * A directive to match the 'ellipsis' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({selector: 'ng-template[ngbPaginationEllipsis]'})\r\nexport class NgbPaginationEllipsis {\r\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\r\n}\r\n\r\n/**\r\n * A directive to match the 'first' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({selector: 'ng-template[ngbPaginationFirst]'})\r\nexport class NgbPaginationFirst {\r\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\r\n}\r\n\r\n/**\r\n * A directive to match the 'last' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({selector: 'ng-template[ngbPaginationLast]'})\r\nexport class NgbPaginationLast {\r\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\r\n}\r\n\r\n/**\r\n * A directive to match the 'next' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({selector: 'ng-template[ngbPaginationNext]'})\r\nexport class NgbPaginationNext {\r\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\r\n}\r\n\r\n/**\r\n * A directive to match the page 'number' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({selector: 'ng-template[ngbPaginationNumber]'})\r\nexport class NgbPaginationNumber {\r\n  constructor(public templateRef: TemplateRef<NgbPaginationNumberContext>) {}\r\n}\r\n\r\n/**\r\n * A directive to match the 'previous' link template\r\n *\r\n * @since 4.1.0\r\n */\r\n@Directive({selector: 'ng-template[ngbPaginationPrevious]'})\r\nexport class NgbPaginationPrevious {\r\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\r\n}\r\n\r\n/**\r\n * A directive to match the 'pages' whole content\r\n *\r\n * @since 9.1.0\r\n */\r\n@Directive({selector: 'ng-template[ngbPaginationPages]'})\r\nexport class NgbPaginationPages {\r\n  constructor(public templateRef: TemplateRef<NgbPaginationPagesContext>) {}\r\n}\r\n\r\n/**\r\n * A component that displays page numbers and allows to customize them in several ways.\r\n */\r\n@Component({\r\n  selector: 'ngb-pagination',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {'role': 'navigation'},\r\n  template: `\r\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\r\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\r\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\r\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\r\n    <ng-template #ellipsis>...</ng-template>\r\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\r\n      {{ page }}\r\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\r\n    </ng-template>\r\n    <ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\r\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\r\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\r\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\r\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\r\n                      [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\r\n        </a>\r\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\"\r\n          [attr.tabindex]=\"disabled ? '-1' : null\" [attr.aria-disabled]=\"disabled ? 'true' : null\">\r\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\r\n                      [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\r\n        </a>\r\n      </li>\r\n    </ng-template>\r\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\r\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\r\n        [class.disabled]=\"previousDisabled()\">\r\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\r\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\r\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\r\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\r\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\r\n        </a>\r\n      </li>\r\n\r\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\r\n        [class.disabled]=\"previousDisabled()\">\r\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\r\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\r\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\r\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\r\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\r\n        </a>\r\n      </li>\r\n      <ng-template\r\n        [ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\r\n        [ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\r\n      >\r\n      </ng-template>\r\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\r\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\r\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\r\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\r\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\r\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\r\n        </a>\r\n      </li>\r\n\r\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\r\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\r\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\r\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\r\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\r\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  `\r\n})\r\nexport class NgbPagination implements OnChanges {\r\n  pageCount = 0;\r\n  pages: number[] = [];\r\n\r\n  @ContentChild(NgbPaginationEllipsis, {static: false}) tplEllipsis: NgbPaginationEllipsis;\r\n  @ContentChild(NgbPaginationFirst, {static: false}) tplFirst: NgbPaginationFirst;\r\n  @ContentChild(NgbPaginationLast, {static: false}) tplLast: NgbPaginationLast;\r\n  @ContentChild(NgbPaginationNext, {static: false}) tplNext: NgbPaginationNext;\r\n  @ContentChild(NgbPaginationNumber, {static: false}) tplNumber: NgbPaginationNumber;\r\n  @ContentChild(NgbPaginationPrevious, {static: false}) tplPrevious: NgbPaginationPrevious;\r\n  @ContentChild(NgbPaginationPages, {static: false}) tplPages: NgbPaginationPages;\r\n\r\n  /**\r\n   * If `true`, pagination links will be disabled.\r\n   */\r\n  @Input() disabled: boolean;\r\n\r\n  /**\r\n   * If `true`, the \"First\" and \"Last\" page links are shown.\r\n   */\r\n  @Input() boundaryLinks: boolean;\r\n\r\n  /**\r\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\r\n   */\r\n  @Input() directionLinks: boolean;\r\n\r\n  /**\r\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\r\n   */\r\n  @Input() ellipses: boolean;\r\n\r\n  /**\r\n   * Whether to rotate pages when `maxSize` > number of pages.\r\n   *\r\n   * The current page always stays in the middle if `true`.\r\n   */\r\n  @Input() rotate: boolean;\r\n\r\n  /**\r\n   *  The number of items in your paginated collection.\r\n   *\r\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\r\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\r\n   *  you'll end up with 5 pages.\r\n   */\r\n  @Input() collectionSize: number;\r\n\r\n  /**\r\n   *  The maximum number of pages to display.\r\n   */\r\n  @Input() maxSize: number;\r\n\r\n  /**\r\n   *  The current page.\r\n   *\r\n   *  Page numbers start with `1`.\r\n   */\r\n  @Input() page = 1;\r\n\r\n  /**\r\n   *  The number of items per page.\r\n   */\r\n  @Input() pageSize: number;\r\n\r\n  /**\r\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\r\n   *\r\n   *  Event payload is the number of the newly selected page.\r\n   *\r\n   *  Page numbers start with `1`.\r\n   */\r\n  @Output() pageChange = new EventEmitter<number>(true);\r\n\r\n  /**\r\n   * The pagination display size.\r\n   *\r\n   * Bootstrap currently supports small and large sizes.\r\n   */\r\n  @Input() size: 'sm' | 'lg';\r\n\r\n  constructor(config: NgbPaginationConfig) {\r\n    this.disabled = config.disabled;\r\n    this.boundaryLinks = config.boundaryLinks;\r\n    this.directionLinks = config.directionLinks;\r\n    this.ellipses = config.ellipses;\r\n    this.maxSize = config.maxSize;\r\n    this.pageSize = config.pageSize;\r\n    this.rotate = config.rotate;\r\n    this.size = config.size;\r\n  }\r\n\r\n  hasPrevious(): boolean { return this.page > 1; }\r\n\r\n  hasNext(): boolean { return this.page < this.pageCount; }\r\n\r\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\r\n\r\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\r\n\r\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\r\n\r\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\r\n\r\n  /**\r\n   * Appends ellipses and first/last page number to the displayed pages\r\n   */\r\n  private _applyEllipses(start: number, end: number) {\r\n    if (this.ellipses) {\r\n      if (start > 0) {\r\n        // The first page will always be included. If the displayed range\r\n        // starts after the third page, then add ellipsis. But if the range\r\n        // starts on the third page, then add the second page instead of\r\n        // an ellipsis, because the ellipsis would only hide a single page.\r\n        if (start > 2) {\r\n          this.pages.unshift(-1);\r\n        } else if (start === 2) {\r\n          this.pages.unshift(2);\r\n        }\r\n        this.pages.unshift(1);\r\n      }\r\n      if (end < this.pageCount) {\r\n        // The last page will always be included. If the displayed range\r\n        // ends before the third-last page, then add ellipsis. But if the range\r\n        // ends on third-last page, then add the second-last page instead of\r\n        // an ellipsis, because the ellipsis would only hide a single page.\r\n        if (end < (this.pageCount - 2)) {\r\n          this.pages.push(-1);\r\n        } else if (end === (this.pageCount - 2)) {\r\n          this.pages.push(this.pageCount - 1);\r\n        }\r\n        this.pages.push(this.pageCount);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rotates page numbers based on maxSize items visible.\r\n   * Currently selected page stays in the middle:\r\n   *\r\n   * Ex. for selected page = 6:\r\n   * [5,*6*,7] for maxSize = 3\r\n   * [4,5,*6*,7] for maxSize = 4\r\n   */\r\n  private _applyRotation(): [number, number] {\r\n    let start = 0;\r\n    let end = this.pageCount;\r\n    let leftOffset = Math.floor(this.maxSize / 2);\r\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\r\n\r\n    if (this.page <= leftOffset) {\r\n      // very beginning, no rotation -> [0..maxSize]\r\n      end = this.maxSize;\r\n    } else if (this.pageCount - this.page < leftOffset) {\r\n      // very end, no rotation -> [len-maxSize..len]\r\n      start = this.pageCount - this.maxSize;\r\n    } else {\r\n      // rotate\r\n      start = this.page - leftOffset - 1;\r\n      end = this.page + rightOffset;\r\n    }\r\n\r\n    return [start, end];\r\n  }\r\n\r\n  /**\r\n   * Paginates page numbers based on maxSize items per page.\r\n   */\r\n  private _applyPagination(): [number, number] {\r\n    let page = Math.ceil(this.page / this.maxSize) - 1;\r\n    let start = page * this.maxSize;\r\n    let end = start + this.maxSize;\r\n\r\n    return [start, end];\r\n  }\r\n\r\n  private _setPageInRange(newPageNo) {\r\n    const prevPageNo = this.page;\r\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\r\n\r\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\r\n      this.pageChange.emit(this.page);\r\n    }\r\n  }\r\n\r\n  private _updatePages(newPage: number) {\r\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\r\n\r\n    if (!isNumber(this.pageCount)) {\r\n      this.pageCount = 0;\r\n    }\r\n\r\n    // fill-in model needed to render pages\r\n    this.pages.length = 0;\r\n    for (let i = 1; i <= this.pageCount; i++) {\r\n      this.pages.push(i);\r\n    }\r\n\r\n    // set page within 1..max range\r\n    this._setPageInRange(newPage);\r\n\r\n    // apply maxSize if necessary\r\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\r\n      let start = 0;\r\n      let end = this.pageCount;\r\n\r\n      // either paginating or rotating page numbers\r\n      if (this.rotate) {\r\n        [start, end] = this._applyRotation();\r\n      } else {\r\n        [start, end] = this._applyPagination();\r\n      }\r\n\r\n      this.pages = this.pages.slice(start, end);\r\n\r\n      // adding ellipses\r\n      this._applyEllipses(start, end);\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {\r\n  NgbPagination,\r\n  NgbPaginationEllipsis,\r\n  NgbPaginationFirst,\r\n  NgbPaginationLast,\r\n  NgbPaginationNext,\r\n  NgbPaginationNumber,\r\n  NgbPaginationPrevious,\r\n  NgbPaginationPages\r\n} from './pagination';\r\n\r\nexport {\r\n  NgbPagination,\r\n  NgbPaginationEllipsis,\r\n  NgbPaginationFirst,\r\n  NgbPaginationLast,\r\n  NgbPaginationNext,\r\n  NgbPaginationNumber,\r\n  NgbPaginationPrevious,\r\n  NgbPaginationPages\r\n} from './pagination';\r\nexport {NgbPaginationConfig} from './pagination-config';\r\n\r\nconst DIRECTIVES = [\r\n  NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\r\n  NgbPaginationPrevious, NgbPaginationPages\r\n];\r\n\r\n@NgModule({declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule]})\r\nexport class NgbPaginationModule {\r\n}\r\n","import {Observable, merge} from 'rxjs';\r\nimport {share, filter, delay, map} from 'rxjs/operators';\r\nimport {Renderer2} from '@angular/core';\r\n\r\nexport class Trigger {\r\n  constructor(public open: string, public close?: string) {\r\n    if (!close) {\r\n      this.close = open;\r\n    }\r\n  }\r\n\r\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\r\n}\r\n\r\nconst DEFAULT_ALIASES = {\r\n  'hover': ['mouseenter', 'mouseleave'],\r\n  'focus': ['focusin', 'focusout'],\r\n};\r\n\r\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\r\n  const trimmedTriggers = (triggers || '').trim();\r\n\r\n  if (trimmedTriggers.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\r\n    let alias = aliases[triggerPair[0]] || triggerPair;\r\n    return new Trigger(alias[0], alias[1]);\r\n  });\r\n\r\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\r\n\r\n  if (manualTriggers.length > 1) {\r\n    throw 'Triggers parse error: only one manual trigger is allowed';\r\n  }\r\n\r\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\r\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\r\n  }\r\n\r\n  return parsedTriggers;\r\n}\r\n\r\nexport function observeTriggers(\r\n    renderer: Renderer2, nativeElement: HTMLElement, triggers: Trigger[], isOpenedFn: () => boolean) {\r\n  return new Observable<boolean>(subscriber => {\r\n    const listeners: Function[] = [];\r\n    const openFn = () => subscriber.next(true);\r\n    const closeFn = () => subscriber.next(false);\r\n    const toggleFn = () => subscriber.next(!isOpenedFn());\r\n\r\n    triggers.forEach((trigger: Trigger) => {\r\n      if (trigger.open === trigger.close) {\r\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\r\n      } else {\r\n        listeners.push(\r\n            renderer.listen(nativeElement, trigger.open, openFn),\r\n            renderer.listen(nativeElement, trigger.close !, closeFn));\r\n      }\r\n    });\r\n\r\n    return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\r\n  });\r\n}\r\n\r\nconst delayOrNoop = <T>(time: number) => time > 0 ? delay<T>(time) : (a: Observable<T>) => a;\r\n\r\nexport function triggerDelay(openDelay: number, closeDelay: number, isOpenedFn: () => boolean) {\r\n  return (input$: Observable<boolean>) => {\r\n    let pending: {open: boolean} | null = null;\r\n    const filteredInput$ = input$.pipe(\r\n        map(open => ({open})), filter(event => {\r\n          const currentlyOpen = isOpenedFn();\r\n          if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\r\n            pending = event;\r\n            return true;\r\n          }\r\n          if (pending && pending.open !== event.open) {\r\n            pending = null;\r\n          }\r\n          return false;\r\n        }),\r\n        share());\r\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\r\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\r\n    return merge(delayedOpen$, delayedClose$)\r\n        .pipe(\r\n            filter(event => {\r\n              if (event === pending) {\r\n                pending = null;\r\n                return event.open !== isOpenedFn();\r\n              }\r\n              return false;\r\n            }),\r\n            map(event => event.open));\r\n  };\r\n}\r\n\r\nexport function listenToTriggers(\r\n    renderer: Renderer2, nativeElement: HTMLElement, triggers: string, isOpenedFn: () => boolean, openFn: Function,\r\n    closeFn: Function, openDelay = 0, closeDelay = 0) {\r\n  const parsedTriggers = parseTriggers(triggers);\r\n\r\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\r\n    return () => {};\r\n  }\r\n\r\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\r\n                           .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\r\n                           .subscribe(open => (open ? openFn() : closeFn()));\r\n\r\n  return () => subscription.unsubscribe();\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {PlacementArray} from '../util/positioning';\r\nimport {NgbConfig} from '../ngb-config';\r\n\r\n/**\r\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the popovers used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbPopoverConfig {\r\n  autoClose: boolean | 'inside' | 'outside' = true;\r\n  placement: PlacementArray = 'auto';\r\n  triggers = 'click';\r\n  container: string;\r\n  disablePopover = false;\r\n  popoverClass: string;\r\n  openDelay = 0;\r\n  closeDelay = 0;\r\n\r\n  private _animation: boolean;\r\n\r\n  constructor(private _ngbConfig: NgbConfig) {}\r\n\r\n  get animation(): boolean { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\r\n  set animation(animation: boolean) { this._animation = animation; }\r\n}\r\n","import {\r\n  Component,\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy,\r\n  OnChanges,\r\n  Inject,\r\n  Injector,\r\n  Renderer2,\r\n  ComponentRef,\r\n  ElementRef,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  ComponentFactoryResolver,\r\n  NgZone,\r\n  SimpleChanges,\r\n  ViewEncapsulation,\r\n  ChangeDetectorRef,\r\n  ApplicationRef\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nimport {listenToTriggers} from '../util/triggers';\r\nimport {ngbAutoClose} from '../util/autoclose';\r\nimport {positionElements, PlacementArray} from '../util/positioning';\r\nimport {PopupService} from '../util/popup';\r\n\r\nimport {NgbPopoverConfig} from './popover-config';\r\n\r\nlet nextId = 0;\r\n\r\n@Component({\r\n  selector: 'ngb-popover-window',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\r\n    '[class.fade]': 'animation',\r\n    'role': 'tooltip',\r\n    '[id]': 'id'\r\n  },\r\n  template: `\r\n    <div class=\"arrow\"></div>\r\n    <h3 class=\"popover-header\" *ngIf=\"title\">\r\n      <ng-template #simpleTitle>{{title}}</ng-template>\r\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\r\n    </h3>\r\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\r\n  styleUrls: ['./popover.scss']\r\n})\r\nexport class NgbPopoverWindow {\r\n  @Input() animation: boolean;\r\n  @Input() title: string | TemplateRef<any>| null | undefined;\r\n  @Input() id: string;\r\n  @Input() popoverClass: string;\r\n  @Input() context: any;\r\n\r\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\r\n}\r\n\r\n/**\r\n * A lightweight and extensible directive for fancy popover creation.\r\n */\r\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\r\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\r\n  static ngAcceptInputType_autoClose: boolean | string;\r\n\r\n  /**\r\n   * If `true`, popover opening and closing will be animated.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Input() animation: boolean;\r\n\r\n  /**\r\n   * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\r\n   *\r\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\r\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\r\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\r\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\r\n   * as well as `Escape` presses\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  @Input() autoClose: boolean | 'inside' | 'outside';\r\n\r\n  /**\r\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\r\n   *\r\n   * If the title and the content are falsy, the popover won't open.\r\n   */\r\n  @Input() ngbPopover: string | TemplateRef<any>| null | undefined;\r\n\r\n  /**\r\n   * The title of the popover.\r\n   *\r\n   * If the title and the content are falsy, the popover won't open.\r\n   */\r\n  @Input() popoverTitle: string | TemplateRef<any>| null | undefined;\r\n\r\n  /**\r\n   * The preferred placement of the popover.\r\n   *\r\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\r\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\r\n   * `\"right-bottom\"`\r\n   *\r\n   * Accepts an array of strings or a string with space separated possible values.\r\n   *\r\n   * The default order of preference is `\"auto\"` (same as the sequence above).\r\n   *\r\n   * Please see the [positioning overview](#/positioning) for more details.\r\n   */\r\n  @Input() placement: PlacementArray;\r\n\r\n  /**\r\n   * Specifies events that should trigger the tooltip.\r\n   *\r\n   * Supports a space separated list of event names.\r\n   * For more details see the [triggers demo](#/components/popover/examples#triggers).\r\n   */\r\n  @Input() triggers: string;\r\n\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   *\r\n   * Currently only supports `body`.\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * If `true`, popover is disabled and won't be displayed.\r\n   *\r\n   * @since 1.1.0\r\n   */\r\n  @Input() disablePopover: boolean;\r\n\r\n  /**\r\n   * An optional class applied to the popover window element.\r\n   *\r\n   * @since 2.2.0\r\n   */\r\n  @Input() popoverClass: string;\r\n\r\n  /**\r\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  @Input() openDelay: number;\r\n\r\n  /**\r\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  @Input() closeDelay: number;\r\n\r\n  /**\r\n   * An event emitted when the popover opening animation has finished. Contains no payload.\r\n   */\r\n  @Output() shown = new EventEmitter<void>();\r\n\r\n  /**\r\n   * An event emitted when the popover closing animation has finished. Contains no payload.\r\n   *\r\n   * At this point popover is not in the DOM anymore.\r\n   */\r\n  @Output() hidden = new EventEmitter<void>();\r\n\r\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\r\n  private _popupService: PopupService<NgbPopoverWindow>;\r\n  private _windowRef: ComponentRef<NgbPopoverWindow>| null = null;\r\n  private _unregisterListenersFn;\r\n  private _zoneSubscription: any;\r\n  private _isDisabled(): boolean {\r\n    if (this.disablePopover) {\r\n      return true;\r\n    }\r\n    if (!this.ngbPopover && !this.popoverTitle) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  constructor(\r\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\r\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\r\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\r\n      applicationRef: ApplicationRef) {\r\n    this.animation = config.animation;\r\n    this.autoClose = config.autoClose;\r\n    this.placement = config.placement;\r\n    this.triggers = config.triggers;\r\n    this.container = config.container;\r\n    this.disablePopover = config.disablePopover;\r\n    this.popoverClass = config.popoverClass;\r\n    this.openDelay = config.openDelay;\r\n    this.closeDelay = config.closeDelay;\r\n    this._popupService = new PopupService<NgbPopoverWindow>(\r\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver,\r\n        applicationRef);\r\n\r\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\r\n      if (this._windowRef) {\r\n        positionElements(\r\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\r\n            this.container === 'body', 'bs-popover');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Opens the popover.\r\n   *\r\n   * This is considered to be a \"manual\" triggering.\r\n   * The `context` is an optional value to be injected into the popover template when it is created.\r\n   */\r\n  open(context?: any) {\r\n    if (!this._windowRef && !this._isDisabled()) {\r\n      // this type assertion is safe because otherwise _isDisabled would return true\r\n      const {windowRef, transition$} =\r\n          this._popupService.open(this.ngbPopover as(string | TemplateRef<any>), context, this.animation);\r\n      this._windowRef = windowRef;\r\n      this._windowRef.instance.animation = this.animation;\r\n      this._windowRef.instance.title = this.popoverTitle;\r\n      this._windowRef.instance.context = context;\r\n      this._windowRef.instance.popoverClass = this.popoverClass;\r\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\r\n\r\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\r\n\r\n      if (this.container === 'body') {\r\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\r\n      }\r\n\r\n      // We need to detect changes, because we don't know where .open() might be called from.\r\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\r\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\r\n      this._windowRef.changeDetectorRef.detectChanges();\r\n\r\n      // We need to mark for check, because popover won't work inside the OnPush component.\r\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\r\n      // inside the template of an OnPush component and we change the popover from\r\n      // open -> closed, the expression in question won't be updated unless we explicitly\r\n      // mark the parent component to be checked.\r\n      this._windowRef.changeDetectorRef.markForCheck();\r\n\r\n      ngbAutoClose(\r\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\r\n          [this._windowRef.location.nativeElement]);\r\n\r\n      transition$.subscribe(() => this.shown.emit());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the popover.\r\n   *\r\n   * This is considered to be a \"manual\" triggering of the popover.\r\n   */\r\n  close() {\r\n    if (this._windowRef) {\r\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\r\n      this._popupService.close(this.animation).subscribe(() => {\r\n        this._windowRef = null;\r\n        this.hidden.emit();\r\n        this._changeDetector.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the popover.\r\n   *\r\n   * This is considered to be a \"manual\" triggering of the popover.\r\n   */\r\n  toggle(): void {\r\n    if (this._windowRef) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns `true`, if the popover is currently shown.\r\n   */\r\n  isOpen(): boolean { return this._windowRef != null; }\r\n\r\n  ngOnInit() {\r\n    this._unregisterListenersFn = listenToTriggers(\r\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\r\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\r\n  }\r\n\r\n  ngOnChanges({ngbPopover, popoverTitle, disablePopover, popoverClass}: SimpleChanges) {\r\n    if (popoverClass && this.isOpen()) {\r\n      this._windowRef !.instance.popoverClass = popoverClass.currentValue;\r\n    }\r\n    // close popover if title and content become empty, or disablePopover set to true\r\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\r\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\r\n    if (this._unregisterListenersFn) {\r\n      this._unregisterListenersFn();\r\n    }\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {NgbPopover, NgbPopoverWindow} from './popover';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nexport {NgbPopover} from './popover';\r\nexport {NgbPopoverConfig} from './popover-config';\r\nexport {Placement} from '../util/positioning';\r\n\r\n@NgModule({\r\n  declarations: [NgbPopover, NgbPopoverWindow],\r\n  exports: [NgbPopover],\r\n  imports: [CommonModule],\r\n  entryComponents: [NgbPopoverWindow]\r\n})\r\nexport class NgbPopoverModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the progress bars used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbProgressbarConfig {\r\n  max = 100;\r\n  animated = false;\r\n  striped = false;\r\n  textType: string;\r\n  type: string;\r\n  showValue = false;\r\n  height: string;\r\n}\r\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation, HostBinding} from '@angular/core';\r\nimport {getValueInRange, isNumber} from '../util/util';\r\nimport {NgbProgressbarConfig} from './progressbar-config';\r\n\r\n/**\r\n * A directive that provides feedback on the progress of a workflow or an action.\r\n */\r\n@Component({\r\n  selector: 'ngb-progressbar',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {class: 'progress'},\r\n  template: `\r\n    <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\r\n    {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\"\r\n    role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\r\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\r\n      <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getValue() / max | percent}}</span><ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class NgbProgressbar {\r\n  private _max: number;\r\n\r\n  /**\r\n   * The maximal value to be displayed in the progress bar.\r\n   *\r\n   * Should be a positive number. Will default to 100 otherwise.\r\n   */\r\n  @Input()\r\n  set max(max: number) {\r\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\r\n  }\r\n\r\n  get max(): number { return this._max; }\r\n\r\n  /**\r\n   * If `true`, the stripes on the progress bar are animated.\r\n   *\r\n   * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\r\n   */\r\n  @Input() animated: boolean;\r\n\r\n  /**\r\n   * If `true`, the progress bars will be displayed as striped.\r\n   */\r\n  @Input() striped: boolean;\r\n\r\n  /**\r\n   * If `true`, the current percentage will be shown in the `xx%` format.\r\n   */\r\n  @Input() showValue: boolean;\r\n\r\n  /**\r\n   * Optional text variant type of the progress bar.\r\n   *\r\n   * Supports types based on Bootstrap background color variants, like:\r\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\r\n   *\r\n   * @since 5.2.0\r\n   */\r\n  @Input() textType: string;\r\n\r\n  /**\r\n   * The type of the progress bar.\r\n   *\r\n   * Supports types based on Bootstrap background color variants, like:\r\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\r\n   */\r\n  @Input() type: string;\r\n\r\n  /**\r\n   * The current value for the progress bar.\r\n   *\r\n   * Should be in the `[0, max]` range.\r\n   */\r\n  @Input() value = 0;\r\n\r\n  /**\r\n   * The height of the progress bar.\r\n   *\r\n   * Accepts any valid CSS height values, ex. `\"2rem\"`\r\n   */\r\n  @Input() @HostBinding('style.height') height: string;\r\n\r\n  constructor(config: NgbProgressbarConfig) {\r\n    this.max = config.max;\r\n    this.animated = config.animated;\r\n    this.striped = config.striped;\r\n    this.textType = config.textType;\r\n    this.type = config.type;\r\n    this.showValue = config.showValue;\r\n    this.height = config.height;\r\n  }\r\n\r\n  getValue() { return getValueInRange(this.value, this.max); }\r\n\r\n  getPercentValue() { return 100 * this.getValue() / this.max; }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbProgressbar} from './progressbar';\r\n\r\nexport {NgbProgressbar} from './progressbar';\r\nexport {NgbProgressbarConfig} from './progressbar-config';\r\n\r\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\r\nexport class NgbProgressbarModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the ratings used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbRatingConfig {\r\n  max = 10;\r\n  readonly = false;\r\n  resettable = false;\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {NgbRatingConfig} from './rating-config';\r\nimport {getValueInRange} from '../util/util';\r\nimport {Key} from '../util/key';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\n/**\r\n * The context for the custom star display template defined in the `starTemplate`.\r\n */\r\nexport interface StarTemplateContext {\r\n  /**\r\n   * The star fill percentage, an integer in the `[0, 100]` range.\r\n   */\r\n  fill: number;\r\n\r\n  /**\r\n   * Index of the star, starts with `0`.\r\n   */\r\n  index: number;\r\n}\r\n\r\n/**\r\n * A directive that helps visualising and interacting with a star rating bar.\r\n */\r\n@Component({\r\n  selector: 'ngb-rating',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    'class': 'd-inline-flex',\r\n    '[tabindex]': 'disabled ? -1 : 0',\r\n    'role': 'slider',\r\n    'aria-valuemin': '0',\r\n    '[attr.aria-valuemax]': 'max',\r\n    '[attr.aria-valuenow]': 'nextRate',\r\n    '[attr.aria-valuetext]': 'ariaValueText()',\r\n    '[attr.aria-disabled]': 'readonly ? true : null',\r\n    '(blur)': 'handleBlur()',\r\n    '(keydown)': 'handleKeyDown($event)',\r\n    '(mouseleave)': 'reset()'\r\n  },\r\n  template: `\r\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\r\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\r\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\r\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"isInteractive() ? 'pointer' : 'default'\">\r\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\r\n        </ng-template>\r\n      </span>\r\n    </ng-template>\r\n  `,\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRating), multi: true}]\r\n})\r\nexport class NgbRating implements ControlValueAccessor,\r\n    OnInit, OnChanges {\r\n  contexts: StarTemplateContext[] = [];\r\n  disabled = false;\r\n  nextRate: number;\r\n\r\n\r\n  /**\r\n   * The maximal rating that can be given.\r\n   */\r\n  @Input() max: number;\r\n\r\n  /**\r\n   * The current rating. Could be a decimal value like `3.75`.\r\n   */\r\n  @Input() rate: number;\r\n\r\n  /**\r\n   * If `true`, the rating can't be changed.\r\n   */\r\n  @Input() readonly: boolean;\r\n\r\n  /**\r\n   * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\r\n   */\r\n  @Input() resettable: boolean;\r\n\r\n  /**\r\n   * The template to override the way each star is displayed.\r\n   *\r\n   * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\r\n   */\r\n  @Input() starTemplate: TemplateRef<StarTemplateContext>;\r\n  @ContentChild(TemplateRef, {static: false}) starTemplateFromContent: TemplateRef<StarTemplateContext>;\r\n\r\n  /**\r\n   * An event emitted when the user is hovering over a given rating.\r\n   *\r\n   * Event payload equals to the rating being hovered over.\r\n   */\r\n  @Output() hover = new EventEmitter<number>();\r\n\r\n  /**\r\n   * An event emitted when the user stops hovering over a given rating.\r\n   *\r\n   * Event payload equals to the rating of the last item being hovered over.\r\n   */\r\n  @Output() leave = new EventEmitter<number>();\r\n\r\n  /**\r\n   * An event emitted when the user selects a new rating.\r\n   *\r\n   * Event payload equals to the newly selected rating.\r\n   */\r\n  @Output() rateChange = new EventEmitter<number>(true);\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\r\n    this.max = config.max;\r\n    this.readonly = config.readonly;\r\n  }\r\n\r\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\r\n\r\n  isInteractive(): boolean { return !this.readonly && !this.disabled; }\r\n\r\n  enter(value: number): void {\r\n    if (this.isInteractive()) {\r\n      this._updateState(value);\r\n    }\r\n    this.hover.emit(value);\r\n  }\r\n\r\n  handleBlur() { this.onTouched(); }\r\n\r\n  handleClick(value: number) {\r\n    if (this.isInteractive()) {\r\n      this.update(this.resettable && this.rate === value ? 0 : value);\r\n    }\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    // tslint:disable-next-line:deprecation\r\n    switch (event.which) {\r\n      case Key.ArrowDown:\r\n      case Key.ArrowLeft:\r\n        this.update(this.rate - 1);\r\n        break;\r\n      case Key.ArrowUp:\r\n      case Key.ArrowRight:\r\n        this.update(this.rate + 1);\r\n        break;\r\n      case Key.Home:\r\n        this.update(0);\r\n        break;\r\n      case Key.End:\r\n        this.update(this.max);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    // note 'return' in default case\r\n    event.preventDefault();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['rate']) {\r\n      this.update(this.rate);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\r\n    this._updateState(this.rate);\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\r\n\r\n  reset(): void {\r\n    this.leave.emit(this.nextRate);\r\n    this._updateState(this.rate);\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\r\n\r\n  update(value: number, internalChange = true): void {\r\n    const newRate = getValueInRange(value, this.max, 0);\r\n    if (this.isInteractive() && this.rate !== newRate) {\r\n      this.rate = newRate;\r\n      this.rateChange.emit(this.rate);\r\n    }\r\n    if (internalChange) {\r\n      this.onChange(this.rate);\r\n      this.onTouched();\r\n    }\r\n    this._updateState(this.rate);\r\n  }\r\n\r\n  writeValue(value) {\r\n    this.update(value, false);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private _updateState(nextValue: number) {\r\n    this.nextRate = nextValue;\r\n    this.contexts.forEach(\r\n        (context, index) => context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100));\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbRating} from './rating';\r\n\r\nexport {NgbRating} from './rating';\r\nexport {NgbRatingConfig} from './rating-config';\r\n\r\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\r\nexport class NgbRatingModule {\r\n}\r\n","import {isNumber, toInteger} from '../util/util';\r\n\r\nexport class NgbTime {\r\n  hour: number;\r\n  minute: number;\r\n  second: number;\r\n\r\n  constructor(hour?: number, minute?: number, second?: number) {\r\n    this.hour = toInteger(hour);\r\n    this.minute = toInteger(minute);\r\n    this.second = toInteger(second);\r\n  }\r\n\r\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\r\n\r\n  updateHour(hour: number) {\r\n    if (isNumber(hour)) {\r\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\r\n    } else {\r\n      this.hour = NaN;\r\n    }\r\n  }\r\n\r\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\r\n\r\n  updateMinute(minute: number) {\r\n    if (isNumber(minute)) {\r\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\r\n      this.changeHour(Math.floor(minute / 60));\r\n    } else {\r\n      this.minute = NaN;\r\n    }\r\n  }\r\n\r\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\r\n\r\n  updateSecond(second: number) {\r\n    if (isNumber(second)) {\r\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\r\n      this.changeMinute(Math.floor(second / 60));\r\n    } else {\r\n      this.second = NaN;\r\n    }\r\n  }\r\n\r\n  isValid(checkSecs = true) {\r\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\r\n  }\r\n\r\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the timepickers used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbTimepickerConfig {\r\n  meridian = false;\r\n  spinners = true;\r\n  seconds = false;\r\n  hourStep = 1;\r\n  minuteStep = 1;\r\n  secondStep = 1;\r\n  disabled = false;\r\n  readonlyInputs = false;\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbTimeStruct} from './ngb-time-struct';\r\nimport {isInteger} from '../util/util';\r\n\r\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\r\n  return new NgbTimeStructAdapter();\r\n}\r\n\r\n/**\r\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\r\n * any provided user time model `T`, ex. a string, a native date, etc.\r\n *\r\n * The adapter is used **only** for conversion when binding timepicker to a form control,\r\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\r\n *\r\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\r\n *\r\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\r\n *\r\n * @since 2.2.0\r\n */\r\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\r\nexport abstract class NgbTimeAdapter<T> {\r\n  /**\r\n   * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\r\n   */\r\n  abstract fromModel(value: T | null): NgbTimeStruct | null;\r\n\r\n  /**\r\n   * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\r\n   */\r\n  abstract toModel(time: NgbTimeStruct | null): T | null;\r\n}\r\n\r\n@Injectable()\r\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\r\n  /**\r\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\r\n   */\r\n  fromModel(time: NgbTimeStruct | null): NgbTimeStruct | null {\r\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\r\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : <any>null} :\r\n        null;\r\n  }\r\n\r\n  /**\r\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\r\n   */\r\n  toModel(time: NgbTimeStruct | null): NgbTimeStruct | null {\r\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\r\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : <any>null} :\r\n        null;\r\n  }\r\n}\r\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\r\nimport {FormStyle, getLocaleDayPeriods, TranslationWidth} from '@angular/common';\r\n\r\nexport function NGB_TIMEPICKER_I18N_FACTORY(locale) {\r\n  return new NgbTimepickerI18nDefault(locale);\r\n}\r\n\r\n/**\r\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\r\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\r\n * as explained in the Angular i18n guide.\r\n */\r\n@Injectable({providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID]})\r\nexport abstract class NgbTimepickerI18n {\r\n  /**\r\n   * Returns the name for the period before midday.\r\n   */\r\n  abstract getMorningPeriod(): string;\r\n\r\n  /**\r\n   * Returns the name for the period after midday.\r\n   */\r\n  abstract getAfternoonPeriod(): string;\r\n}\r\n\r\n@Injectable()\r\nexport class NgbTimepickerI18nDefault extends NgbTimepickerI18n {\r\n  private _periods: Readonly<[string, string]>;\r\n\r\n  constructor(@Inject(LOCALE_ID) locale: string) {\r\n    super();\r\n\r\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\r\n  }\r\n\r\n  getMorningPeriod(): string { return this._periods[0]; }\r\n\r\n  getAfternoonPeriod(): string { return this._periods[1]; }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\nimport {isInteger, isNumber, padNumber, toInteger} from '../util/util';\r\nimport {NgbTime} from './ngb-time';\r\nimport {NgbTimepickerConfig} from './timepicker-config';\r\nimport {NgbTimeAdapter} from './ngb-time-adapter';\r\nimport {NgbTimepickerI18n} from './timepicker-i18n';\r\n\r\nconst FILTER_REGEX = /[^0-9]/g;\r\n\r\n/**\r\n * A directive that helps with wth picking hours, minutes and seconds.\r\n */\r\n@Component({\r\n  selector: 'ngb-timepicker',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./timepicker.scss'],\r\n  template: `\r\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\r\n      <div class=\"ngb-tp\">\r\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\r\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron ngb-tp-chevron\"></span>\r\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\r\n          </button>\r\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\r\n            [class.form-control-lg]=\"isLargeSize\"\r\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\r\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($any($event).target.value)\"\r\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\r\n            (blur)=\"handleBlur()\"\r\n            (input)=\"formatInput($any($event).target)\"\r\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\r\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\r\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\r\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"ngb-tp-spacer\">:</div>\r\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\r\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron ngb-tp-chevron\"></span>\r\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\r\n          </button>\r\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\r\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\r\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($any($event).target.value)\"\r\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\r\n            (blur)=\"handleBlur()\"\r\n            (input)=\"formatInput($any($event).target)\"\r\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\r\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\r\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\r\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\r\n          </button>\r\n        </div>\r\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\r\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\r\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron ngb-tp-chevron\"></span>\r\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\r\n          </button>\r\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\r\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\r\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($any($event).target.value)\"\r\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\r\n            (blur)=\"handleBlur()\"\r\n            (input)=\"formatInput($any($event).target)\"\r\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\r\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\r\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\r\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\r\n            [disabled]=\"disabled\">\r\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\r\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\r\n          </button>\r\n        </div>\r\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\r\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\r\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\r\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\r\n                  (click)=\"toggleMeridian()\">\r\n            <ng-container *ngIf=\"model && model.hour >= 12; else am\"\r\n                          i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\r\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n  `,\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTimepicker), multi: true}]\r\n})\r\nexport class NgbTimepicker implements ControlValueAccessor,\r\n    OnChanges {\r\n  static ngAcceptInputType_size: string;\r\n\r\n  disabled: boolean;\r\n  model: NgbTime;\r\n\r\n  private _hourStep: number;\r\n  private _minuteStep: number;\r\n  private _secondStep: number;\r\n\r\n  /**\r\n   * Whether to display 12H or 24H mode.\r\n   */\r\n  @Input() meridian: boolean;\r\n\r\n  /**\r\n   * If `true`, the spinners above and below inputs are visible.\r\n   */\r\n  @Input() spinners: boolean;\r\n\r\n  /**\r\n   * If `true`, it is possible to select seconds.\r\n   */\r\n  @Input() seconds: boolean;\r\n\r\n  /**\r\n   * The number of hours to add/subtract when clicking hour spinners.\r\n   */\r\n  @Input()\r\n  set hourStep(step: number) {\r\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\r\n  }\r\n\r\n  get hourStep(): number { return this._hourStep; }\r\n\r\n  /**\r\n   * The number of minutes to add/subtract when clicking minute spinners.\r\n   */\r\n  @Input()\r\n  set minuteStep(step: number) {\r\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\r\n  }\r\n\r\n  get minuteStep(): number { return this._minuteStep; }\r\n\r\n  /**\r\n   * The number of seconds to add/subtract when clicking second spinners.\r\n   */\r\n  @Input()\r\n  set secondStep(step: number) {\r\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\r\n  }\r\n\r\n  get secondStep(): number { return this._secondStep; }\r\n\r\n  /**\r\n   * If `true`, the timepicker is readonly and can't be changed.\r\n   */\r\n  @Input() readonlyInputs: boolean;\r\n\r\n  /**\r\n   * The size of inputs and buttons.\r\n   */\r\n  @Input() size: 'small' | 'medium' | 'large';\r\n\r\n  constructor(\r\n      private readonly _config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>,\r\n      private _cd: ChangeDetectorRef, public i18n: NgbTimepickerI18n) {\r\n    this.meridian = _config.meridian;\r\n    this.spinners = _config.spinners;\r\n    this.seconds = _config.seconds;\r\n    this.hourStep = _config.hourStep;\r\n    this.minuteStep = _config.minuteStep;\r\n    this.secondStep = _config.secondStep;\r\n    this.disabled = _config.disabled;\r\n    this.readonlyInputs = _config.readonlyInputs;\r\n    this.size = _config.size;\r\n  }\r\n\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  writeValue(value) {\r\n    const structValue = this._ngbTimeAdapter.fromModel(value);\r\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\r\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\r\n      this.model.second = 0;\r\n    }\r\n    this._cd.markForCheck();\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\r\n\r\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\r\n\r\n  changeHour(step: number) {\r\n    this.model.changeHour(step);\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  changeMinute(step: number) {\r\n    this.model.changeMinute(step);\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  changeSecond(step: number) {\r\n    this.model.changeSecond(step);\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  updateHour(newVal: string) {\r\n    const isPM = this.model.hour >= 12;\r\n    const enteredHour = toInteger(newVal);\r\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\r\n      this.model.updateHour(enteredHour + 12);\r\n    } else {\r\n      this.model.updateHour(enteredHour);\r\n    }\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  updateMinute(newVal: string) {\r\n    this.model.updateMinute(toInteger(newVal));\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  updateSecond(newVal: string) {\r\n    this.model.updateSecond(toInteger(newVal));\r\n    this.propagateModelChange();\r\n  }\r\n\r\n  toggleMeridian() {\r\n    if (this.meridian) {\r\n      this.changeHour(12);\r\n    }\r\n  }\r\n\r\n  formatInput(input: HTMLInputElement) { input.value = input.value.replace(FILTER_REGEX, ''); }\r\n\r\n  formatHour(value?: number) {\r\n    if (isNumber(value)) {\r\n      if (this.meridian) {\r\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\r\n      } else {\r\n        return padNumber(value % 24);\r\n      }\r\n    } else {\r\n      return padNumber(NaN);\r\n    }\r\n  }\r\n\r\n  formatMinSec(value?: number) { return padNumber(isNumber(value) ? value : NaN); }\r\n\r\n  handleBlur() { this.onTouched(); }\r\n\r\n  get isSmallSize(): boolean { return this.size === 'small'; }\r\n\r\n  get isLargeSize(): boolean { return this.size === 'large'; }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\r\n      this.model.second = 0;\r\n      this.propagateModelChange(false);\r\n    }\r\n  }\r\n\r\n  private propagateModelChange(touched = true) {\r\n    if (touched) {\r\n      this.onTouched();\r\n    }\r\n    if (this.model.isValid(this.seconds)) {\r\n      this.onChange(\r\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\r\n    } else {\r\n      this.onChange(this._ngbTimeAdapter.toModel(null));\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbTimepicker} from './timepicker';\r\n\r\nexport {NgbTimepicker} from './timepicker';\r\nexport {NgbTimepickerConfig} from './timepicker-config';\r\nexport {NgbTimeStruct} from './ngb-time-struct';\r\nexport {NgbTimeAdapter} from './ngb-time-adapter';\r\nexport {NgbTimepickerI18n} from './timepicker-i18n';\r\n\r\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\r\nexport class NgbTimepickerModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NgbConfig} from '../ngb-config';\r\n\r\n/**\r\n * Interface used to type all toast config options. See `NgbToastConfig`.\r\n *\r\n * @since 5.0.0\r\n */\r\nexport interface NgbToastOptions {\r\n  /**\r\n   * Specify if the toast component should emit the `hide()` output\r\n   * after a certain `delay` in ms.\r\n   */\r\n  autohide?: boolean;\r\n\r\n  /**\r\n   * Delay in ms after which the `hide()` output should be emitted.\r\n   */\r\n  delay?: number;\r\n\r\n  /**\r\n   * Type of aria-live attribute to be used.\r\n   *\r\n   * Could be one of these 2 values (as string):\r\n   * - `polite` (default)\r\n   * - `alert`\r\n   */\r\n  ariaLive?: 'polite' | 'alert';\r\n}\r\n\r\n/**\r\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\r\n * and customize the values of its properties in order to provide default values for all the toasts used in the\r\n * application.\r\n *\r\n * @since 5.0.0\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbToastConfig implements NgbToastOptions {\r\n  autohide = true;\r\n  delay = 500;\r\n  ariaLive: 'polite' | 'alert' = 'polite';\r\n\r\n  private _animation: boolean;\r\n\r\n  constructor(private _ngbConfig: NgbConfig) {}\r\n\r\n  get animation(): boolean { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\r\n  set animation(animation: boolean) { this._animation = animation; }\r\n}\r\n","import {NgbTransitionStartFn} from '../util/transition/ngbTransition';\r\nimport {reflow} from '../util/util';\r\n\r\nexport const ngbToastFadeInTransition: NgbTransitionStartFn = (element: HTMLElement, animation: true) => {\r\n  const {classList} = element;\r\n\r\n  if (!animation) {\r\n    classList.add('show');\r\n    return;\r\n  }\r\n\r\n  classList.remove('hide');\r\n  reflow(element);\r\n  classList.add('showing');\r\n\r\n  return () => {\r\n    classList.remove('showing');\r\n    classList.add('show');\r\n  };\r\n};\r\n\r\nexport const ngbToastFadeOutTransition: NgbTransitionStartFn = ({classList}: HTMLElement) => {\r\n  classList.remove('show');\r\n  return () => { classList.add('hide'); };\r\n};\r\n","import {\r\n  AfterContentInit,\r\n  Attribute,\r\n  Component,\r\n  ContentChild,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation,\r\n  ElementRef,\r\n  NgZone,\r\n} from '@angular/core';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {take} from 'rxjs/operators';\r\n\r\nimport {NgbToastConfig} from './toast-config';\r\nimport {ngbRunTransition} from '../util/transition/ngbTransition';\r\nimport {ngbToastFadeInTransition, ngbToastFadeOutTransition} from './toast-transition';\r\n\r\n\r\n/**\r\n * This directive allows the usage of HTML markup or other directives\r\n * inside of the toast's header.\r\n *\r\n * @since 5.0.0\r\n */\r\n@Directive({selector: '[ngbToastHeader]'})\r\nexport class NgbToastHeader {\r\n}\r\n\r\n/**\r\n * Toasts provide feedback messages as notifications to the user.\r\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\r\n *\r\n * @since 5.0.0\r\n */\r\n@Component({\r\n  selector: 'ngb-toast',\r\n  exportAs: 'ngbToast',\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    'role': 'alert',\r\n    '[attr.aria-live]': 'ariaLive',\r\n    'aria-atomic': 'true',\r\n    'class': 'toast',\r\n    '[class.fade]': 'animation',\r\n  },\r\n  template: `\r\n    <ng-template #headerTpl>\r\n      <strong class=\"mr-auto\">{{header}}</strong>\r\n    </ng-template>\r\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\r\n      <div class=\"toast-header\">\r\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    </ng-template>\r\n    <div class=\"toast-body\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./toast.scss']\r\n})\r\nexport class NgbToast implements AfterContentInit,\r\n    OnChanges {\r\n  /**\r\n   * If `true`, toast opening and closing will be animated.\r\n   *\r\n   * Animation is triggered only when the `.hide()` or `.show()` functions are called\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Input() animation: boolean;\r\n\r\n  private _timeoutID;\r\n\r\n  /**\r\n   * Delay after which the toast will hide (ms).\r\n   * default: `500` (ms) (inherited from NgbToastConfig)\r\n   */\r\n  @Input() delay: number;\r\n\r\n  /**\r\n   * Auto hide the toast after a delay in ms.\r\n   * default: `true` (inherited from NgbToastConfig)\r\n   */\r\n  @Input() autohide: boolean;\r\n\r\n  /**\r\n   * Text to be used as toast's header.\r\n   * Ignored if a ContentChild template is specified at the same time.\r\n   */\r\n  @Input() header: string;\r\n\r\n  /**\r\n   * A template like `<ng-template ngbToastHeader></ng-template>` can be\r\n   * used in the projected content to allow markup usage.\r\n   */\r\n  @ContentChild(NgbToastHeader, {read: TemplateRef, static: true}) contentHeaderTpl: TemplateRef<any>| null = null;\r\n\r\n  /**\r\n   * An event fired after the animation triggered by calling `.show()` method has finished.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() shown = new EventEmitter<void>();\r\n\r\n  /**\r\n   * An event fired after the animation triggered by calling `.hide()` method has finished.\r\n   *\r\n   * It can only occur in 2 different scenarios:\r\n   * - `autohide` timeout fires\r\n   * - user clicks on a closing cross\r\n   *\r\n   * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\r\n   * to the user to take care of that.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Output() hidden = new EventEmitter<void>();\r\n\r\n  constructor(\r\n      @Attribute('aria-live') public ariaLive: string, config: NgbToastConfig, private _zone: NgZone,\r\n      private _element: ElementRef) {\r\n    if (this.ariaLive == null) {\r\n      this.ariaLive = config.ariaLive;\r\n    }\r\n    this.delay = config.delay;\r\n    this.autohide = config.autohide;\r\n    this.animation = config.animation;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n      this._init();\r\n      this.show();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if ('autohide' in changes) {\r\n      this._clearTimeout();\r\n      this._init();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Triggers toast closing programmatically.\r\n   *\r\n   * The returned observable will emit and be completed once the closing transition has finished.\r\n   * If the animations are turned off this happens synchronously.\r\n   *\r\n   * Alternatively you could listen or subscribe to the `(hidden)` output\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  hide(): Observable<void> {\r\n    this._clearTimeout();\r\n    const transition = ngbRunTransition(\r\n        this._zone, this._element.nativeElement, ngbToastFadeOutTransition,\r\n        {animation: this.animation, runningTransition: 'stop'});\r\n    transition.subscribe(() => { this.hidden.emit(); });\r\n    return transition;\r\n  }\r\n\r\n  /**\r\n   * Triggers toast opening programmatically.\r\n   *\r\n   * The returned observable will emit and be completed once the opening transition has finished.\r\n   * If the animations are turned off this happens synchronously.\r\n   *\r\n   * Alternatively you could listen or subscribe to the `(shown)` output\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  show(): Observable<void> {\r\n    const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeInTransition, {\r\n      animation: this.animation,\r\n      runningTransition: 'continue',\r\n    });\r\n    transition.subscribe(() => { this.shown.emit(); });\r\n    return transition;\r\n  }\r\n\r\n  private _init() {\r\n    if (this.autohide && !this._timeoutID) {\r\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\r\n    }\r\n  }\r\n\r\n  private _clearTimeout() {\r\n    if (this._timeoutID) {\r\n      clearTimeout(this._timeoutID);\r\n      this._timeoutID = null;\r\n    }\r\n  }\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {NgbToast, NgbToastHeader} from './toast';\r\n\r\nexport {NgbToast, NgbToastHeader} from './toast';\r\nexport {NgbToastConfig, NgbToastOptions} from './toast-config';\r\n\r\n@NgModule({declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader]})\r\nexport class NgbToastModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {PlacementArray} from '../util/positioning';\r\nimport {NgbConfig} from '../ngb-config';\r\n\r\n/**\r\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the tooltips used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbTooltipConfig {\r\n  autoClose: boolean | 'inside' | 'outside' = true;\r\n  placement: PlacementArray = 'auto';\r\n  triggers = 'hover focus';\r\n  container: string;\r\n  disableTooltip = false;\r\n  tooltipClass: string;\r\n  openDelay = 0;\r\n  closeDelay = 0;\r\n\r\n  private _animation: boolean;\r\n\r\n  constructor(private _ngbConfig: NgbConfig) {}\r\n\r\n  get animation(): boolean { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\r\n  set animation(animation: boolean) { this._animation = animation; }\r\n}\r\n","import {\r\n  Component,\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy,\r\n  Inject,\r\n  Injector,\r\n  Renderer2,\r\n  ComponentRef,\r\n  ElementRef,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  ComponentFactoryResolver,\r\n  NgZone,\r\n  ViewEncapsulation,\r\n  ChangeDetectorRef,\r\n  ApplicationRef,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\nimport {listenToTriggers} from '../util/triggers';\r\nimport {ngbAutoClose} from '../util/autoclose';\r\nimport {positionElements, PlacementArray} from '../util/positioning';\r\nimport {PopupService} from '../util/popup';\r\n\r\nimport {NgbTooltipConfig} from './tooltip-config';\r\n\r\nlet nextId = 0;\r\n\r\n@Component({\r\n  selector: 'ngb-tooltip-window',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    '[class]': '\"tooltip\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\r\n    '[class.fade]': 'animation',\r\n    'role': 'tooltip',\r\n    '[id]': 'id'\r\n  },\r\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\r\n  styleUrls: ['./tooltip.scss']\r\n})\r\nexport class NgbTooltipWindow {\r\n  @Input() animation: boolean;\r\n  @Input() id: string;\r\n  @Input() tooltipClass: string;\r\n}\r\n\r\n/**\r\n * A lightweight and extensible directive for fancy tooltip creation.\r\n */\r\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\r\nexport class NgbTooltip implements OnInit, OnDestroy, OnChanges {\r\n  static ngAcceptInputType_autoClose: boolean | string;\r\n\r\n  /**\r\n   * If `true`, tooltip opening and closing will be animated.\r\n   *\r\n   * @since 8.0.0\r\n   */\r\n  @Input() animation: boolean;\r\n\r\n  /**\r\n   * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\r\n   *\r\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\r\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\r\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\r\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\r\n   * as well as `Escape` presses\r\n   *\r\n   * @since 3.0.0\r\n   */\r\n  @Input() autoClose: boolean | 'inside' | 'outside';\r\n\r\n  /**\r\n   * The preferred placement of the tooltip.\r\n   *\r\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\r\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\r\n   * `\"right-bottom\"`\r\n   *\r\n   * Accepts an array of strings or a string with space separated possible values.\r\n   *\r\n   * The default order of preference is `\"auto\"` (same as the sequence above).\r\n   *\r\n   * Please see the [positioning overview](#/positioning) for more details.\r\n   */\r\n  @Input() placement: PlacementArray;\r\n\r\n  /**\r\n   * Specifies events that should trigger the tooltip.\r\n   *\r\n   * Supports a space separated list of event names.\r\n   * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\r\n   */\r\n  @Input() triggers: string;\r\n\r\n  /**\r\n   * A selector specifying the element the tooltip should be appended to.\r\n   *\r\n   * Currently only supports `\"body\"`.\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * If `true`, tooltip is disabled and won't be displayed.\r\n   *\r\n   * @since 1.1.0\r\n   */\r\n  @Input() disableTooltip: boolean;\r\n\r\n  /**\r\n   * An optional class applied to the tooltip window element.\r\n   *\r\n   * @since 3.2.0\r\n   */\r\n  @Input() tooltipClass: string;\r\n\r\n  /**\r\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  @Input() openDelay: number;\r\n\r\n  /**\r\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  @Input() closeDelay: number;\r\n\r\n  /**\r\n   * An event emitted when the tooltip opening animation has finished. Contains no payload.\r\n   */\r\n  @Output() shown = new EventEmitter();\r\n\r\n  /**\r\n   * An event emitted when the tooltip closing animation has finished. Contains no payload.\r\n   */\r\n  @Output() hidden = new EventEmitter();\r\n\r\n  private _ngbTooltip: string | TemplateRef<any>| null | undefined;\r\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\r\n  private _popupService: PopupService<NgbTooltipWindow>;\r\n  private _windowRef: ComponentRef<NgbTooltipWindow>| null = null;\r\n  private _unregisterListenersFn;\r\n  private _zoneSubscription: any;\r\n\r\n  constructor(\r\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\r\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\r\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\r\n      applicationRef: ApplicationRef) {\r\n    this.animation = config.animation;\r\n    this.autoClose = config.autoClose;\r\n    this.placement = config.placement;\r\n    this.triggers = config.triggers;\r\n    this.container = config.container;\r\n    this.disableTooltip = config.disableTooltip;\r\n    this.tooltipClass = config.tooltipClass;\r\n    this.openDelay = config.openDelay;\r\n    this.closeDelay = config.closeDelay;\r\n    this._popupService = new PopupService<NgbTooltipWindow>(\r\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver,\r\n        applicationRef);\r\n\r\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\r\n      if (this._windowRef) {\r\n        positionElements(\r\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\r\n            this.container === 'body', 'bs-tooltip');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\r\n   *\r\n   * If the content if falsy, the tooltip won't open.\r\n   */\r\n  @Input()\r\n  set ngbTooltip(value: string | TemplateRef<any>| null | undefined) {\r\n    this._ngbTooltip = value;\r\n    if (!value && this._windowRef) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  get ngbTooltip() { return this._ngbTooltip; }\r\n\r\n  /**\r\n   * Opens the tooltip.\r\n   *\r\n   * This is considered to be a \"manual\" triggering.\r\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\r\n   */\r\n  open(context?: any) {\r\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\r\n      const {windowRef, transition$} = this._popupService.open(this._ngbTooltip, context, this.animation);\r\n      this._windowRef = windowRef;\r\n      this._windowRef.instance.animation = this.animation;\r\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\r\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\r\n\r\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\r\n\r\n      if (this.container === 'body') {\r\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\r\n      }\r\n\r\n      // We need to detect changes, because we don't know where .open() might be called from.\r\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\r\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\r\n      this._windowRef.changeDetectorRef.detectChanges();\r\n\r\n      // We need to mark for check, because tooltip won't work inside the OnPush component.\r\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\r\n      // inside the template of an OnPush component and we change the tooltip from\r\n      // open -> closed, the expression in question won't be updated unless we explicitly\r\n      // mark the parent component to be checked.\r\n      this._windowRef.changeDetectorRef.markForCheck();\r\n\r\n      ngbAutoClose(\r\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\r\n          [this._windowRef.location.nativeElement]);\r\n\r\n      transition$.subscribe(() => this.shown.emit());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the tooltip.\r\n   *\r\n   * This is considered to be a \"manual\" triggering of the tooltip.\r\n   */\r\n  close(): void {\r\n    if (this._windowRef != null) {\r\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\r\n      this._popupService.close(this.animation).subscribe(() => {\r\n        this._windowRef = null;\r\n        this.hidden.emit();\r\n        this._changeDetector.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the tooltip.\r\n   *\r\n   * This is considered to be a \"manual\" triggering of the tooltip.\r\n   */\r\n  toggle(): void {\r\n    if (this._windowRef) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns `true`, if the popover is currently shown.\r\n   */\r\n  isOpen(): boolean { return this._windowRef != null; }\r\n\r\n  ngOnInit() {\r\n    this._unregisterListenersFn = listenToTriggers(\r\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\r\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\r\n  }\r\n\r\n  ngOnChanges({tooltipClass}: SimpleChanges) {\r\n    if (tooltipClass && this.isOpen()) {\r\n      this._windowRef !.instance.tooltipClass = tooltipClass.currentValue;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\r\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\r\n    if (this._unregisterListenersFn) {\r\n      this._unregisterListenersFn();\r\n    }\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\r\n\r\nexport {NgbTooltipConfig} from './tooltip-config';\r\nexport {NgbTooltip} from './tooltip';\r\nexport {Placement} from '../util/positioning';\r\n\r\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\r\nexport class NgbTooltipModule {\r\n}\r\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation} from '@angular/core';\r\nimport {regExpEscape, toString, removeAccents} from '../util/util';\r\n\r\n/**\r\n * A component that helps with text highlighting.\r\n *\r\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\r\n * highlighting:\r\n *\r\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\r\n */\r\n@Component({\r\n  selector: 'ngb-highlight',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\r\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\r\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\r\n  styleUrls: ['./highlight.scss']\r\n})\r\nexport class NgbHighlight implements OnChanges {\r\n  parts: string[];\r\n\r\n  /**\r\n   * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\r\n   */\r\n  @Input() highlightClass = 'ngb-highlight';\r\n\r\n  /**\r\n   * The text highlighting is added to.\r\n   *\r\n   * If the `term` is found inside this text, it will be highlighted.\r\n   * If the `term` contains array then all the items from it will be highlighted inside the text.\r\n   */\r\n  @Input() result?: string | null;\r\n\r\n  /**\r\n   * The term or array of terms to be highlighted.\r\n   * Since version `v4.2.0` term could be a `string[]`\r\n   */\r\n  @Input() term: string | readonly string[];\r\n\r\n  /**\r\n   * Boolean option to determine if the highlighting should be sensitive to accents or not.\r\n   *\r\n   * This feature is only available for browsers that implement the `String.normalize` function\r\n   * (typically not Internet Explorer).\r\n   * If you want to use this feature in a browser that does not implement `String.normalize`,\r\n   * you will have to include a polyfill in your application (`unorm` for example).\r\n   *\r\n   * @since 9.1.0\r\n   */\r\n  @Input() accentSensitive = true;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (!this.accentSensitive && !String.prototype.normalize) {\r\n      console.warn(\r\n          'The `accentSensitive` input in `ngb-highlight` cannot be set to `false` in a browser ' +\r\n          'that does not implement the `String.normalize` function. ' +\r\n          'You will have to include a polyfill in your application to use this feature in the current browser.');\r\n      this.accentSensitive = true;\r\n    }\r\n    const result = toString(this.result);\r\n\r\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\r\n    const prepareTerm = term => this.accentSensitive ? term : removeAccents(term);\r\n    const escapedTerms = terms.map(term => regExpEscape(prepareTerm(toString(term)))).filter(term => term);\r\n    const toSplit = this.accentSensitive ? result : removeAccents(result);\r\n\r\n    const parts = escapedTerms.length ? toSplit.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\r\n\r\n    if (this.accentSensitive) {\r\n      this.parts = parts;\r\n    } else {\r\n      let offset = 0;\r\n      this.parts = parts.map(part => result.substring(offset, offset += part.length));\r\n    }\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation} from '@angular/core';\r\n\r\nimport {toString} from '../util/util';\r\n\r\n/**\r\n * The context for the typeahead result template in case you want to override the default one.\r\n */\r\nexport interface ResultTemplateContext {\r\n  /**\r\n   * Your typeahead result item.\r\n   */\r\n  result: any;\r\n\r\n  /**\r\n   * Search term from the `<input>` used to get current result.\r\n   */\r\n  term: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngb-typeahead-window',\r\n  exportAs: 'ngbTypeaheadWindow',\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    '(mousedown)': '$event.preventDefault()',\r\n    '[class]': '\"dropdown-menu show\" + (popupClass ? \" \" + popupClass : \"\")',\r\n    'role': 'listbox',\r\n    '[id]': 'id'\r\n  },\r\n  template: `\r\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\r\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\r\n    </ng-template>\r\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\r\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\r\n        [id]=\"id + '-' + idx\"\r\n        [class.active]=\"idx === activeIdx\"\r\n        (mouseenter)=\"markActive(idx)\"\r\n        (click)=\"select(result)\">\r\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\r\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\r\n      </button>\r\n    </ng-template>\r\n  `\r\n})\r\nexport class NgbTypeaheadWindow implements OnInit {\r\n  activeIdx = 0;\r\n\r\n  /**\r\n   *  The id for the typeahead window. The id should be unique and the same\r\n   *  as the associated typeahead's id.\r\n   */\r\n  @Input() id: string;\r\n\r\n  /**\r\n   * Flag indicating if the first row should be active initially\r\n   */\r\n  @Input() focusFirst = true;\r\n\r\n  /**\r\n   * Typeahead match results to be displayed\r\n   */\r\n  @Input() results;\r\n\r\n  /**\r\n   * Search term used to get current results\r\n   */\r\n  @Input() term: string;\r\n\r\n  /**\r\n   * A function used to format a given result before display. This function should return a formatted string without any\r\n   * HTML markup\r\n   */\r\n  @Input() formatter = toString;\r\n\r\n  /**\r\n   * A template to override a matching result default display\r\n   */\r\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\r\n\r\n  /**\r\n  * A custom class to append to the typeahead window\r\n   *\r\n   * @since 9.1.0\r\n  */\r\n  @Input() popupClass: string;\r\n\r\n  /**\r\n   * Event raised when user selects a particular result row\r\n   */\r\n  @Output('select') selectEvent = new EventEmitter();\r\n\r\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\r\n\r\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\r\n\r\n  getActive() { return this.results[this.activeIdx]; }\r\n\r\n  markActive(activeIdx: number) {\r\n    this.activeIdx = activeIdx;\r\n    this._activeChanged();\r\n  }\r\n\r\n  next() {\r\n    if (this.activeIdx === this.results.length - 1) {\r\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\r\n    } else {\r\n      this.activeIdx++;\r\n    }\r\n    this._activeChanged();\r\n  }\r\n\r\n  prev() {\r\n    if (this.activeIdx < 0) {\r\n      this.activeIdx = this.results.length - 1;\r\n    } else if (this.activeIdx === 0) {\r\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\r\n    } else {\r\n      this.activeIdx--;\r\n    }\r\n    this._activeChanged();\r\n  }\r\n\r\n  resetActive() {\r\n    this.activeIdx = this.focusFirst ? 0 : -1;\r\n    this._activeChanged();\r\n  }\r\n\r\n  select(item) { this.selectEvent.emit(item); }\r\n\r\n  ngOnInit() { this.resetActive(); }\r\n\r\n  private _activeChanged() {\r\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\r\n  }\r\n}\r\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n\r\n\r\n// usefulness (and default value) of delay documented in Material's CDK\r\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\r\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\r\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\r\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\r\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\r\n  return 100;\r\n}\r\n\r\n\r\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\r\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\r\n\r\n  if (element == null && lazyCreate) {\r\n    element = document.createElement('div');\r\n\r\n    element.setAttribute('id', 'ngb-live');\r\n    element.setAttribute('aria-live', 'polite');\r\n    element.setAttribute('aria-atomic', 'true');\r\n\r\n    element.classList.add('sr-only');\r\n\r\n    document.body.appendChild(element);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class Live implements OnDestroy {\r\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\r\n\r\n  ngOnDestroy() {\r\n    const element = getLiveElement(this._document);\r\n    if (element) {\r\n      // if exists, it will always be attached to the <body>\r\n      element.parentElement !.removeChild(element);\r\n    }\r\n  }\r\n\r\n  say(message: string) {\r\n    const element = getLiveElement(this._document, true);\r\n    const delay = this._delay;\r\n\r\n    if (element != null) {\r\n      element.textContent = '';\r\n      const setText = () => element.textContent = message;\r\n      if (delay === null) {\r\n        setText();\r\n      } else {\r\n        setTimeout(setText, delay);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {PlacementArray} from '../util/positioning';\r\n\r\n/**\r\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\r\n *\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the typeaheads used in the application.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class NgbTypeaheadConfig {\r\n  container;\r\n  editable = true;\r\n  focusFirst = true;\r\n  showHint = false;\r\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  ApplicationRef,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {BehaviorSubject, fromEvent, Observable, of, OperatorFunction, Subject, Subscription} from 'rxjs';\r\nimport {map, switchMap, tap} from 'rxjs/operators';\r\n\r\nimport {Live} from '../util/accessibility/live';\r\nimport {ngbAutoClose} from '../util/autoclose';\r\nimport {Key} from '../util/key';\r\nimport {PopupService} from '../util/popup';\r\nimport {PlacementArray, positionElements} from '../util/positioning';\r\nimport {isDefined, toString} from '../util/util';\r\n\r\nimport {NgbTypeaheadConfig} from './typeahead-config';\r\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\r\n\r\n/**\r\n * An event emitted right before an item is selected from the result list.\r\n */\r\nexport interface NgbTypeaheadSelectItemEvent<T = any> {\r\n  /**\r\n   * The item from the result list about to be selected.\r\n   */\r\n  item: T;\r\n\r\n  /**\r\n   * Calling this function will prevent item selection from happening.\r\n   */\r\n  preventDefault: () => void;\r\n}\r\n\r\nlet nextWindowId = 0;\r\n\r\n/**\r\n * A directive providing a simple way of creating powerful typeaheads from any text input.\r\n */\r\n@Directive({\r\n  selector: 'input[ngbTypeahead]',\r\n  exportAs: 'ngbTypeahead',\r\n  host: {\r\n    '(blur)': 'handleBlur()',\r\n    '[class.open]': 'isPopupOpen()',\r\n    '(keydown)': 'handleKeyDown($event)',\r\n    '[autocomplete]': 'autocomplete',\r\n    'autocapitalize': 'off',\r\n    'autocorrect': 'off',\r\n    'role': 'combobox',\r\n    'aria-multiline': 'false',\r\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\r\n    '[attr.aria-activedescendant]': 'activeDescendant',\r\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\r\n    '[attr.aria-expanded]': 'isPopupOpen()'\r\n  },\r\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTypeahead), multi: true}]\r\n})\r\nexport class NgbTypeahead implements ControlValueAccessor,\r\n    OnInit, OnChanges, OnDestroy {\r\n  private _popupService: PopupService<NgbTypeaheadWindow>;\r\n  private _subscription: Subscription | null = null;\r\n  private _closed$ = new Subject();\r\n  private _inputValueBackup: string | null = null;\r\n  private _valueChanges: Observable<string>;\r\n  private _resubscribeTypeahead: BehaviorSubject<any>;\r\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>| null = null;\r\n  private _zoneSubscription: any;\r\n\r\n  /**\r\n   * The value for the `autocomplete` attribute for the `<input>` element.\r\n   *\r\n   * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\r\n   *\r\n   * @since 2.1.0\r\n   */\r\n  @Input() autocomplete = 'off';\r\n\r\n  /**\r\n   * A selector specifying the element the typeahead popup will be appended to.\r\n   *\r\n   * Currently only supports `\"body\"`.\r\n   */\r\n  @Input() container: string;\r\n\r\n  /**\r\n   * If `true`, model values will not be restricted only to items selected from the popup.\r\n   */\r\n  @Input() editable: boolean;\r\n\r\n  /**\r\n   * If `true`, the first item in the result list will always stay focused while typing.\r\n   */\r\n  @Input() focusFirst: boolean;\r\n\r\n  /**\r\n   * The function that converts an item from the result list to a `string` to display in the `<input>` field.\r\n   *\r\n   * It is called when the user selects something in the popup or the model value changes, so the input needs to\r\n   * be updated.\r\n   */\r\n  @Input() inputFormatter: (item: any) => string;\r\n\r\n  /**\r\n   * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\r\n   * to display in the typeahead popup.\r\n   *\r\n   * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\r\n   * popup will be closed.\r\n   *\r\n   * See the [basic example](#/components/typeahead/examples#basic) for more details.\r\n   *\r\n   * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\r\n   */\r\n  @Input() ngbTypeahead: OperatorFunction<string, readonly any[]>| null | undefined;\r\n\r\n  /**\r\n   * The function that converts an item from the result list to a `string` to display in the popup.\r\n   *\r\n   * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\r\n   *\r\n   * Alternatively for more complex markup in the popup you should use `resultTemplate`.\r\n   */\r\n  @Input() resultFormatter: (item: any) => string;\r\n\r\n  /**\r\n   * The template to override the way resulting items are displayed in the popup.\r\n   *\r\n   * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\r\n   *\r\n   * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\r\n   */\r\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\r\n\r\n  /**\r\n   * If `true`, will show the hint in the `<input>` when an item in the result list matches.\r\n   */\r\n  @Input() showHint: boolean;\r\n\r\n  /**\r\n   * The preferred placement of the typeahead.\r\n   *\r\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\r\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\r\n   * `\"right-bottom\"`\r\n   *\r\n   * Accepts an array of strings or a string with space separated possible values.\r\n   *\r\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\r\n   *\r\n   * Please see the [positioning overview](#/positioning) for more details.\r\n   */\r\n  @Input() placement: PlacementArray = 'bottom-left';\r\n\r\n  /**\r\n  * A custom class to append to the typeahead popup window\r\n  *\r\n  * Accepts a string containing CSS class to be applied on the `ngb-typeahead-window`.\r\n  *\r\n  * This can be used to provide instance-specific styling, ex. you can override popup window `z-index`\r\n  *\r\n  * @since 9.1.0\r\n  */\r\n  @Input() popupClass: string;\r\n\r\n  /**\r\n   * An event emitted right before an item is selected from the result list.\r\n   *\r\n   * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\r\n   */\r\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\r\n\r\n  activeDescendant: string | null = null;\r\n  popupId = `ngb-typeahead-${nextWindowId++}`;\r\n\r\n  private _onTouched = () => {};\r\n  private _onChange = (_: any) => {};\r\n\r\n  constructor(\r\n      private _elementRef: ElementRef<HTMLInputElement>, viewContainerRef: ViewContainerRef,\r\n      private _renderer: Renderer2, injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\r\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live, @Inject(DOCUMENT) private _document: any,\r\n      private _ngZone: NgZone, private _changeDetector: ChangeDetectorRef, applicationRef: ApplicationRef) {\r\n    this.container = config.container;\r\n    this.editable = config.editable;\r\n    this.focusFirst = config.focusFirst;\r\n    this.showHint = config.showHint;\r\n    this.placement = config.placement;\r\n\r\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\r\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\r\n\r\n    this._resubscribeTypeahead = new BehaviorSubject(null);\r\n\r\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\r\n        NgbTypeaheadWindow, injector, viewContainerRef, _renderer, this._ngZone, componentFactoryResolver,\r\n        applicationRef);\r\n\r\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\r\n      if (this.isPopupOpen()) {\r\n        positionElements(\r\n            this._elementRef.nativeElement, this._windowRef !.location.nativeElement, this.placement,\r\n            this.container === 'body');\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void { this._subscribeToUserInput(); }\r\n\r\n  ngOnChanges({ngbTypeahead}: SimpleChanges): void {\r\n    if (ngbTypeahead && !ngbTypeahead.firstChange) {\r\n      this._unsubscribeFromUserInput();\r\n      this._subscribeToUserInput();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._closePopup();\r\n    this._unsubscribeFromUserInput();\r\n    this._zoneSubscription.unsubscribe();\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\r\n\r\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\r\n\r\n  writeValue(value) {\r\n    this._writeInputValue(this._formatItemForInput(value));\r\n    if (this.showHint) {\r\n      this._inputValueBackup = value;\r\n    }\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  /**\r\n   * Dismisses typeahead popup window\r\n   */\r\n  dismissPopup() {\r\n    if (this.isPopupOpen()) {\r\n      this._resubscribeTypeahead.next(null);\r\n      this._closePopup();\r\n      if (this.showHint && this._inputValueBackup !== null) {\r\n        this._writeInputValue(this._inputValueBackup);\r\n      }\r\n      this._changeDetector.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if the typeahead popup window is displayed\r\n   */\r\n  isPopupOpen() { return this._windowRef != null; }\r\n\r\n  handleBlur() {\r\n    this._resubscribeTypeahead.next(null);\r\n    this._onTouched();\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (!this.isPopupOpen()) {\r\n      return;\r\n    }\r\n\r\n    // tslint:disable-next-line:deprecation\r\n    switch (event.which) {\r\n      case Key.ArrowDown:\r\n        event.preventDefault();\r\n        this._windowRef !.instance.next();\r\n        this._showHint();\r\n        break;\r\n      case Key.ArrowUp:\r\n        event.preventDefault();\r\n        this._windowRef !.instance.prev();\r\n        this._showHint();\r\n        break;\r\n      case Key.Enter:\r\n      case Key.Tab:\r\n        const result = this._windowRef !.instance.getActive();\r\n        if (isDefined(result)) {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          this._selectResult(result);\r\n        }\r\n        this._closePopup();\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _openPopup() {\r\n    if (!this.isPopupOpen()) {\r\n      this._inputValueBackup = this._elementRef.nativeElement.value;\r\n      const {windowRef} = this._popupService.open();\r\n      this._windowRef = windowRef;\r\n      this._windowRef.instance.id = this.popupId;\r\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\r\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\r\n      this._windowRef.instance.popupClass = this.popupClass;\r\n\r\n      if (this.container === 'body') {\r\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\r\n      }\r\n\r\n      this._changeDetector.markForCheck();\r\n\r\n      ngbAutoClose(\r\n          this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$,\r\n          [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\r\n    }\r\n  }\r\n\r\n  private _closePopup() {\r\n    this._popupService.close().subscribe(() => {\r\n      this._closed$.next();\r\n      this._windowRef = null;\r\n      this.activeDescendant = null;\r\n    });\r\n  }\r\n\r\n  private _selectResult(result: any) {\r\n    let defaultPrevented = false;\r\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\r\n    this._resubscribeTypeahead.next(null);\r\n\r\n    if (!defaultPrevented) {\r\n      this.writeValue(result);\r\n      this._onChange(result);\r\n    }\r\n  }\r\n\r\n  private _selectResultClosePopup(result: any) {\r\n    this._selectResult(result);\r\n    this._closePopup();\r\n  }\r\n\r\n  private _showHint() {\r\n    if (this.showHint && this._windowRef?.instance.hasActive() && this._inputValueBackup != null) {\r\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\r\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\r\n\r\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\r\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\r\n        this._elementRef.nativeElement['setSelectionRange'].apply(\r\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\r\n      } else {\r\n        this._writeInputValue(formattedVal);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _formatItemForInput(item: any): string {\r\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\r\n  }\r\n\r\n  private _writeInputValue(value: string): void {\r\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\r\n  }\r\n\r\n  private _subscribeToUserInput(): void {\r\n    const results$ = this._valueChanges.pipe(\r\n        tap(value => {\r\n          this._inputValueBackup = this.showHint ? value : null;\r\n          this._onChange(this.editable ? value : undefined);\r\n        }),\r\n        this.ngbTypeahead ? this.ngbTypeahead : () => of([]));\r\n\r\n    this._subscription = this._resubscribeTypeahead.pipe(switchMap(() => results$)).subscribe(results => {\r\n      if (!results || results.length === 0) {\r\n        this._closePopup();\r\n      } else {\r\n        this._openPopup();\r\n\r\n        this._windowRef !.instance.focusFirst = this.focusFirst;\r\n        this._windowRef !.instance.results = results;\r\n        this._windowRef !.instance.term = this._elementRef.nativeElement.value;\r\n        if (this.resultFormatter) {\r\n          this._windowRef !.instance.formatter = this.resultFormatter;\r\n        }\r\n        if (this.resultTemplate) {\r\n          this._windowRef !.instance.resultTemplate = this.resultTemplate;\r\n        }\r\n        this._windowRef !.instance.resetActive();\r\n\r\n        // The observable stream we are subscribing to might have async steps\r\n        // and if a component containing typeahead is using the OnPush strategy\r\n        // the change detection turn wouldn't be invoked automatically.\r\n        this._windowRef !.changeDetectorRef.detectChanges();\r\n\r\n        this._showHint();\r\n      }\r\n\r\n      // live announcer\r\n      const count = results ? results.length : 0;\r\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\r\n    });\r\n  }\r\n\r\n  private _unsubscribeFromUserInput() {\r\n    if (this._subscription) {\r\n      this._subscription.unsubscribe();\r\n    }\r\n    this._subscription = null;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {NgbHighlight} from './highlight';\r\nimport {NgbTypeaheadWindow} from './typeahead-window';\r\nimport {NgbTypeahead} from './typeahead';\r\n\r\nexport {NgbHighlight} from './highlight';\r\nexport {NgbTypeaheadWindow} from './typeahead-window';\r\nexport {NgbTypeaheadConfig} from './typeahead-config';\r\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\r\n\r\n@NgModule({\r\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\r\n  exports: [NgbTypeahead, NgbHighlight],\r\n  imports: [CommonModule],\r\n  entryComponents: [NgbTypeaheadWindow]\r\n})\r\nexport class NgbTypeaheadModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {NgbAccordionModule} from './accordion/accordion.module';\r\nimport {NgbAlertModule} from './alert/alert.module';\r\nimport {NgbButtonsModule} from './buttons/buttons.module';\r\nimport {NgbCarouselModule} from './carousel/carousel.module';\r\nimport {NgbCollapseModule} from './collapse/collapse.module';\r\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\r\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\r\nimport {NgbModalModule} from './modal/modal.module';\r\nimport {NgbNavModule} from './nav/nav.module';\r\nimport {NgbPaginationModule} from './pagination/pagination.module';\r\nimport {NgbPopoverModule} from './popover/popover.module';\r\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\r\nimport {NgbRatingModule} from './rating/rating.module';\r\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\r\nimport {NgbToastModule} from './toast/toast.module';\r\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\r\nimport {NgbTypeaheadModule} from './typeahead/typeahead.module';\r\n\r\n\r\n\r\nexport {\r\n  NgbAccordion,\r\n  NgbAccordionConfig,\r\n  NgbAccordionModule,\r\n  NgbPanel,\r\n  NgbPanelChangeEvent,\r\n  NgbPanelContent,\r\n  NgbPanelHeader,\r\n  NgbPanelHeaderContext,\r\n  NgbPanelTitle,\r\n  NgbPanelToggle\r\n} from './accordion/accordion.module';\r\nexport {NgbAlert, NgbAlertConfig, NgbAlertModule} from './alert/alert.module';\r\nexport {NgbButtonLabel, NgbButtonsModule, NgbCheckBox, NgbRadio, NgbRadioGroup} from './buttons/buttons.module';\r\nexport {\r\n  NgbCarousel,\r\n  NgbCarouselConfig,\r\n  NgbCarouselModule,\r\n  NgbSlide,\r\n  NgbSlideEvent,\r\n  NgbSlideEventDirection,\r\n  NgbSlideEventSource\r\n} from './carousel/carousel.module';\r\nexport {NgbCollapse, NgbCollapseConfig, NgbCollapseModule} from './collapse/collapse.module';\r\nexport {\r\n  NgbCalendar,\r\n  NgbCalendarGregorian,\r\n  NgbCalendarHebrew,\r\n  NgbCalendarIslamicCivil,\r\n  NgbCalendarIslamicUmalqura,\r\n  NgbCalendarPersian,\r\n  NgbCalendarBuddhist,\r\n  NgbDate,\r\n  NgbDateAdapter,\r\n  NgbDateNativeAdapter,\r\n  NgbDateNativeUTCAdapter,\r\n  NgbDateParserFormatter,\r\n  NgbDatepicker,\r\n  NgbDatepickerConfig,\r\n  NgbInputDatepickerConfig,\r\n  NgbDatepickerContent,\r\n  NgbDatepickerI18n,\r\n  NgbDatepickerI18nDefault,\r\n  NgbDatepickerI18nHebrew,\r\n  NgbDatepickerKeyboardService,\r\n  NgbDatepickerModule,\r\n  NgbDatepickerMonth,\r\n  NgbDatepickerNavigateEvent,\r\n  NgbDatepickerState,\r\n  NgbDateStruct,\r\n  NgbInputDatepicker,\r\n  NgbPeriod\r\n} from './datepicker/datepicker.module';\r\nexport {\r\n  NgbDropdown,\r\n  NgbDropdownAnchor,\r\n  NgbDropdownConfig,\r\n  NgbDropdownItem,\r\n  NgbDropdownMenu,\r\n  NgbDropdownModule,\r\n  NgbDropdownToggle,\r\n  NgbNavbar\r\n} from './dropdown/dropdown.module';\r\nexport {\r\n  ModalDismissReasons,\r\n  NgbActiveModal,\r\n  NgbModal,\r\n  NgbModalConfig,\r\n  NgbModalModule,\r\n  NgbModalOptions,\r\n  NgbModalRef\r\n} from './modal/modal.module';\r\nexport {\r\n  NgbNavChangeEvent,\r\n  NgbNavConfig,\r\n  NgbNav,\r\n  NgbNavContent,\r\n  NgbNavContentContext,\r\n  NgbNavItem,\r\n  NgbNavLink,\r\n  NgbNavModule,\r\n  NgbNavOutlet,\r\n  NgbNavPane\r\n} from './nav/nav.module';\r\nexport {\r\n  NgbPagination,\r\n  NgbPaginationConfig,\r\n  NgbPaginationEllipsis,\r\n  NgbPaginationFirst,\r\n  NgbPaginationLast,\r\n  NgbPaginationModule,\r\n  NgbPaginationNext,\r\n  NgbPaginationNumber,\r\n  NgbPaginationPrevious,\r\n  NgbPaginationPages\r\n} from './pagination/pagination.module';\r\nexport {NgbPopover, NgbPopoverConfig, NgbPopoverModule} from './popover/popover.module';\r\nexport {NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule} from './progressbar/progressbar.module';\r\nexport {NgbRating, NgbRatingConfig, NgbRatingModule} from './rating/rating.module';\r\nexport {\r\n  NgbTimeAdapter,\r\n  NgbTimepickerI18n,\r\n  NgbTimepicker,\r\n  NgbTimepickerConfig,\r\n  NgbTimepickerModule,\r\n  NgbTimeStruct\r\n} from './timepicker/timepicker.module';\r\nexport {NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule} from './toast/toast.module';\r\nexport {NgbTooltip, NgbTooltipConfig, NgbTooltipModule} from './tooltip/tooltip.module';\r\nexport {\r\n  NgbHighlight,\r\n  NgbTypeahead,\r\n  NgbTypeaheadConfig,\r\n  NgbTypeaheadModule,\r\n  NgbTypeaheadSelectItemEvent\r\n} from './typeahead/typeahead.module';\r\nexport {Placement} from './util/positioning';\r\n\r\nexport {NgbConfig} from './ngb-config';\r\n\r\n\r\nconst NGB_MODULES = [\r\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\r\n  NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,\r\n  NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule\r\n];\r\n\r\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\r\nexport class NgbModule {\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {NGB_CAROUSEL_DIRECTIVES as ɵa} from './carousel/carousel';\nexport {NGB_DATEPICKER_DATE_ADAPTER_FACTORY as ɵg,NgbDateStructAdapter as ɵh} from './datepicker/adapters/ngb-date-adapter';\nexport {NgbDatepickerDayView as ɵc} from './datepicker/datepicker-day-view';\nexport {NGB_DATEPICKER_18N_FACTORY as ɵf} from './datepicker/datepicker-i18n';\nexport {NgbDatepickerNavigation as ɵd} from './datepicker/datepicker-navigation';\nexport {NgbDatepickerNavigationSelect as ɵe} from './datepicker/datepicker-navigation-select';\nexport {NgbDatepickerService as ɵr} from './datepicker/datepicker-service';\nexport {NgbCalendarHijri as ɵz} from './datepicker/hijri/ngb-calendar-hijri';\nexport {NGB_DATEPICKER_CALENDAR_FACTORY as ɵb} from './datepicker/ngb-calendar';\nexport {NGB_DATEPICKER_PARSER_FORMATTER_FACTORY as ɵi,NgbDateISOParserFormatter as ɵj} from './datepicker/ngb-date-parser-formatter';\nexport {NgbModalBackdrop as ɵs} from './modal/modal-backdrop';\nexport {NgbModalStack as ɵu} from './modal/modal-stack';\nexport {NgbModalWindow as ɵt} from './modal/modal-window';\nexport {NgbPopoverWindow as ɵk} from './popover/popover';\nexport {NGB_DATEPICKER_TIME_ADAPTER_FACTORY as ɵl,NgbTimeStructAdapter as ɵm} from './timepicker/ngb-time-adapter';\nexport {NGB_TIMEPICKER_I18N_FACTORY as ɵn,NgbTimepickerI18nDefault as ɵo} from './timepicker/timepicker-i18n';\nexport {NgbTooltipWindow as ɵp} from './tooltip/tooltip';\nexport {NgbTypeaheadWindow as ɵq} from './typeahead/typeahead-window';\nexport {ARIA_LIVE_DELAY as ɵw,ARIA_LIVE_DELAY_FACTORY as ɵx,Live as ɵy} from './util/accessibility/live';\nexport {ContentRef as ɵba} from './util/popup';\nexport {ScrollBar as ɵv} from './util/scrollbar';"]},"metadata":{},"sourceType":"module"}