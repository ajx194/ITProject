{"version":3,"file":"ngx-filesaver.umd.js","sources":["ngx-filesaver/src/filesaver.service.ts","ngx-filesaver/src/filesaver.directive.ts","ngx-filesaver/src/filesaver.module.ts"],"names":["saveAs","Injectable","EventEmitter","HttpParams","ElementRef","HttpClient","__decorate","Input","Observable","Output","HostListener","Directive","NgModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { saveAs, FileSaverOptions } from 'file-saver';\n\n@Injectable({ providedIn: 'root' })\nexport class FileSaverService {\n  get isFileSaverSupported(): boolean {\n    try {\n      return !!new Blob();\n    } catch (e) {\n      return false;\n    }\n  }\n\n  genType(fileName?: string): string {\n    if (!fileName || fileName.lastIndexOf('.') === -1) {\n      return 'text/plain';\n    }\n    const type = fileName.substr(fileName.lastIndexOf('.') + 1);\n    switch (type) {\n      case 'txt':\n        return 'text/plain';\n      case 'xml':\n      case 'html':\n        return `text/${type}`;\n      case 'json':\n        return 'octet/stream';\n      default:\n        return `application/${type}`;\n    }\n  }\n\n  save(blob: Blob, fileName?: string, filtType?: string, option?: FileSaverOptions): void {\n    if (!blob) {\n      throw new Error('Data argument should be a blob instance');\n    }\n\n    const file = new Blob([blob], { type: filtType || blob.type || this.genType(fileName) });\n    saveAs(file, decodeURI(fileName || 'download'), option);\n  }\n\n  saveText(txt: string, fileName?: string, option?: FileSaverOptions): void {\n    const blob = new Blob([txt]);\n    this.save(blob, fileName, null, option);\n  }\n}\n","import { Directive, ElementRef, Input, HostListener, EventEmitter, Output } from '@angular/core';\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FileSaverOptions } from 'file-saver';\nimport { FileSaverService } from './filesaver.service';\n\n@Directive({\n  selector: '[fileSaver]',\n  exportAs: 'fileSaver',\n})\nexport class FileSaverDirective {\n  @Input() method = 'GET';\n  @Input() http: Observable<HttpResponse<Blob>>;\n  @Input() query: any;\n  @Input() header: any;\n  @Input() url: string;\n  @Input() fileName: string;\n  @Input() fsOptions: FileSaverOptions;\n  @Output() readonly success = new EventEmitter<HttpResponse<Blob>>();\n  @Output() readonly error = new EventEmitter<any>();\n\n  constructor(private el: ElementRef<HTMLButtonElement>, private fss: FileSaverService, private httpClient: HttpClient) {\n    if (!fss.isFileSaverSupported) {\n      el.nativeElement.classList.add(`filesaver__not-support`);\n    }\n  }\n\n  private getName(res: HttpResponse<Blob>) {\n    return decodeURI(this.fileName || res.headers.get('filename') || res.headers.get('x-filename'));\n  }\n\n  @HostListener('click')\n  _click() {\n    if (!this.fss.isFileSaverSupported) {\n      return;\n    }\n    let req = this.http;\n    if (!req) {\n      const params = new HttpParams();\n      const query = this.query || {};\n      // tslint:disable-next-line:forin\n      for (const item in query) {\n        params.set(item, query[item]);\n      }\n\n      req = this.httpClient.request(this.method, this.url, {\n        observe: 'response',\n        responseType: 'blob',\n        headers: this.header,\n        params,\n      });\n    }\n\n    this.setDisabled(true);\n    req.subscribe(\n      res => {\n        if (res.status !== 200 || res.body.size <= 0) {\n          this.error.emit(res);\n          return;\n        }\n        this.fss.save(res.body, this.getName(res), null, this.fsOptions);\n        this.success.emit(res);\n      },\n      err => this.error.emit(err),\n      () => this.setDisabled(false),\n    );\n  }\n\n  private setDisabled(status: boolean) {\n    const el = this.el.nativeElement;\n    el.disabled = status;\n    el.classList[status ? 'add' : 'remove'](`filesaver__disabled`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FileSaverDirective } from './filesaver.directive';\n\n@NgModule({\n  declarations: [FileSaverDirective],\n  exports: [FileSaverDirective],\n})\nexport class FileSaverModule {}\n"]}